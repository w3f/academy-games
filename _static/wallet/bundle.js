/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={9082:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createCurve=t.getHash=void 0;const n=r(9569),i=r(8089),o=r(6551);function s(e){return{hash:e,hmac:(t,...r)=>(0,n.hmac)(e,t,(0,i.concatBytes)(...r)),randomBytes:i.randomBytes}}t.getHash=s,t.createCurve=function(e,t){const r=t=>(0,o.weierstrass)({...e,...s(t)});return Object.freeze({...r(t),create:r})}},1525:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateBasic=t.wNAF=void 0;const n=r(4632),i=r(219),o=BigInt(0),s=BigInt(1);t.wNAF=function(e,t){const r=(e,t)=>{const r=t.negate();return e?r:t},n=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate:r,unsafeLadder(t,r){let n=e.ZERO,i=t;for(;r>o;)r&s&&(n=n.add(i)),i=i.double(),r>>=s;return n},precomputeWindow(e,t){const{windows:r,windowSize:i}=n(t),o=[];let s=e,a=s;for(let e=0;e<r;e++){a=s,o.push(a);for(let e=1;e<i;e++)a=a.add(s),o.push(a);s=a.double()}return o},wNAF(t,i,o){const{windows:a,windowSize:c}=n(t);let d=e.ZERO,u=e.BASE;const l=BigInt(2**t-1),f=2**t,h=BigInt(t);for(let e=0;e<a;e++){const t=e*c;let n=Number(o&l);o>>=h,n>c&&(n-=f,o+=s);const a=t,p=t+Math.abs(n)-1,b=e%2!=0,m=n<0;0===n?u=u.add(r(b,i[a])):d=d.add(r(m,i[p]))}return{p:d,f:u}},wNAFCached(e,t,r,n){const i=e._WINDOW_SIZE||1;let o=t.get(e);return o||(o=this.precomputeWindow(e,i),1!==i&&t.set(e,n(o))),this.wNAF(i,o,r)}}},t.validateBasic=function(e){return(0,n.validateField)(e.Fp),(0,i.validateObject)(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...(0,n.nLength)(e.n,e.nBitLength),...e,p:e.Fp.ORDER})}},3986:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.twistedEdwards=void 0;const n=r(4632),i=r(219),o=r(219),s=r(1525),a=BigInt(0),c=BigInt(1),d=BigInt(2),u=BigInt(8),l={zip215:!0};t.twistedEdwards=function(e){const t=function(e){const t=(0,s.validateBasic)(e);return i.validateObject(e,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}(e),{Fp:r,n:f,prehash:h,hash:p,randomBytes:b,nByteLength:m,h:y}=t,v=d**BigInt(8*m),w=r.create,g=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:r.sqrt(e*r.inv(t))}}catch(e){return{isValid:!1,value:a}}}),x=t.adjustScalarBytes||(e=>e),P=t.domain||((e,t,r)=>{if(t.length||r)throw new Error("Contexts/pre-hash are not supported");return e}),O=e=>"bigint"==typeof e&&a<e,k=(e,t)=>O(e)&&O(t)&&e<t,j=e=>e===a||k(e,v);function M(e,t){if(k(e,t))return e;throw new Error(`Expected valid scalar < ${t}, got ${typeof e} ${e}`)}function N(e){return e===a?e:M(e,f)}const T=new Map;function E(e){if(!(e instanceof B))throw new Error("ExtendedPoint expected")}class B{constructor(e,t,r,n){if(this.ex=e,this.ey=t,this.ez=r,this.et=n,!j(e))throw new Error("x required");if(!j(t))throw new Error("y required");if(!j(r))throw new Error("z required");if(!j(n))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof B)throw new Error("extended point not allowed");const{x:t,y:r}=e||{};if(!j(t)||!j(r))throw new Error("invalid affine point");return new B(t,r,c,w(t*r))}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.ez)));return e.map(((e,r)=>e.toAffine(t[r]))).map(B.fromAffine)}_setWindowSize(e){this._WINDOW_SIZE=e,T.delete(this)}assertValidity(){const{a:e,d:r}=t;if(this.is0())throw new Error("bad point: ZERO");const{ex:n,ey:i,ez:o,et:s}=this,a=w(n*n),c=w(i*i),d=w(o*o),u=w(d*d),l=w(a*e);if(w(d*w(l+c))!==w(u+w(r*w(a*c))))throw new Error("bad point: equation left != right (1)");if(w(n*i)!==w(o*s))throw new Error("bad point: equation left != right (2)")}equals(e){E(e);const{ex:t,ey:r,ez:n}=this,{ex:i,ey:o,ez:s}=e,a=w(t*s),c=w(i*n),d=w(r*s),u=w(o*n);return a===c&&d===u}is0(){return this.equals(B.ZERO)}negate(){return new B(w(-this.ex),this.ey,this.ez,w(-this.et))}double(){const{a:e}=t,{ex:r,ey:n,ez:i}=this,o=w(r*r),s=w(n*n),a=w(d*w(i*i)),c=w(e*o),u=r+n,l=w(w(u*u)-o-s),f=c+s,h=f-a,p=c-s,b=w(l*h),m=w(f*p),y=w(l*p),v=w(h*f);return new B(b,m,v,y)}add(e){E(e);const{a:r,d:n}=t,{ex:i,ey:o,ez:s,et:c}=this,{ex:u,ey:l,ez:f,et:h}=e;if(r===BigInt(-1)){const e=w((o-i)*(l+u)),t=w((o+i)*(l-u)),r=w(t-e);if(r===a)return this.double();const n=w(s*d*h),p=w(c*d*f),b=p+n,m=t+e,y=p-n,v=w(b*r),g=w(m*y),x=w(b*y),P=w(r*m);return new B(v,g,P,x)}const p=w(i*u),b=w(o*l),m=w(c*n*h),y=w(s*f),v=w((i+o)*(u+l)-p-b),g=y-m,x=y+m,P=w(b-r*p),O=w(v*g),k=w(x*P),j=w(v*P),M=w(g*x);return new B(O,k,M,j)}subtract(e){return this.add(e.negate())}wNAF(e){return L.wNAFCached(this,T,e,B.normalizeZ)}multiply(e){const{p:t,f:r}=this.wNAF(M(e,f));return B.normalizeZ([t,r])[0]}multiplyUnsafe(e){let t=N(e);return t===a?A:this.equals(A)||t===c?this:this.equals(z)?this.wNAF(t).p:L.unsafeLadder(this,t)}isSmallOrder(){return this.multiplyUnsafe(y).is0()}isTorsionFree(){return L.unsafeLadder(this,f).is0()}toAffine(e){const{ex:t,ey:n,ez:i}=this,o=this.is0();null==e&&(e=o?u:r.inv(i));const s=w(t*e),d=w(n*e),l=w(i*e);if(o)return{x:a,y:c};if(l!==c)throw new Error("invZ was invalid");return{x:s,y:d}}clearCofactor(){const{h:e}=t;return e===c?this:this.multiplyUnsafe(e)}static fromHex(e,n=!1){const{d:s,a:d}=t,u=r.BYTES,l=(e=(0,o.ensureBytes)("pointHex",e,u)).slice(),f=e[u-1];l[u-1]=-129&f;const h=i.bytesToNumberLE(l);h===a||M(h,n?v:r.ORDER);const p=w(h*h),b=w(p-c),m=w(s*p-d);let{isValid:y,value:x}=g(b,m);if(!y)throw new Error("Point.fromHex: invalid y coordinate");return 0!=(128&f)!=((x&c)===c)&&(x=w(-x)),B.fromAffine({x,y:h})}static fromPrivateKey(e){return H(e).point}toRawBytes(){const{x:e,y:t}=this.toAffine(),n=i.numberToBytesLE(t,r.BYTES);return n[n.length-1]|=e&c?128:0,n}toHex(){return i.bytesToHex(this.toRawBytes())}}B.BASE=new B(t.Gx,t.Gy,c,w(t.Gx*t.Gy)),B.ZERO=new B(a,c,c,a);const{BASE:z,ZERO:A}=B,L=(0,s.wNAF)(B,8*m);function U(e){return(0,n.mod)(e,f)}function S(e){return U(i.bytesToNumberLE(e))}function H(e){const t=m;e=(0,o.ensureBytes)("private key",e,t);const r=(0,o.ensureBytes)("hashed private key",p(e),2*t),n=x(r.slice(0,t)),i=r.slice(t,2*t),s=S(n),a=z.multiply(s),c=a.toRawBytes();return{head:n,prefix:i,scalar:s,point:a,pointBytes:c}}function X(e=new Uint8Array,...t){const r=i.concatBytes(...t);return S(p(P(r,(0,o.ensureBytes)("context",e),!!h)))}const I=l;return z._setWindowSize(8),{CURVE:t,getPublicKey:function(e){return H(e).pointBytes},sign:function(e,t,n={}){e=(0,o.ensureBytes)("message",e),h&&(e=h(e));const{prefix:s,scalar:a,pointBytes:c}=H(t),d=X(n.context,s,e),u=z.multiply(d).toRawBytes(),l=U(d+X(n.context,u,c,e)*a);N(l);const f=i.concatBytes(u,i.numberToBytesLE(l,r.BYTES));return(0,o.ensureBytes)("result",f,2*m)},verify:function(e,t,n,s=I){const{context:a,zip215:c}=s,d=r.BYTES;e=(0,o.ensureBytes)("signature",e,2*d),t=(0,o.ensureBytes)("message",t),h&&(t=h(t));const u=i.bytesToNumberLE(e.slice(d,2*d));let l,f,p;try{l=B.fromHex(n,c),f=B.fromHex(e.slice(0,d),c),p=z.multiplyUnsafe(u)}catch(e){return!1}const b=X(a,f.toRawBytes(),l.toRawBytes(),t);return f.add(l.multiplyUnsafe(b)).subtract(p).clearCofactor().equals(B.ZERO)},ExtendedPoint:B,utils:{getExtendedPublicKey:H,randomPrivateKey:()=>b(r.BYTES),precompute:(e=8,t=B.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}}},5134:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createHasher=t.isogenyMap=t.hash_to_field=t.expand_message_xof=t.expand_message_xmd=void 0;const n=r(4632),i=r(219),o=i.bytesToNumberBE;function s(e,t){if(e<0||e>=1<<8*t)throw new Error(`bad I2OSP call: value=${e} length=${t}`);const r=Array.from({length:t}).fill(0);for(let n=t-1;n>=0;n--)r[n]=255&e,e>>>=8;return new Uint8Array(r)}function a(e,t){const r=new Uint8Array(e.length);for(let n=0;n<e.length;n++)r[n]=e[n]^t[n];return r}function c(e){if(!(e instanceof Uint8Array))throw new Error("Uint8Array expected")}function d(e){if(!Number.isSafeInteger(e))throw new Error("number expected")}function u(e,t,r,n){c(e),c(t),d(r),t.length>255&&(t=n((0,i.concatBytes)((0,i.utf8ToBytes)("H2C-OVERSIZE-DST-"),t)));const{outputLen:o,blockLen:u}=n,l=Math.ceil(r/o);if(l>255)throw new Error("Invalid xmd length");const f=(0,i.concatBytes)(t,s(t.length,1)),h=s(0,u),p=s(r,2),b=new Array(l),m=n((0,i.concatBytes)(h,e,p,s(0,1),f));b[0]=n((0,i.concatBytes)(m,s(1,1),f));for(let e=1;e<=l;e++){const t=[a(m,b[e-1]),s(e+1,1),f];b[e]=n((0,i.concatBytes)(...t))}return(0,i.concatBytes)(...b).slice(0,r)}function l(e,t,r,n,o){if(c(e),c(t),d(r),t.length>255){const e=Math.ceil(2*n/8);t=o.create({dkLen:e}).update((0,i.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(t).digest()}if(r>65535||t.length>255)throw new Error("expand_message_xof: invalid lenInBytes");return o.create({dkLen:r}).update(e).update(s(r,2)).update(t).update(s(t.length,1)).digest()}function f(e,t,r){(0,i.validateObject)(r,{DST:"string",p:"bigint",m:"isSafeInteger",k:"isSafeInteger",hash:"hash"});const{p:s,k:a,m:f,hash:h,expand:p,DST:b}=r;c(e),d(t);const m=function(e){if(e instanceof Uint8Array)return e;if("string"==typeof e)return(0,i.utf8ToBytes)(e);throw new Error("DST must be Uint8Array or string")}(b),y=s.toString(2).length,v=Math.ceil((y+a)/8),w=t*f*v;let g;if("xmd"===p)g=u(e,m,w,h);else if("xof"===p)g=l(e,m,w,a,h);else{if("_internal_pass"!==p)throw new Error('expand must be "xmd" or "xof"');g=e}const x=new Array(t);for(let e=0;e<t;e++){const t=new Array(f);for(let r=0;r<f;r++){const i=v*(r+e*f),a=g.subarray(i,i+v);t[r]=(0,n.mod)(o(a),s)}x[e]=t}return x}t.expand_message_xmd=u,t.expand_message_xof=l,t.hash_to_field=f,t.isogenyMap=function(e,t){const r=t.map((e=>Array.from(e).reverse()));return(t,n)=>{const[i,o,s,a]=r.map((r=>r.reduce(((r,n)=>e.add(e.mul(r,t),n)))));return t=e.div(i,o),n=e.mul(n,e.div(s,a)),{x:t,y:n}}},t.createHasher=function(e,t,r){if("function"!=typeof t)throw new Error("mapToCurve() must be defined");return{hashToCurve(n,i){const o=f(n,2,{...r,DST:r.DST,...i}),s=e.fromAffine(t(o[0])),a=e.fromAffine(t(o[1])),c=s.add(a).clearCofactor();return c.assertValidity(),c},encodeToCurve(n,i){const o=f(n,1,{...r,DST:r.encodeDST,...i}),s=e.fromAffine(t(o[0])).clearCofactor();return s.assertValidity(),s}}}},4632:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hashToPrivateScalar=t.FpSqrtEven=t.FpSqrtOdd=t.Field=t.nLength=t.FpIsSquare=t.FpDiv=t.FpInvertBatch=t.FpPow=t.validateField=t.isNegativeLE=t.FpSqrt=t.tonelliShanks=t.invert=t.pow2=t.pow=t.mod=void 0;const n=r(219),i=BigInt(0),o=BigInt(1),s=BigInt(2),a=BigInt(3),c=BigInt(4),d=BigInt(5),u=BigInt(8);function l(e,t){const r=e%t;return r>=i?r:t+r}function f(e,t,r){if(r<=i||t<i)throw new Error("Expected power/modulo > 0");if(r===o)return i;let n=o;for(;t>i;)t&o&&(n=n*e%r),e=e*e%r,t>>=o;return n}function h(e,t){if(e===i||t<=i)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=l(e,t),n=t,s=i,a=o,c=o,d=i;for(;r!==i;){const e=n/r,t=n%r,i=s-c*e,o=a-d*e;n=r,r=t,s=c,a=d,c=i,d=o}if(n!==o)throw new Error("invert: does not exist");return l(s,t)}function p(e){const t=(e-o)/s;let r,n,a;for(r=e-o,n=0;r%s===i;r/=s,n++);for(a=s;a<e&&f(a,t,e)!==e-o;a++);if(1===n){const t=(e+o)/c;return function(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error("Cannot find square root");return n}}const d=(r+o)/s;return function(e,i){if(e.pow(i,t)===e.neg(e.ONE))throw new Error("Cannot find square root");let s=n,c=e.pow(e.mul(e.ONE,a),r),u=e.pow(i,d),l=e.pow(i,r);for(;!e.eql(l,e.ONE);){if(e.eql(l,e.ZERO))return e.ZERO;let t=1;for(let r=e.sqr(l);t<s&&!e.eql(r,e.ONE);t++)r=e.sqr(r);const r=e.pow(c,o<<BigInt(s-t-1));c=e.sqr(r),u=e.mul(u,r),l=e.mul(l,c),s=t}return u}}function b(e){if(e%c===a){const t=(e+o)/c;return function(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error("Cannot find square root");return n}}if(e%u===d){const t=(e-d)/u;return function(e,r){const n=e.mul(r,s),i=e.pow(n,t),o=e.mul(r,i),a=e.mul(e.mul(o,s),i),c=e.mul(o,e.sub(a,e.ONE));if(!e.eql(e.sqr(c),r))throw new Error("Cannot find square root");return c}}return p(e)}BigInt(9),BigInt(16),t.mod=l,t.pow=f,t.pow2=function(e,t,r){let n=e;for(;t-- >i;)n*=n,n%=r;return n},t.invert=h,t.tonelliShanks=p,t.FpSqrt=b,t.isNegativeLE=(e,t)=>(l(e,t)&o)===o;const m=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function y(e,t,r){if(r<i)throw new Error("Expected power > 0");if(r===i)return e.ONE;if(r===o)return t;let n=e.ONE,s=t;for(;r>i;)r&o&&(n=e.mul(n,s)),s=e.sqr(s),r>>=o;return n}function v(e,t){const r=new Array(t.length),n=t.reduce(((t,n,i)=>e.is0(n)?t:(r[i]=t,e.mul(t,n))),e.ONE),i=e.inv(n);return t.reduceRight(((t,n,i)=>e.is0(n)?t:(r[i]=e.mul(t,r[i]),e.mul(t,n))),i),r}function w(e,t){const r=void 0!==t?t:e.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}t.validateField=function(e){const t=m.reduce(((e,t)=>(e[t]="function",e)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});return(0,n.validateObject)(e,t)},t.FpPow=y,t.FpInvertBatch=v,t.FpDiv=function(e,t,r){return e.mul(t,"bigint"==typeof r?h(r,e.ORDER):e.inv(r))},t.FpIsSquare=function(e){const t=(e.ORDER-o)/s;return r=>{const n=e.pow(r,t);return e.eql(n,e.ZERO)||e.eql(n,e.ONE)}},t.nLength=w,t.Field=function(e,t,r=!1,s={}){if(e<=i)throw new Error(`Expected Fp ORDER > 0, got ${e}`);const{nBitLength:a,nByteLength:c}=w(e,t);if(c>2048)throw new Error("Field lengths over 2048 bytes are not supported");const d=b(e),u=Object.freeze({ORDER:e,BITS:a,BYTES:c,MASK:(0,n.bitMask)(a),ZERO:i,ONE:o,create:t=>l(t,e),isValid:t=>{if("bigint"!=typeof t)throw new Error("Invalid field element: expected bigint, got "+typeof t);return i<=t&&t<e},is0:e=>e===i,isOdd:e=>(e&o)===o,neg:t=>l(-t,e),eql:(e,t)=>e===t,sqr:t=>l(t*t,e),add:(t,r)=>l(t+r,e),sub:(t,r)=>l(t-r,e),mul:(t,r)=>l(t*r,e),pow:(e,t)=>y(u,e,t),div:(t,r)=>l(t*h(r,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>h(t,e),sqrt:s.sqrt||(e=>d(u,e)),invertBatch:e=>v(u,e),cmov:(e,t,r)=>r?t:e,toBytes:e=>r?(0,n.numberToBytesLE)(e,c):(0,n.numberToBytesBE)(e,c),fromBytes:e=>{if(e.length!==c)throw new Error(`Fp.fromBytes: expected ${c}, got ${e.length}`);return r?(0,n.bytesToNumberLE)(e):(0,n.bytesToNumberBE)(e)}});return Object.freeze(u)},t.FpSqrtOdd=function(e,t){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const r=e.sqrt(t);return e.isOdd(r)?r:e.neg(r)},t.FpSqrtEven=function(e,t){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const r=e.sqrt(t);return e.isOdd(r)?e.neg(r):r},t.hashToPrivateScalar=function(e,t,r=!1){const i=(e=(0,n.ensureBytes)("privateHash",e)).length,s=w(t).nByteLength+8;if(s<24||i<s||i>1024)throw new Error(`hashToPrivateScalar: expected ${s}-1024 bytes of input, got ${i}`);return l(r?(0,n.bytesToNumberLE)(e):(0,n.bytesToNumberBE)(e),t-o)+o}},3924:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.montgomery=void 0;const n=r(4632),i=r(219),o=BigInt(0),s=BigInt(1);t.montgomery=function(e){const t=(r=e,(0,i.validateObject)(r,{a:"bigint"},{montgomeryBits:"isSafeInteger",nByteLength:"isSafeInteger",adjustScalarBytes:"function",domain:"function",powPminus2:"function",Gu:"bigint"}),Object.freeze({...r}));var r;const{P:a}=t,c=e=>(0,n.mod)(e,a),d=t.montgomeryBits,u=Math.ceil(d/8),l=t.nByteLength,f=t.adjustScalarBytes||(e=>e),h=t.powPminus2||(e=>(0,n.pow)(e,a-BigInt(2),a));function p(e,t,r){const n=c(e*(t-r));return[t=c(t-n),r=c(r+n)]}function b(e){if("bigint"==typeof e&&o<=e&&e<a)return e;throw new Error("Expected valid scalar 0 < scalar < CURVE.P")}const m=(t.a-BigInt(2))/BigInt(4);function y(e){return(0,i.numberToBytesLE)(c(e),u)}function v(e,t){const r=function(e){const t=(0,i.ensureBytes)("u coordinate",e,u);return l===u&&(t[l-1]&=127),(0,i.bytesToNumberLE)(t)}(t),n=function(e,t){const r=b(e),n=b(t),i=r;let a,u=s,l=o,f=r,y=s,v=o;for(let e=BigInt(d-1);e>=o;e--){const t=n>>e&s;v^=t,a=p(v,u,f),u=a[0],f=a[1],a=p(v,l,y),l=a[0],y=a[1],v=t;const r=u+l,o=c(r*r),d=u-l,h=c(d*d),b=o-h,w=f+y,g=c((f-y)*r),x=c(w*d),P=g+x,O=g-x;f=c(P*P),y=c(i*c(O*O)),u=c(o*h),l=c(b*(o+c(m*b)))}a=p(v,u,f),u=a[0],f=a[1],a=p(v,l,y),l=a[0],y=a[1];const w=h(l);return c(u*w)}(r,function(e){const t=(0,i.ensureBytes)("scalar",e);if(t.length!==u&&t.length!==l)throw new Error(`Expected ${u} or ${l} bytes, got ${t.length}`);return(0,i.bytesToNumberLE)(f(t))}(e));if(n===o)throw new Error("Invalid private or public key received");return y(n)}const w=y(t.Gu);function g(e){return v(e,w)}return{scalarMult:v,scalarMultBase:g,getSharedSecret:(e,t)=>v(e,t),getPublicKey:e=>g(e),utils:{randomPrivateKey:()=>t.randomBytes(t.nByteLength)},GuBytes:w}}},219:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateObject=t.createHmacDrbg=t.bitMask=t.bitSet=t.bitGet=t.bitLen=t.utf8ToBytes=t.equalBytes=t.concatBytes=t.ensureBytes=t.numberToVarBytesBE=t.numberToBytesLE=t.numberToBytesBE=t.bytesToNumberLE=t.bytesToNumberBE=t.hexToBytes=t.hexToNumber=t.numberToHexUnpadded=t.bytesToHex=void 0;const r=BigInt(0),n=BigInt(1),i=BigInt(2),o=e=>e instanceof Uint8Array,s=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function a(e){if(!o(e))throw new Error("Uint8Array expected");let t="";for(let r=0;r<e.length;r++)t+=s[e[r]];return t}function c(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function d(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function u(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);if(e.length%2)throw new Error("hex string is invalid: unpadded "+e.length);const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("invalid byte sequence");t[r]=o}return t}function l(...e){const t=new Uint8Array(e.reduce(((e,t)=>e+t.length),0));let r=0;return e.forEach((e=>{if(!o(e))throw new Error("Uint8Array expected");t.set(e,r),r+=e.length})),t}t.bytesToHex=a,t.numberToHexUnpadded=c,t.hexToNumber=d,t.hexToBytes=u,t.bytesToNumberBE=function(e){return d(a(e))},t.bytesToNumberLE=function(e){if(!o(e))throw new Error("Uint8Array expected");return d(a(Uint8Array.from(e).reverse()))},t.numberToBytesBE=(e,t)=>u(e.toString(16).padStart(2*t,"0")),t.numberToBytesLE=(e,r)=>(0,t.numberToBytesBE)(e,r).reverse(),t.numberToVarBytesBE=e=>u(c(e)),t.ensureBytes=function(e,t,r){let n;if("string"==typeof t)try{n=u(t)}catch(r){throw new Error(`${e} must be valid hex string, got "${t}". Cause: ${r}`)}else{if(!o(t))throw new Error(`${e} must be hex string or Uint8Array`);n=Uint8Array.from(t)}const i=n.length;if("number"==typeof r&&i!==r)throw new Error(`${e} expected ${r} bytes, got ${i}`);return n},t.concatBytes=l,t.equalBytes=function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0},t.utf8ToBytes=function(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)},t.bitLen=function(e){let t;for(t=0;e>r;e>>=n,t+=1);return t},t.bitGet=(e,t)=>e>>BigInt(t)&n,t.bitSet=(e,t,i)=>e|(i?n:r)<<BigInt(t),t.bitMask=e=>(i<<BigInt(e-1))-n;const f=e=>new Uint8Array(e),h=e=>Uint8Array.from(e);t.createHmacDrbg=function(e,t,r){if("number"!=typeof e||e<2)throw new Error("hashLen must be a number");if("number"!=typeof t||t<2)throw new Error("qByteLen must be a number");if("function"!=typeof r)throw new Error("hmacFn must be a function");let n=f(e),i=f(e),o=0;const s=()=>{n.fill(1),i.fill(0),o=0},a=(...e)=>r(i,n,...e),c=(e=f())=>{i=a(h([0]),e),n=a(),0!==e.length&&(i=a(h([1]),e),n=a())},d=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const r=[];for(;e<t;){n=a();const t=n.slice();r.push(t),e+=n.length}return l(...r)};return(e,t)=>{let r;for(s(),c(e);!(r=t(d()));)c();return s(),r}};const p={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};t.validateObject=function(e,t,r={}){const n=(t,r,n)=>{const i=p[r];if("function"!=typeof i)throw new Error(`Invalid validator "${r}", expected function`);const o=e[t];if(!(n&&void 0===o||i(o,e)))throw new Error(`Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`)};for(const[e,r]of Object.entries(t))n(e,r,!1);for(const[e,t]of Object.entries(r))n(e,t,!0);return e}},6551:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mapToCurveSimpleSWU=t.SWUFpSqrtRatio=t.weierstrass=t.weierstrassPoints=t.DER=void 0;const n=r(4632),i=r(219),o=r(219),s=r(1525),{bytesToNumberBE:a,hexToBytes:c}=i;t.DER={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(e){const{Err:r}=t.DER;if(e.length<2||2!==e[0])throw new r("Invalid signature integer tag");const n=e[1],i=e.subarray(2,n+2);if(!n||i.length!==n)throw new r("Invalid signature integer: wrong length");if(128&i[0])throw new r("Invalid signature integer: negative");if(0===i[0]&&!(128&i[1]))throw new r("Invalid signature integer: unnecessary leading zero");return{d:a(i),l:e.subarray(n+2)}},toSig(e){const{Err:r}=t.DER,n="string"==typeof e?c(e):e;if(!(n instanceof Uint8Array))throw new Error("ui8a expected");let i=n.length;if(i<2||48!=n[0])throw new r("Invalid signature tag");if(n[1]!==i-2)throw new r("Invalid signature: incorrect length");const{d:o,l:s}=t.DER._parseInt(n.subarray(2)),{d:a,l:d}=t.DER._parseInt(s);if(d.length)throw new r("Invalid signature: left bytes after parsing");return{r:o,s:a}},hexFromSig(e){const t=e=>8&Number.parseInt(e[0],16)?"00"+e:e,r=e=>{const t=e.toString(16);return 1&t.length?`0${t}`:t},n=t(r(e.s)),i=t(r(e.r)),o=n.length/2,s=i.length/2,a=r(o),c=r(s);return`30${r(s+o+4)}02${c}${i}02${a}${n}`}};const d=BigInt(0),u=BigInt(1),l=BigInt(2),f=BigInt(3),h=BigInt(4);function p(e){const t=function(e){const t=(0,s.validateBasic)(e);i.validateObject(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:r,Fp:n,a:o}=t;if(r){if(!n.eql(o,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof r||"bigint"!=typeof r.beta||"function"!=typeof r.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:r}=t,a=t.toBytes||((e,t,n)=>{const o=t.toAffine();return i.concatBytes(Uint8Array.from([4]),r.toBytes(o.x),r.toBytes(o.y))}),c=t.fromBytes||(e=>{const t=e.subarray(1);return{x:r.fromBytes(t.subarray(0,r.BYTES)),y:r.fromBytes(t.subarray(r.BYTES,2*r.BYTES))}});function l(e){const{a:n,b:i}=t,o=r.sqr(e),s=r.mul(o,e);return r.add(r.add(s,r.mul(e,n)),i)}if(!r.eql(r.sqr(t.Gy),l(t.Gx)))throw new Error("bad generator point: equation left != right");function h(e){return"bigint"==typeof e&&d<e&&e<t.n}function p(e){if(!h(e))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function b(e){const{allowedPrivateKeyLengths:r,nByteLength:s,wrapPrivateKey:a,n:c}=t;if(r&&"bigint"!=typeof e){if(e instanceof Uint8Array&&(e=i.bytesToHex(e)),"string"!=typeof e||!r.includes(e.length))throw new Error("Invalid key");e=e.padStart(2*s,"0")}let d;try{d="bigint"==typeof e?e:i.bytesToNumberBE((0,o.ensureBytes)("private key",e,s))}catch(t){throw new Error(`private key must be ${s} bytes, hex or bigint, not ${typeof e}`)}return a&&(d=n.mod(d,c)),p(d),d}const m=new Map;function y(e){if(!(e instanceof v))throw new Error("ProjectivePoint expected")}class v{constructor(e,t,n){if(this.px=e,this.py=t,this.pz=n,null==e||!r.isValid(e))throw new Error("x required");if(null==t||!r.isValid(t))throw new Error("y required");if(null==n||!r.isValid(n))throw new Error("z required")}static fromAffine(e){const{x:t,y:n}=e||{};if(!e||!r.isValid(t)||!r.isValid(n))throw new Error("invalid affine point");if(e instanceof v)throw new Error("projective point not allowed");const i=e=>r.eql(e,r.ZERO);return i(t)&&i(n)?v.ZERO:new v(t,n,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(v.fromAffine)}static fromHex(e){const t=v.fromAffine(c((0,o.ensureBytes)("pointHex",e)));return t.assertValidity(),t}static fromPrivateKey(e){return v.BASE.multiply(b(e))}_setWindowSize(e){this._WINDOW_SIZE=e,m.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint)return;throw new Error("bad point: ZERO")}const{x:e,y:n}=this.toAffine();if(!r.isValid(e)||!r.isValid(n))throw new Error("bad point: x or y not FE");const i=r.sqr(n),o=l(e);if(!r.eql(i,o))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:e}=this.toAffine();if(r.isOdd)return!r.isOdd(e);throw new Error("Field doesn't support isOdd")}equals(e){y(e);const{px:t,py:n,pz:i}=this,{px:o,py:s,pz:a}=e,c=r.eql(r.mul(t,a),r.mul(o,i)),d=r.eql(r.mul(n,a),r.mul(s,i));return c&&d}negate(){return new v(this.px,r.neg(this.py),this.pz)}double(){const{a:e,b:n}=t,i=r.mul(n,f),{px:o,py:s,pz:a}=this;let c=r.ZERO,d=r.ZERO,u=r.ZERO,l=r.mul(o,o),h=r.mul(s,s),p=r.mul(a,a),b=r.mul(o,s);return b=r.add(b,b),u=r.mul(o,a),u=r.add(u,u),c=r.mul(e,u),d=r.mul(i,p),d=r.add(c,d),c=r.sub(h,d),d=r.add(h,d),d=r.mul(c,d),c=r.mul(b,c),u=r.mul(i,u),p=r.mul(e,p),b=r.sub(l,p),b=r.mul(e,b),b=r.add(b,u),u=r.add(l,l),l=r.add(u,l),l=r.add(l,p),l=r.mul(l,b),d=r.add(d,l),p=r.mul(s,a),p=r.add(p,p),l=r.mul(p,b),c=r.sub(c,l),u=r.mul(p,h),u=r.add(u,u),u=r.add(u,u),new v(c,d,u)}add(e){y(e);const{px:n,py:i,pz:o}=this,{px:s,py:a,pz:c}=e;let d=r.ZERO,u=r.ZERO,l=r.ZERO;const h=t.a,p=r.mul(t.b,f);let b=r.mul(n,s),m=r.mul(i,a),w=r.mul(o,c),g=r.add(n,i),x=r.add(s,a);g=r.mul(g,x),x=r.add(b,m),g=r.sub(g,x),x=r.add(n,o);let P=r.add(s,c);return x=r.mul(x,P),P=r.add(b,w),x=r.sub(x,P),P=r.add(i,o),d=r.add(a,c),P=r.mul(P,d),d=r.add(m,w),P=r.sub(P,d),l=r.mul(h,x),d=r.mul(p,w),l=r.add(d,l),d=r.sub(m,l),l=r.add(m,l),u=r.mul(d,l),m=r.add(b,b),m=r.add(m,b),w=r.mul(h,w),x=r.mul(p,x),m=r.add(m,w),w=r.sub(b,w),w=r.mul(h,w),x=r.add(x,w),b=r.mul(m,x),u=r.add(u,b),b=r.mul(P,x),d=r.mul(g,d),d=r.sub(d,b),b=r.mul(g,m),l=r.mul(P,l),l=r.add(l,b),new v(d,u,l)}subtract(e){return this.add(e.negate())}is0(){return this.equals(v.ZERO)}wNAF(e){return g.wNAFCached(this,m,e,(e=>{const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(v.fromAffine)}))}multiplyUnsafe(e){const n=v.ZERO;if(e===d)return n;if(p(e),e===u)return this;const{endo:i}=t;if(!i)return g.unsafeLadder(this,e);let{k1neg:o,k1:s,k2neg:a,k2:c}=i.splitScalar(e),l=n,f=n,h=this;for(;s>d||c>d;)s&u&&(l=l.add(h)),c&u&&(f=f.add(h)),h=h.double(),s>>=u,c>>=u;return o&&(l=l.negate()),a&&(f=f.negate()),f=new v(r.mul(f.px,i.beta),f.py,f.pz),l.add(f)}multiply(e){p(e);let n,i,o=e;const{endo:s}=t;if(s){const{k1neg:e,k1:t,k2neg:a,k2:c}=s.splitScalar(o);let{p:d,f:u}=this.wNAF(t),{p:l,f}=this.wNAF(c);d=g.constTimeNegate(e,d),l=g.constTimeNegate(a,l),l=new v(r.mul(l.px,s.beta),l.py,l.pz),n=d.add(l),i=u.add(f)}else{const{p:e,f:t}=this.wNAF(o);n=e,i=t}return v.normalizeZ([n,i])[0]}multiplyAndAddUnsafe(e,t,r){const n=v.BASE,i=(e,t)=>t!==d&&t!==u&&e.equals(n)?e.multiply(t):e.multiplyUnsafe(t),o=i(this,t).add(i(e,r));return o.is0()?void 0:o}toAffine(e){const{px:t,py:n,pz:i}=this,o=this.is0();null==e&&(e=o?r.ONE:r.inv(i));const s=r.mul(t,e),a=r.mul(n,e),c=r.mul(i,e);if(o)return{x:r.ZERO,y:r.ZERO};if(!r.eql(c,r.ONE))throw new Error("invZ was invalid");return{x:s,y:a}}isTorsionFree(){const{h:e,isTorsionFree:r}=t;if(e===u)return!0;if(r)return r(v,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:e,clearCofactor:r}=t;return e===u?this:r?r(v,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),a(v,this,e)}toHex(e=!0){return i.bytesToHex(this.toRawBytes(e))}}v.BASE=new v(t.Gx,t.Gy,r.ONE),v.ZERO=new v(r.ZERO,r.ONE,r.ZERO);const w=t.nBitLength,g=(0,s.wNAF)(v,t.endo?Math.ceil(w/2):w);return{CURVE:t,ProjectivePoint:v,normPrivateKeyToScalar:b,weierstrassEquation:l,isWithinCurveOrder:h}}function b(e,t){const r=e.ORDER;let n=d;for(let e=r-u;e%l===d;e/=l)n+=u;const i=n,o=(r-u)/l**i,s=(o-u)/l,a=l**i-u,c=l**(i-u),p=e.pow(t,o),b=e.pow(t,(o+u)/l);let m=(t,r)=>{let n=p,o=e.pow(r,a),d=e.sqr(o);d=e.mul(d,r);let f=e.mul(t,d);f=e.pow(f,s),f=e.mul(f,o),o=e.mul(f,r),d=e.mul(f,t);let h=e.mul(d,o);f=e.pow(h,c);let m=e.eql(f,e.ONE);o=e.mul(d,b),f=e.mul(h,n),d=e.cmov(o,d,m),h=e.cmov(f,h,m);for(let t=i;t>u;t--){let r=l**(t-l),i=e.pow(h,r);const s=e.eql(i,e.ONE);o=e.mul(d,n),n=e.mul(n,n),i=e.mul(h,n),d=e.cmov(o,d,s),h=e.cmov(i,h,s)}return{isValid:m,value:d}};if(e.ORDER%h===f){const r=(e.ORDER-f)/h,n=e.sqrt(e.neg(t));m=(t,i)=>{let o=e.sqr(i);const s=e.mul(t,i);o=e.mul(o,s);let a=e.pow(o,r);a=e.mul(a,s);const c=e.mul(a,n),d=e.mul(e.sqr(a),i),u=e.eql(d,t);return{isValid:u,value:e.cmov(c,a,u)}}}return m}t.weierstrassPoints=p,t.weierstrass=function(e){const r=function(e){const t=(0,s.validateBasic)(e);return i.validateObject(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(e),{Fp:a,n:c}=r,l=a.BYTES+1,f=2*a.BYTES+1;function h(e){return n.mod(e,c)}function b(e){return n.invert(e,c)}const{ProjectivePoint:m,normPrivateKeyToScalar:y,weierstrassEquation:v,isWithinCurveOrder:w}=p({...r,toBytes(e,t,r){const n=t.toAffine(),o=a.toBytes(n.x),s=i.concatBytes;return r?s(Uint8Array.from([t.hasEvenY()?2:3]),o):s(Uint8Array.from([4]),o,a.toBytes(n.y))},fromBytes(e){const t=e.length,r=e[0],n=e.subarray(1);if(t!==l||2!==r&&3!==r){if(t===f&&4===r)return{x:a.fromBytes(n.subarray(0,a.BYTES)),y:a.fromBytes(n.subarray(a.BYTES,2*a.BYTES))};throw new Error(`Point of length ${t} was invalid. Expected ${l} compressed bytes or ${f} uncompressed bytes`)}{const e=i.bytesToNumberBE(n);if(!(d<(o=e)&&o<a.ORDER))throw new Error("Point is not on curve");const t=v(e);let s=a.sqrt(t);return 1==(1&r)!=((s&u)===u)&&(s=a.neg(s)),{x:e,y:s}}var o}}),g=e=>i.bytesToHex(i.numberToBytesBE(e,r.nByteLength));function x(e){return e>c>>u}const P=(e,t,r)=>i.bytesToNumberBE(e.slice(t,r));class O{constructor(e,t,r){this.r=e,this.s=t,this.recovery=r,this.assertValidity()}static fromCompact(e){const t=r.nByteLength;return e=(0,o.ensureBytes)("compactSignature",e,2*t),new O(P(e,0,t),P(e,t,2*t))}static fromDER(e){const{r,s:n}=t.DER.toSig((0,o.ensureBytes)("DER",e));return new O(r,n)}assertValidity(){if(!w(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!w(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new O(this.r,this.s,e)}recoverPublicKey(e){const{r:t,s:n,recovery:i}=this,s=N((0,o.ensureBytes)("msgHash",e));if(null==i||![0,1,2,3].includes(i))throw new Error("recovery id invalid");const c=2===i||3===i?t+r.n:t;if(c>=a.ORDER)throw new Error("recovery id 2 or 3 invalid");const d=0==(1&i)?"02":"03",u=m.fromHex(d+g(c)),l=b(c),f=h(-s*l),p=h(n*l),y=m.BASE.multiplyAndAddUnsafe(u,f,p);if(!y)throw new Error("point at infinify");return y.assertValidity(),y}hasHighS(){return x(this.s)}normalizeS(){return this.hasHighS()?new O(this.r,h(-this.s),this.recovery):this}toDERRawBytes(){return i.hexToBytes(this.toDERHex())}toDERHex(){return t.DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return i.hexToBytes(this.toCompactHex())}toCompactHex(){return g(this.r)+g(this.s)}}const k={isValidPrivateKey(e){try{return y(e),!0}catch(e){return!1}},normPrivateKeyToScalar:y,randomPrivateKey:()=>{const e=r.randomBytes(a.BYTES+8),t=n.hashToPrivateScalar(e,c);return i.numberToBytesBE(t,r.nByteLength)},precompute:(e=8,t=m.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)};function j(e){const t=e instanceof Uint8Array,r="string"==typeof e,n=(t||r)&&e.length;return t?n===l||n===f:r?n===2*l||n===2*f:e instanceof m}const M=r.bits2int||function(e){const t=i.bytesToNumberBE(e),n=8*e.length-r.nBitLength;return n>0?t>>BigInt(n):t},N=r.bits2int_modN||function(e){return h(M(e))},T=i.bitMask(r.nBitLength);function E(e){if("bigint"!=typeof e)throw new Error("bigint expected");if(!(d<=e&&e<T))throw new Error(`bigint expected < 2^${r.nBitLength}`);return i.numberToBytesBE(e,r.nByteLength)}const B={lowS:r.lowS,prehash:!1},z={lowS:r.lowS,prehash:!1};return m.BASE._setWindowSize(8),{CURVE:r,getPublicKey:function(e,t=!0){return m.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,r=!0){if(j(e))throw new Error("first arg must be private key");if(!j(t))throw new Error("second arg must be public key");return m.fromHex(t).multiply(y(e)).toRawBytes(r)},sign:function(e,t,n=B){const{seed:s,k2sig:c}=function(e,t,n=B){if(["recovered","canonical"].some((e=>e in n)))throw new Error("sign() legacy options not supported");const{hash:s,randomBytes:c}=r;let{lowS:l,prehash:f,extraEntropy:p}=n;null==l&&(l=!0),e=(0,o.ensureBytes)("msgHash",e),f&&(e=(0,o.ensureBytes)("prehashed msgHash",s(e)));const v=N(e),g=y(t),P=[E(g),E(v)];if(null!=p){const e=!0===p?c(a.BYTES):p;P.push((0,o.ensureBytes)("extraEntropy",e,a.BYTES))}const k=i.concatBytes(...P),j=v;return{seed:k,k2sig:function(e){const t=M(e);if(!w(t))return;const r=b(t),n=m.BASE.multiply(t).toAffine(),i=h(n.x);if(i===d)return;const o=h(r*h(j+i*g));if(o===d)return;let s=(n.x===i?0:2)|Number(n.y&u),a=o;return l&&x(o)&&(a=function(e){return x(e)?h(-e):e}(o),s^=1),new O(i,a,s)}}}(e,t,n);return i.createHmacDrbg(r.hash.outputLen,r.nByteLength,r.hmac)(s,c)},verify:function(e,n,i,s=z){const a=e;if(n=(0,o.ensureBytes)("msgHash",n),i=(0,o.ensureBytes)("publicKey",i),"strict"in s)throw new Error("options.strict was renamed to lowS");const{lowS:c,prehash:d}=s;let u,l;try{if("string"==typeof a||a instanceof Uint8Array)try{u=O.fromDER(a)}catch(e){if(!(e instanceof t.DER.Err))throw e;u=O.fromCompact(a)}else{if("object"!=typeof a||"bigint"!=typeof a.r||"bigint"!=typeof a.s)throw new Error("PARSE");{const{r:e,s:t}=a;u=new O(e,t)}}l=m.fromHex(i)}catch(e){if("PARSE"===e.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(c&&u.hasHighS())return!1;d&&(n=r.hash(n));const{r:f,s:p}=u,y=N(n),v=b(p),w=h(y*v),g=h(f*v),x=m.BASE.multiplyAndAddUnsafe(l,w,g)?.toAffine();return!!x&&h(x.x)===f},ProjectivePoint:m,Signature:O,utils:k}},t.SWUFpSqrtRatio=b,t.mapToCurveSimpleSWU=function(e,t){if(n.validateField(e),!e.isValid(t.A)||!e.isValid(t.B)||!e.isValid(t.Z))throw new Error("mapToCurveSimpleSWU: invalid opts");const r=b(e,t.Z);if(!e.isOdd)throw new Error("Fp.isOdd is not implemented!");return n=>{let i,o,s,a,c,d,u,l;i=e.sqr(n),i=e.mul(i,t.Z),o=e.sqr(i),o=e.add(o,i),s=e.add(o,e.ONE),s=e.mul(s,t.B),a=e.cmov(t.Z,e.neg(o),!e.eql(o,e.ZERO)),a=e.mul(a,t.A),o=e.sqr(s),d=e.sqr(a),c=e.mul(d,t.A),o=e.add(o,c),o=e.mul(o,s),d=e.mul(d,a),c=e.mul(d,t.B),o=e.add(o,c),u=e.mul(i,s);const{isValid:f,value:h}=r(o,d);l=e.mul(i,n),l=e.mul(l,h),u=e.cmov(u,s,f),l=e.cmov(l,h,f);const p=e.isOdd(n)===e.isOdd(l);return l=e.cmov(e.neg(l),l,p),u=e.div(u,a),{x:u,y:l}}}},2889:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hash_to_ristretto255=t.RistrettoPoint=t.encodeToCurve=t.hashToCurve=t.edwardsToMontgomery=t.x25519=t.ed25519ph=t.ed25519ctx=t.ed25519=t.ED25519_TORSION_SUBGROUP=void 0;const n=r(6262),i=r(8089),o=r(3986),s=r(3924),a=r(4632),c=r(219),d=r(5134),u=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),l=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),f=BigInt(0),h=BigInt(1),p=BigInt(2),b=BigInt(5),m=BigInt(10),y=BigInt(20),v=BigInt(40),w=BigInt(80);function g(e){const t=u,r=e*e%t*e%t,n=(0,a.pow2)(r,p,t)*r%t,i=(0,a.pow2)(n,h,t)*e%t,o=(0,a.pow2)(i,b,t)*i%t,s=(0,a.pow2)(o,m,t)*o%t,c=(0,a.pow2)(s,y,t)*s%t,d=(0,a.pow2)(c,v,t)*c%t,l=(0,a.pow2)(d,w,t)*d%t,f=(0,a.pow2)(l,w,t)*d%t,g=(0,a.pow2)(f,m,t)*o%t;return{pow_p_5_8:(0,a.pow2)(g,p,t)*e%t,b2:r}}function x(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function P(e,t){const r=u,n=(0,a.mod)(t*t*t,r),i=g(e*(0,a.mod)(n*n*t,r)).pow_p_5_8;let o=(0,a.mod)(e*n*i,r);const s=(0,a.mod)(t*o*o,r),c=o,d=(0,a.mod)(o*l,r),f=s===e,h=s===(0,a.mod)(-e,r),p=s===(0,a.mod)(-e*l,r);return f&&(o=c),(h||p)&&(o=d),(0,a.isNegativeLE)(o,r)&&(o=(0,a.mod)(-o,r)),{isValid:f||h,value:o}}t.ED25519_TORSION_SUBGROUP=["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"];const O=(0,a.Field)(u,void 0,!0),k={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:O,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:n.sha512,randomBytes:i.randomBytes,adjustScalarBytes:x,uvRatio:P};function j(e,t,r){if(t.length>255)throw new Error("Context is too big");return(0,i.concatBytes)((0,i.utf8ToBytes)("SigEd25519 no Ed25519 collisions"),new Uint8Array([r?1:0,t.length]),t,e)}t.ed25519=(0,o.twistedEdwards)(k),t.ed25519ctx=(0,o.twistedEdwards)({...k,domain:j}),t.ed25519ph=(0,o.twistedEdwards)({...k,domain:j,prehash:n.sha512}),t.x25519=(0,s.montgomery)({P:u,a:BigInt(486662),montgomeryBits:255,nByteLength:32,Gu:BigInt(9),powPminus2:e=>{const t=u,{pow_p_5_8:r,b2:n}=g(e);return(0,a.mod)((0,a.pow2)(r,BigInt(3),t)*n,t)},adjustScalarBytes:x,randomBytes:i.randomBytes}),t.edwardsToMontgomery=function(e){const{y:r}=t.ed25519.ExtendedPoint.fromHex(e),n=BigInt(1);return O.toBytes(O.create((r-n)*O.inv(r+n)))};const M=(O.ORDER+BigInt(3))/BigInt(8),N=O.pow(p,M),T=O.sqrt(O.neg(O.ONE)),E=(O.ORDER-BigInt(5))/BigInt(8),B=BigInt(486662),z=(0,a.FpSqrtEven)(O,O.neg(BigInt(486664)));const{hashToCurve:A,encodeToCurve:L}=d.createHasher(t.ed25519.ExtendedPoint,(e=>function(e){const{xMn:t,xMd:r,yMn:n,yMd:i}=function(e){let t=O.sqr(e);t=O.mul(t,p);let r=O.add(t,O.ONE),n=O.neg(B),i=O.sqr(r),o=O.mul(i,r),s=O.mul(t,B);s=O.mul(s,n),s=O.add(s,i),s=O.mul(s,n);let a=O.sqr(o);i=O.sqr(a),a=O.mul(a,o),a=O.mul(a,s),i=O.mul(i,a);let c=O.pow(i,E);c=O.mul(c,a);let d=O.mul(c,T);i=O.sqr(c),i=O.mul(i,o);let u=O.eql(i,s),l=O.cmov(d,c,u),f=O.mul(n,t),b=O.mul(c,e);b=O.mul(b,N);let m=O.mul(b,T),y=O.mul(s,t);i=O.sqr(b),i=O.mul(i,o);let v=O.eql(i,y),w=O.cmov(m,b,v);i=O.sqr(l),i=O.mul(i,o);let g=O.eql(i,s),x=O.cmov(f,n,g),P=O.cmov(w,l,g),k=O.isOdd(P);return P=O.cmov(P,O.neg(P),g!==k),{xMn:x,xMd:r,yMn:P,yMd:h}}(e);let o=O.mul(t,i);o=O.mul(o,z);let s=O.mul(r,n),a=O.sub(t,r),c=O.add(t,r),d=O.mul(s,c),u=O.eql(d,O.ZERO);o=O.cmov(o,O.ZERO,u),s=O.cmov(s,O.ONE,u),a=O.cmov(a,O.ONE,u),c=O.cmov(c,O.ONE,u);const l=O.invertBatch([s,c]);return{x:O.mul(o,l[0]),y:O.mul(a,l[1])}}(e[0])),{DST:"edwards25519_XMD:SHA-512_ELL2_RO_",encodeDST:"edwards25519_XMD:SHA-512_ELL2_NU_",p:O.ORDER,m:1,k:128,expand:"xmd",hash:n.sha512});function U(e){if(!(e instanceof q))throw new Error("RistrettoPoint expected")}t.hashToCurve=A,t.encodeToCurve=L;const S=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),H=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),X=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),I=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),R=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),D=e=>P(h,e),F=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),Z=e=>t.ed25519.CURVE.Fp.create((0,c.bytesToNumberLE)(e)&F);function V(e){const{d:r}=t.ed25519.CURVE,n=t.ed25519.CURVE.Fp.ORDER,i=t.ed25519.CURVE.Fp.create,o=i(S*e*e),s=i((o+h)*I);let c=BigInt(-1);const d=i((c-r*o)*i(o+r));let{isValid:u,value:l}=P(s,d),f=i(l*e);(0,a.isNegativeLE)(f,n)||(f=i(-f)),u||(l=f),u||(c=o);const p=i(c*(o-h)*R-d),b=l*l,m=i((l+l)*d),y=i(p*H),v=i(h-b),w=i(h+b);return new t.ed25519.ExtendedPoint(i(m*w),i(v*y),i(y*w),i(m*v))}class q{constructor(e){this.ep=e}static fromAffine(e){return new q(t.ed25519.ExtendedPoint.fromAffine(e))}static hashToCurve(e){e=(0,c.ensureBytes)("ristrettoHash",e,64);const t=V(Z(e.slice(0,32))),r=V(Z(e.slice(32,64)));return new q(t.add(r))}static fromHex(e){e=(0,c.ensureBytes)("ristrettoHex",e,32);const{a:r,d:n}=t.ed25519.CURVE,i=t.ed25519.CURVE.Fp.ORDER,o=t.ed25519.CURVE.Fp.create,s="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",d=Z(e);if(!(0,c.equalBytes)((0,c.numberToBytesLE)(d,32),e)||(0,a.isNegativeLE)(d,i))throw new Error(s);const u=o(d*d),l=o(h+r*u),p=o(h-r*u),b=o(l*l),m=o(p*p),y=o(r*n*b-m),{isValid:v,value:w}=D(o(y*m)),g=o(w*p),x=o(w*g*y);let P=o((d+d)*g);(0,a.isNegativeLE)(P,i)&&(P=o(-P));const O=o(l*x),k=o(P*O);if(!v||(0,a.isNegativeLE)(k,i)||O===f)throw new Error(s);return new q(new t.ed25519.ExtendedPoint(P,O,h,k))}toRawBytes(){let{ex:e,ey:r,ez:n,et:i}=this.ep;const o=t.ed25519.CURVE.Fp.ORDER,s=t.ed25519.CURVE.Fp.create,d=s(s(n+r)*s(n-r)),u=s(e*r),l=s(u*u),{value:f}=D(s(d*l)),h=s(f*d),p=s(f*u),b=s(h*p*i);let m;if((0,a.isNegativeLE)(i*b,o)){let t=s(r*S),n=s(e*S);e=t,r=n,m=s(h*X)}else m=p;(0,a.isNegativeLE)(e*b,o)&&(r=s(-r));let y=s((n-r)*m);return(0,a.isNegativeLE)(y,o)&&(y=s(-y)),(0,c.numberToBytesLE)(y,32)}toHex(){return(0,c.bytesToHex)(this.toRawBytes())}toString(){return this.toHex()}equals(e){U(e);const{ex:r,ey:n}=this.ep,{ex:i,ey:o}=e.ep,s=t.ed25519.CURVE.Fp.create,a=s(r*o)===s(n*i),c=s(n*o)===s(r*i);return a||c}add(e){return U(e),new q(this.ep.add(e.ep))}subtract(e){return U(e),new q(this.ep.subtract(e.ep))}multiply(e){return new q(this.ep.multiply(e))}multiplyUnsafe(e){return new q(this.ep.multiplyUnsafe(e))}}q.BASE=new q(t.ed25519.ExtendedPoint.BASE),q.ZERO=new q(t.ed25519.ExtendedPoint.ZERO),t.RistrettoPoint=q,t.hash_to_ristretto255=(e,t)=>{const r=t.DST,o="string"==typeof r?(0,i.utf8ToBytes)(r):r,s=d.expand_message_xmd(e,o,64,n.sha512);return q.hashToCurve(s)}},3497:(e,t,r)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.encodeToCurve=t.hashToCurve=t.schnorr=t.secp256k1=void 0;const i=r(3061),o=r(8089),s=r(4632),a=r(6551),c=r(219),d=r(5134),u=r(9082),l=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),f=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h=BigInt(1),p=BigInt(2),b=(e,t)=>(e+t/p)/t;function m(e){const t=l,r=BigInt(3),n=BigInt(6),i=BigInt(11),o=BigInt(22),a=BigInt(23),c=BigInt(44),d=BigInt(88),u=e*e*e%t,f=u*u*e%t,h=(0,s.pow2)(f,r,t)*f%t,b=(0,s.pow2)(h,r,t)*f%t,m=(0,s.pow2)(b,p,t)*u%t,v=(0,s.pow2)(m,i,t)*m%t,w=(0,s.pow2)(v,o,t)*v%t,g=(0,s.pow2)(w,c,t)*w%t,x=(0,s.pow2)(g,d,t)*g%t,P=(0,s.pow2)(x,c,t)*w%t,O=(0,s.pow2)(P,r,t)*f%t,k=(0,s.pow2)(O,a,t)*v%t,j=(0,s.pow2)(k,n,t)*u%t,M=(0,s.pow2)(j,p,t);if(!y.eql(y.sqr(M),e))throw new Error("Cannot find square root");return M}const y=(0,s.Field)(l,void 0,void 0,{sqrt:m});t.secp256k1=(0,u.createCurve)({a:BigInt(0),b:BigInt(7),Fp:y,n:f,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{const t=f,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-h*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=r,a=BigInt("0x100000000000000000000000000000000"),c=b(o*e,t),d=b(-n*e,t);let u=(0,s.mod)(e-c*r-d*i,t),l=(0,s.mod)(-c*n-d*o,t);const p=u>a,m=l>a;if(p&&(u=t-u),m&&(l=t-l),u>a||l>a)throw new Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:p,k1:u,k2neg:m,k2:l}}}},i.sha256);const v=BigInt(0),w=e=>"bigint"==typeof e&&v<e&&e<l,g={};function x(e,...t){let r=g[e];if(void 0===r){const t=(0,i.sha256)(Uint8Array.from(e,(e=>e.charCodeAt(0))));r=(0,c.concatBytes)(t,t),g[e]=r}return(0,i.sha256)((0,c.concatBytes)(r,...t))}const P=e=>e.toRawBytes(!0).slice(1),O=e=>(0,c.numberToBytesBE)(e,32),k=e=>(0,s.mod)(e,l),j=e=>(0,s.mod)(e,f),M=t.secp256k1.ProjectivePoint;function N(e){let r=t.secp256k1.utils.normPrivateKeyToScalar(e),n=M.fromPrivateKey(r);return{scalar:n.hasEvenY()?r:j(-r),bytes:P(n)}}function T(e){if(!w(e))throw new Error("bad x: need 0 < x < p");const t=k(e*e);let r=m(k(t*e+BigInt(7)));r%p!==v&&(r=k(-r));const n=new M(e,r,h);return n.assertValidity(),n}function E(...e){return j((0,c.bytesToNumberBE)(x("BIP0340/challenge",...e)))}function B(e,t,r){const n=(0,c.ensureBytes)("signature",e,64),i=(0,c.ensureBytes)("message",t),o=(0,c.ensureBytes)("publicKey",r,32);try{const e=T((0,c.bytesToNumberBE)(o)),t=(0,c.bytesToNumberBE)(n.subarray(0,32));if(!w(t))return!1;const r=(0,c.bytesToNumberBE)(n.subarray(32,64));if(!("bigint"==typeof(u=r)&&v<u&&u<f))return!1;const l=E(O(t),P(e),i),h=(s=e,a=r,d=j(-l),M.BASE.multiplyAndAddUnsafe(s,a,d));return!(!h||!h.hasEvenY()||h.toAffine().x!==t)}catch(e){return!1}var s,a,d,u}t.schnorr={getPublicKey:function(e){return N(e).bytes},sign:function(e,t,r=(0,o.randomBytes)(32)){const n=(0,c.ensureBytes)("message",e),{bytes:i,scalar:s}=N(t),a=(0,c.ensureBytes)("auxRand",r,32),d=O(s^(0,c.bytesToNumberBE)(x("BIP0340/aux",a))),u=x("BIP0340/nonce",d,i,n),l=j((0,c.bytesToNumberBE)(u));if(l===v)throw new Error("sign failed: k is zero");const{bytes:f,scalar:h}=N(l),p=E(f,i,n),b=new Uint8Array(64);if(b.set(f,0),b.set(O(j(h+p*s)),32),!B(b,n,i))throw new Error("sign: Invalid signature produced");return b},verify:B,utils:{randomPrivateKey:t.secp256k1.utils.randomPrivateKey,lift_x:T,pointToBytes:P,numberToBytesBE:c.numberToBytesBE,bytesToNumberBE:c.bytesToNumberBE,taggedHash:x,mod:s.mod}};const z=d.isogenyMap(y,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262","0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map((e=>e.map((e=>BigInt(e)))))),A=(0,a.mapToCurveSimpleSWU)(y,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:y.create(BigInt("-11"))});n=d.createHasher(t.secp256k1.ProjectivePoint,(e=>{const{x:t,y:r}=A(y.create(e[0]));return z(t,r)}),{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:y.ORDER,m:1,k:128,expand:"xmd",hash:i.sha256}),t.hashToCurve=n.hashToCurve,t.encodeToCurve=n.encodeToCurve},7320:(e,t)=>{"use strict";function r(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function n(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)}function i(e,...t){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function o(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");r(e.outputLen),r(e.blockLen)}function s(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function a(e,t){i(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}Object.defineProperty(t,"__esModule",{value:!0}),t.output=t.exists=t.hash=t.bytes=t.bool=t.number=void 0,t.number=r,t.bool=n,t.bytes=i,t.hash=o,t.exists=s,t.output=a;const c={number:r,bool:n,bytes:i,hash:o,exists:s,output:a};t.default=c},7395:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BLAKE2=t.SIGMA=void 0;const n=r(7320),i=r(8089);t.SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class o extends i.Hash{constructor(e,t,r={},o,s,a){if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,n.default.number(e),n.default.number(t),n.default.number(o),t<0||t>o)throw new Error("outputLen bigger than keyLen");if(void 0!==r.key&&(r.key.length<1||r.key.length>o))throw new Error(`key must be up 1..${o} byte long or undefined`);if(void 0!==r.salt&&r.salt.length!==s)throw new Error(`salt must be ${s} byte long or undefined`);if(void 0!==r.personalization&&r.personalization.length!==a)throw new Error(`personalization must be ${a} byte long or undefined`);this.buffer32=(0,i.u32)(this.buffer=new Uint8Array(e))}update(e){n.default.exists(this);const{blockLen:t,buffer:r,buffer32:o}=this,s=(e=(0,i.toBytes)(e)).length;for(let n=0;n<s;){this.pos===t&&(this.compress(o,0,!1),this.pos=0);const i=Math.min(t-this.pos,s-n),a=e.byteOffset+n;if(i!==t||a%4||!(n+i<s))r.set(e.subarray(n,n+i),this.pos),this.pos+=i,this.length+=i,n+=i;else{const r=new Uint32Array(e.buffer,a,Math.floor((s-n)/4));for(let e=0;n+t<s;e+=o.length,n+=t)this.length+=t,this.compress(r,e,!1)}}return this}digestInto(e){n.default.exists(this),n.default.output(e,this);const{pos:t,buffer32:r}=this;this.finished=!0,this.buffer.subarray(t).fill(0),this.compress(r,0,!0);const o=(0,i.u32)(e);this.get().forEach(((e,t)=>o[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){const{buffer:t,length:r,finished:n,destroyed:i,outputLen:o,pos:s}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=r,e.finished=n,e.destroyed=i,e.outputLen=o,e.buffer.set(t),e.pos=s,e}}t.BLAKE2=o},7505:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SHA2=void 0;const n=r(7320),i=r(8089);class o extends i.Hash{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,i.createView)(this.buffer)}update(e){n.default.exists(this);const{view:t,buffer:r,blockLen:o}=this,s=(e=(0,i.toBytes)(e)).length;for(let n=0;n<s;){const a=Math.min(o-this.pos,s-n);if(a!==o)r.set(e.subarray(n,n+a),this.pos),this.pos+=a,n+=a,this.pos===o&&(this.process(t,0),this.pos=0);else{const t=(0,i.createView)(e);for(;o<=s-n;n+=o)this.process(t,n)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){n.default.exists(this),n.default.output(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:o,isLE:s}=this;let{pos:a}=this;t[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>o-a&&(this.process(r,0),a=0);for(let e=a;e<o;e++)t[e]=0;!function(e,t,r,n){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,n);const i=BigInt(32),o=BigInt(4294967295),s=Number(r>>i&o),a=Number(r&o),c=n?4:0,d=n?0:4;e.setUint32(t+c,s,n),e.setUint32(t+d,a,n)}(r,o-8,BigInt(8*this.length),s),this.process(r,0);const c=(0,i.createView)(e),d=this.outputLen;if(d%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const u=d/4,l=this.get();if(u>l.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<u;e++)c.setUint32(4*e,l[e],s)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:n,finished:i,destroyed:o,pos:s}=this;return e.length=n,e.pos=s,e.finished=i,e.destroyed=o,n%t&&e.buffer.set(r),e}}t.SHA2=o},6873:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.add=t.toBig=t.split=t.fromBig=void 0;const r=BigInt(2**32-1),n=BigInt(32);function i(e,t=!1){return t?{h:Number(e&r),l:Number(e>>n&r)}:{h:0|Number(e>>n&r),l:0|Number(e&r)}}function o(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let o=0;o<e.length;o++){const{h:s,l:a}=i(e[o],t);[r[o],n[o]]=[s,a]}return[r,n]}function s(e,t,r,n){const i=(t>>>0)+(n>>>0);return{h:e+r+(i/2**32|0)|0,l:0|i}}t.fromBig=i,t.split=o,t.toBig=(e,t)=>BigInt(e>>>0)<<n|BigInt(t>>>0),t.add=s;const a={fromBig:i,split:o,toBig:t.toBig,shrSH:(e,t,r)=>e>>>r,shrSL:(e,t,r)=>e<<32-r|t>>>r,rotrSH:(e,t,r)=>e>>>r|t<<32-r,rotrSL:(e,t,r)=>e<<32-r|t>>>r,rotrBH:(e,t,r)=>e<<64-r|t>>>r-32,rotrBL:(e,t,r)=>e>>>r-32|t<<64-r,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,r)=>e<<r|t>>>32-r,rotlSL:(e,t,r)=>t<<r|e>>>32-r,rotlBH:(e,t,r)=>t<<r-32|e>>>64-r,rotlBL:(e,t,r)=>e<<r-32|t>>>64-r,add:s,add3L:(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),add3H:(e,t,r,n)=>t+r+n+(e/2**32|0)|0,add4L:(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),add4H:(e,t,r,n,i)=>t+r+n+i+(e/2**32|0)|0,add5H:(e,t,r,n,i,o)=>t+r+n+i+o+(e/2**32|0)|0,add5L:(e,t,r,n,i)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(i>>>0)};t.default=a},3803:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.blake2b=void 0;const n=r(7395),i=r(6873),o=r(8089),s=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),a=new Uint32Array(32);function c(e,t,r,n,o,s){const c=o[s],d=o[s+1];let u=a[2*e],l=a[2*e+1],f=a[2*t],h=a[2*t+1],p=a[2*r],b=a[2*r+1],m=a[2*n],y=a[2*n+1],v=i.default.add3L(u,f,c);l=i.default.add3H(v,l,h,d),u=0|v,({Dh:y,Dl:m}={Dh:y^l,Dl:m^u}),({Dh:y,Dl:m}={Dh:i.default.rotr32H(y,m),Dl:i.default.rotr32L(y,m)}),({h:b,l:p}=i.default.add(b,p,y,m)),({Bh:h,Bl:f}={Bh:h^b,Bl:f^p}),({Bh:h,Bl:f}={Bh:i.default.rotrSH(h,f,24),Bl:i.default.rotrSL(h,f,24)}),a[2*e]=u,a[2*e+1]=l,a[2*t]=f,a[2*t+1]=h,a[2*r]=p,a[2*r+1]=b,a[2*n]=m,a[2*n+1]=y}function d(e,t,r,n,o,s){const c=o[s],d=o[s+1];let u=a[2*e],l=a[2*e+1],f=a[2*t],h=a[2*t+1],p=a[2*r],b=a[2*r+1],m=a[2*n],y=a[2*n+1],v=i.default.add3L(u,f,c);l=i.default.add3H(v,l,h,d),u=0|v,({Dh:y,Dl:m}={Dh:y^l,Dl:m^u}),({Dh:y,Dl:m}={Dh:i.default.rotrSH(y,m,16),Dl:i.default.rotrSL(y,m,16)}),({h:b,l:p}=i.default.add(b,p,y,m)),({Bh:h,Bl:f}={Bh:h^b,Bl:f^p}),({Bh:h,Bl:f}={Bh:i.default.rotrBH(h,f,63),Bl:i.default.rotrBL(h,f,63)}),a[2*e]=u,a[2*e+1]=l,a[2*t]=f,a[2*t+1]=h,a[2*r]=p,a[2*r+1]=b,a[2*n]=m,a[2*n+1]=y}class u extends n.BLAKE2{constructor(e={}){super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|s[0],this.v0h=0|s[1],this.v1l=0|s[2],this.v1h=0|s[3],this.v2l=0|s[4],this.v2h=0|s[5],this.v3l=0|s[6],this.v3h=0|s[7],this.v4l=0|s[8],this.v4h=0|s[9],this.v5l=0|s[10],this.v5h=0|s[11],this.v6l=0|s[12],this.v6h=0|s[13],this.v7l=0|s[14],this.v7h=0|s[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=(0,o.u32)((0,o.toBytes)(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=(0,o.u32)((0,o.toBytes)(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set((0,o.toBytes)(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:r,v1h:n,v2l:i,v2h:o,v3l:s,v3h:a,v4l:c,v4h:d,v5l:u,v5h:l,v6l:f,v6h:h,v7l:p,v7h:b}=this;return[e,t,r,n,i,o,s,a,c,d,u,l,f,h,p,b]}set(e,t,r,n,i,o,s,a,c,d,u,l,f,h,p,b){this.v0l=0|e,this.v0h=0|t,this.v1l=0|r,this.v1h=0|n,this.v2l=0|i,this.v2h=0|o,this.v3l=0|s,this.v3h=0|a,this.v4l=0|c,this.v4h=0|d,this.v5l=0|u,this.v5h=0|l,this.v6l=0|f,this.v6h=0|h,this.v7l=0|p,this.v7h=0|b}compress(e,t,r){this.get().forEach(((e,t)=>a[t]=e)),a.set(s,16);let{h:o,l:u}=i.default.fromBig(BigInt(this.length));a[24]=s[8]^u,a[25]=s[9]^o,r&&(a[28]=~a[28],a[29]=~a[29]);let l=0;const f=n.SIGMA;for(let r=0;r<12;r++)c(0,4,8,12,e,t+2*f[l++]),d(0,4,8,12,e,t+2*f[l++]),c(1,5,9,13,e,t+2*f[l++]),d(1,5,9,13,e,t+2*f[l++]),c(2,6,10,14,e,t+2*f[l++]),d(2,6,10,14,e,t+2*f[l++]),c(3,7,11,15,e,t+2*f[l++]),d(3,7,11,15,e,t+2*f[l++]),c(0,5,10,15,e,t+2*f[l++]),d(0,5,10,15,e,t+2*f[l++]),c(1,6,11,12,e,t+2*f[l++]),d(1,6,11,12,e,t+2*f[l++]),c(2,7,8,13,e,t+2*f[l++]),d(2,7,8,13,e,t+2*f[l++]),c(3,4,9,14,e,t+2*f[l++]),d(3,4,9,14,e,t+2*f[l++]);this.v0l^=a[0]^a[16],this.v0h^=a[1]^a[17],this.v1l^=a[2]^a[18],this.v1h^=a[3]^a[19],this.v2l^=a[4]^a[20],this.v2h^=a[5]^a[21],this.v3l^=a[6]^a[22],this.v3h^=a[7]^a[23],this.v4l^=a[8]^a[24],this.v4h^=a[9]^a[25],this.v5l^=a[10]^a[26],this.v5h^=a[11]^a[27],this.v6l^=a[12]^a[28],this.v6h^=a[13]^a[29],this.v7l^=a[14]^a[30],this.v7h^=a[15]^a[31],a.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.blake2b=(0,o.wrapConstructorWithOpts)((e=>new u(e)))},1945:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.crypto=void 0,t.crypto="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0},9569:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmac=void 0;const n=r(7320),i=r(8089);class o extends i.Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,n.default.hash(e);const r=(0,i.toBytes)(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new TypeError("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let e=0;e<s.length;e++)s[e]^=54;this.iHash.update(s),this.oHash=e.create();for(let e=0;e<s.length;e++)s[e]^=106;this.oHash.update(s),s.fill(0)}update(e){return n.default.exists(this),this.iHash.update(e),this}digestInto(e){n.default.exists(this),n.default.bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:n,destroyed:i,blockLen:o,outputLen:s}=this;return e.finished=n,e.destroyed=i,e.blockLen=o,e.outputLen=s,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}t.hmac=(e,t,r)=>new o(e,t).update(r).digest(),t.hmac.create=(e,t)=>new o(e,t)},9023:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Async=t.pbkdf2=void 0;const n=r(7320),i=r(9569),o=r(8089);function s(e,t,r,s){n.default.hash(e);const a=(0,o.checkOpts)({dkLen:32,asyncTick:10},s),{c,dkLen:d,asyncTick:u}=a;if(n.default.number(c),n.default.number(d),n.default.number(u),c<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const l=(0,o.toBytes)(t),f=(0,o.toBytes)(r),h=new Uint8Array(d),p=i.hmac.create(e,l),b=p._cloneInto().update(f);return{c,dkLen:d,asyncTick:u,DK:h,PRF:p,PRFSalt:b}}function a(e,t,r,n,i){return e.destroy(),t.destroy(),n&&n.destroy(),i.fill(0),r}t.pbkdf2=function(e,t,r,n){const{c:i,dkLen:c,DK:d,PRF:u,PRFSalt:l}=s(e,t,r,n);let f;const h=new Uint8Array(4),p=(0,o.createView)(h),b=new Uint8Array(u.outputLen);for(let e=1,t=0;t<c;e++,t+=u.outputLen){const r=d.subarray(t,t+u.outputLen);p.setInt32(0,e,!1),(f=l._cloneInto(f)).update(h).digestInto(b),r.set(b.subarray(0,r.length));for(let e=1;e<i;e++){u._cloneInto(f).update(b).digestInto(b);for(let e=0;e<r.length;e++)r[e]^=b[e]}}return a(u,l,d,f,b)},t.pbkdf2Async=async function(e,t,r,n){const{c:i,dkLen:c,asyncTick:d,DK:u,PRF:l,PRFSalt:f}=s(e,t,r,n);let h;const p=new Uint8Array(4),b=(0,o.createView)(p),m=new Uint8Array(l.outputLen);for(let e=1,t=0;t<c;e++,t+=l.outputLen){const r=u.subarray(t,t+l.outputLen);b.setInt32(0,e,!1),(h=f._cloneInto(h)).update(p).digestInto(m),r.set(m.subarray(0,r.length)),await(0,o.asyncLoop)(i-1,d,(e=>{l._cloneInto(h).update(m).digestInto(m);for(let e=0;e<r.length;e++)r[e]^=m[e]}))}return a(l,f,u,h,m)}},9514:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptAsync=t.scrypt=void 0;const n=r(7320),i=r(3061),o=r(9023),s=r(8089),a=(e,t)=>e<<t|e>>>32-t;function c(e,t,r,n,i,o){let s=e[t++]^r[n++],c=e[t++]^r[n++],d=e[t++]^r[n++],u=e[t++]^r[n++],l=e[t++]^r[n++],f=e[t++]^r[n++],h=e[t++]^r[n++],p=e[t++]^r[n++],b=e[t++]^r[n++],m=e[t++]^r[n++],y=e[t++]^r[n++],v=e[t++]^r[n++],w=e[t++]^r[n++],g=e[t++]^r[n++],x=e[t++]^r[n++],P=e[t++]^r[n++],O=s,k=c,j=d,M=u,N=l,T=f,E=h,B=p,z=b,A=m,L=y,U=v,S=w,H=g,X=x,I=P;for(let e=0;e<8;e+=2)N^=a(O+S|0,7),z^=a(N+O|0,9),S^=a(z+N|0,13),O^=a(S+z|0,18),A^=a(T+k|0,7),H^=a(A+T|0,9),k^=a(H+A|0,13),T^=a(k+H|0,18),X^=a(L+E|0,7),j^=a(X+L|0,9),E^=a(j+X|0,13),L^=a(E+j|0,18),M^=a(I+U|0,7),B^=a(M+I|0,9),U^=a(B+M|0,13),I^=a(U+B|0,18),k^=a(O+M|0,7),j^=a(k+O|0,9),M^=a(j+k|0,13),O^=a(M+j|0,18),E^=a(T+N|0,7),B^=a(E+T|0,9),N^=a(B+E|0,13),T^=a(N+B|0,18),U^=a(L+A|0,7),z^=a(U+L|0,9),A^=a(z+U|0,13),L^=a(A+z|0,18),S^=a(I+X|0,7),H^=a(S+I|0,9),X^=a(H+S|0,13),I^=a(X+H|0,18);i[o++]=s+O|0,i[o++]=c+k|0,i[o++]=d+j|0,i[o++]=u+M|0,i[o++]=l+N|0,i[o++]=f+T|0,i[o++]=h+E|0,i[o++]=p+B|0,i[o++]=b+z|0,i[o++]=m+A|0,i[o++]=y+L|0,i[o++]=v+U|0,i[o++]=w+S|0,i[o++]=g+H|0,i[o++]=x+X|0,i[o++]=P+I|0}function d(e,t,r,n,i){let o=n+0,s=n+16*i;for(let n=0;n<16;n++)r[s+n]=e[t+16*(2*i-1)+n];for(let n=0;n<i;n++,o+=16,t+=16)c(r,s,e,t,r,o),n>0&&(s+=16),c(r,o,e,t+=16,r,s)}function u(e,t,r){const a=(0,s.checkOpts)({dkLen:32,asyncTick:10,maxmem:1073742848},r),{N:c,r:d,p:u,dkLen:l,asyncTick:f,maxmem:h,onProgress:p}=a;if(n.default.number(c),n.default.number(d),n.default.number(u),n.default.number(l),n.default.number(f),n.default.number(h),void 0!==p&&"function"!=typeof p)throw new Error("progressCb should be function");const b=128*d,m=b/4;if(c<=1||0!=(c&c-1)||c>=2**(b/8)||c>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(u<0||u>137438953440/b)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(l<0||l>137438953440)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const y=b*(c+u);if(y>h)throw new Error(`Scrypt: parameters too large, ${y} (128 * r * (N + p)) > ${h} (maxmem)`);const v=(0,o.pbkdf2)(i.sha256,e,t,{c:1,dkLen:b*u}),w=(0,s.u32)(v),g=(0,s.u32)(new Uint8Array(b*c)),x=(0,s.u32)(new Uint8Array(b));let P=()=>{};if(p){const e=2*c*u,t=Math.max(Math.floor(e/1e4),1);let r=0;P=()=>{r++,!p||r%t&&r!==e||p(r/e)}}return{N:c,r:d,p:u,dkLen:l,blockSize32:m,V:g,B32:w,B:v,tmp:x,blockMixCb:P,asyncTick:f}}function l(e,t,r,n,s){const a=(0,o.pbkdf2)(i.sha256,e,r,{c:1,dkLen:t});return r.fill(0),n.fill(0),s.fill(0),a}t.scrypt=function(e,t,r){const{N:n,r:i,p:o,dkLen:s,blockSize32:a,V:c,B32:f,B:h,tmp:p,blockMixCb:b}=u(e,t,r);for(let e=0;e<o;e++){const t=a*e;for(let e=0;e<a;e++)c[e]=f[t+e];for(let e=0,t=0;e<n-1;e++)d(c,t,c,t+=a,i),b();d(c,(n-1)*a,f,t,i),b();for(let e=0;e<n;e++){const e=f[t+a-16]%n;for(let r=0;r<a;r++)p[r]=f[t+r]^c[e*a+r];d(p,0,f,t,i),b()}}return l(e,s,h,c,p)},t.scryptAsync=async function(e,t,r){const{N:n,r:i,p:o,dkLen:a,blockSize32:c,V:f,B32:h,B:p,tmp:b,blockMixCb:m,asyncTick:y}=u(e,t,r);for(let e=0;e<o;e++){const t=c*e;for(let e=0;e<c;e++)f[e]=h[t+e];let r=0;await(0,s.asyncLoop)(n-1,y,(e=>{d(f,r,f,r+=c,i),m()})),d(f,(n-1)*c,h,t,i),m(),await(0,s.asyncLoop)(n,y,(e=>{const r=h[t+c-16]%n;for(let e=0;e<c;e++)b[e]=h[t+e]^f[r*c+e];d(b,0,h,t,i),m()}))}return l(e,a,p,f,b)}},3061:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha224=t.sha256=void 0;const n=r(7505),i=r(8089),o=(e,t,r)=>e&t^e&r^t&r,s=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),a=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),c=new Uint32Array(64);class d extends n.SHA2{constructor(){super(64,32,8,!1),this.A=0|a[0],this.B=0|a[1],this.C=0|a[2],this.D=0|a[3],this.E=0|a[4],this.F=0|a[5],this.G=0|a[6],this.H=0|a[7]}get(){const{A:e,B:t,C:r,D:n,E:i,F:o,G:s,H:a}=this;return[e,t,r,n,i,o,s,a]}set(e,t,r,n,i,o,s,a){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|n,this.E=0|i,this.F=0|o,this.G=0|s,this.H=0|a}process(e,t){for(let r=0;r<16;r++,t+=4)c[r]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=c[e-15],r=c[e-2],n=(0,i.rotr)(t,7)^(0,i.rotr)(t,18)^t>>>3,o=(0,i.rotr)(r,17)^(0,i.rotr)(r,19)^r>>>10;c[e]=o+c[e-7]+n+c[e-16]|0}let{A:r,B:n,C:a,D:d,E:u,F:l,G:f,H:h}=this;for(let e=0;e<64;e++){const t=h+((0,i.rotr)(u,6)^(0,i.rotr)(u,11)^(0,i.rotr)(u,25))+((p=u)&l^~p&f)+s[e]+c[e]|0,b=((0,i.rotr)(r,2)^(0,i.rotr)(r,13)^(0,i.rotr)(r,22))+o(r,n,a)|0;h=f,f=l,l=u,u=d+t|0,d=a,a=n,n=r,r=t+b|0}var p;r=r+this.A|0,n=n+this.B|0,a=a+this.C|0,d=d+this.D|0,u=u+this.E|0,l=l+this.F|0,f=f+this.G|0,h=h+this.H|0,this.set(r,n,a,d,u,l,f,h)}roundClean(){c.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class u extends d{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}t.sha256=(0,i.wrapConstructor)((()=>new d)),t.sha224=(0,i.wrapConstructor)((()=>new u))},5426:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.shake256=t.shake128=t.keccak_512=t.keccak_384=t.keccak_256=t.keccak_224=t.sha3_512=t.sha3_384=t.sha3_256=t.sha3_224=t.Keccak=t.keccakP=void 0;const n=r(7320),i=r(6873),o=r(8089),[s,a,c]=[[],[],[]],d=BigInt(0),u=BigInt(1),l=BigInt(2),f=BigInt(7),h=BigInt(256),p=BigInt(113);for(let e=0,t=u,r=1,n=0;e<24;e++){[r,n]=[n,(2*r+3*n)%5],s.push(2*(5*n+r)),a.push((e+1)*(e+2)/2%64);let i=d;for(let e=0;e<7;e++)t=(t<<u^(t>>f)*p)%h,t&l&&(i^=u<<(u<<BigInt(e))-u);c.push(i)}const[b,m]=i.default.split(c,!0),y=(e,t,r)=>r>32?i.default.rotlBH(e,t,r):i.default.rotlSH(e,t,r),v=(e,t,r)=>r>32?i.default.rotlBL(e,t,r):i.default.rotlSL(e,t,r);function w(e,t=24){const r=new Uint32Array(10);for(let n=24-t;n<24;n++){for(let t=0;t<10;t++)r[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const n=(t+8)%10,i=(t+2)%10,o=r[i],s=r[i+1],a=y(o,s,1)^r[n],c=v(o,s,1)^r[n+1];for(let r=0;r<50;r+=10)e[t+r]^=a,e[t+r+1]^=c}let t=e[2],i=e[3];for(let r=0;r<24;r++){const n=a[r],o=y(t,i,n),c=v(t,i,n),d=s[r];t=e[d],i=e[d+1],e[d]=o,e[d+1]=c}for(let t=0;t<50;t+=10){for(let n=0;n<10;n++)r[n]=e[t+n];for(let n=0;n<10;n++)e[t+n]^=~r[(n+2)%10]&r[(n+4)%10]}e[0]^=b[n],e[1]^=m[n]}r.fill(0)}t.keccakP=w;class g extends o.Hash{constructor(e,t,r,i=!1,s=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=r,this.enableXOF=i,this.rounds=s,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,n.default.number(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,o.u32)(this.state)}keccak(){w(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){n.default.exists(this);const{blockLen:t,state:r}=this,i=(e=(0,o.toBytes)(e)).length;for(let n=0;n<i;){const o=Math.min(t-this.pos,i-n);for(let t=0;t<o;t++)r[this.pos++]^=e[n++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:r,blockLen:n}=this;e[r]^=t,0!=(128&t)&&r===n-1&&this.keccak(),e[n-1]^=128,this.keccak()}writeInto(e){n.default.exists(this,!1),n.default.bytes(e),this.finish();const t=this.state,{blockLen:r}=this;for(let n=0,i=e.length;n<i;){this.posOut>=r&&this.keccak();const o=Math.min(r-this.posOut,i-n);e.set(t.subarray(this.posOut,this.posOut+o),n),this.posOut+=o,n+=o}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return n.default.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(n.default.output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:r,outputLen:n,rounds:i,enableXOF:o}=this;return e||(e=new g(t,r,n,o,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=r,e.outputLen=n,e.enableXOF=o,e.destroyed=this.destroyed,e}}t.Keccak=g;const x=(e,t,r)=>(0,o.wrapConstructor)((()=>new g(t,e,r)));t.sha3_224=x(6,144,28),t.sha3_256=x(6,136,32),t.sha3_384=x(6,104,48),t.sha3_512=x(6,72,64),t.keccak_224=x(1,144,28),t.keccak_256=x(1,136,32),t.keccak_384=x(1,104,48),t.keccak_512=x(1,72,64);const P=(e,t,r)=>(0,o.wrapConstructorWithOpts)(((n={})=>new g(t,e,void 0===n.dkLen?r:n.dkLen,!0)));t.shake128=P(31,168,16),t.shake256=P(31,136,32)},6262:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha384=t.sha512_256=t.sha512_224=t.sha512=t.SHA512=void 0;const n=r(7505),i=r(6873),o=r(8089),[s,a]=i.default.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))),c=new Uint32Array(80),d=new Uint32Array(80);class u extends n.SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:r,Bl:n,Ch:i,Cl:o,Dh:s,Dl:a,Eh:c,El:d,Fh:u,Fl:l,Gh:f,Gl:h,Hh:p,Hl:b}=this;return[e,t,r,n,i,o,s,a,c,d,u,l,f,h,p,b]}set(e,t,r,n,i,o,s,a,c,d,u,l,f,h,p,b){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|n,this.Ch=0|i,this.Cl=0|o,this.Dh=0|s,this.Dl=0|a,this.Eh=0|c,this.El=0|d,this.Fh=0|u,this.Fl=0|l,this.Gh=0|f,this.Gl=0|h,this.Hh=0|p,this.Hl=0|b}process(e,t){for(let r=0;r<16;r++,t+=4)c[r]=e.getUint32(t),d[r]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|c[e-15],r=0|d[e-15],n=i.default.rotrSH(t,r,1)^i.default.rotrSH(t,r,8)^i.default.shrSH(t,r,7),o=i.default.rotrSL(t,r,1)^i.default.rotrSL(t,r,8)^i.default.shrSL(t,r,7),s=0|c[e-2],a=0|d[e-2],u=i.default.rotrSH(s,a,19)^i.default.rotrBH(s,a,61)^i.default.shrSH(s,a,6),l=i.default.rotrSL(s,a,19)^i.default.rotrBL(s,a,61)^i.default.shrSL(s,a,6),f=i.default.add4L(o,l,d[e-7],d[e-16]),h=i.default.add4H(f,n,u,c[e-7],c[e-16]);c[e]=0|h,d[e]=0|f}let{Ah:r,Al:n,Bh:o,Bl:u,Ch:l,Cl:f,Dh:h,Dl:p,Eh:b,El:m,Fh:y,Fl:v,Gh:w,Gl:g,Hh:x,Hl:P}=this;for(let e=0;e<80;e++){const t=i.default.rotrSH(b,m,14)^i.default.rotrSH(b,m,18)^i.default.rotrBH(b,m,41),O=i.default.rotrSL(b,m,14)^i.default.rotrSL(b,m,18)^i.default.rotrBL(b,m,41),k=b&y^~b&w,j=m&v^~m&g,M=i.default.add5L(P,O,j,a[e],d[e]),N=i.default.add5H(M,x,t,k,s[e],c[e]),T=0|M,E=i.default.rotrSH(r,n,28)^i.default.rotrBH(r,n,34)^i.default.rotrBH(r,n,39),B=i.default.rotrSL(r,n,28)^i.default.rotrBL(r,n,34)^i.default.rotrBL(r,n,39),z=r&o^r&l^o&l,A=n&u^n&f^u&f;x=0|w,P=0|g,w=0|y,g=0|v,y=0|b,v=0|m,({h:b,l:m}=i.default.add(0|h,0|p,0|N,0|T)),h=0|l,p=0|f,l=0|o,f=0|u,o=0|r,u=0|n;const L=i.default.add3L(T,B,A);r=i.default.add3H(L,N,E,z),n=0|L}({h:r,l:n}=i.default.add(0|this.Ah,0|this.Al,0|r,0|n)),({h:o,l:u}=i.default.add(0|this.Bh,0|this.Bl,0|o,0|u)),({h:l,l:f}=i.default.add(0|this.Ch,0|this.Cl,0|l,0|f)),({h,l:p}=i.default.add(0|this.Dh,0|this.Dl,0|h,0|p)),({h:b,l:m}=i.default.add(0|this.Eh,0|this.El,0|b,0|m)),({h:y,l:v}=i.default.add(0|this.Fh,0|this.Fl,0|y,0|v)),({h:w,l:g}=i.default.add(0|this.Gh,0|this.Gl,0|w,0|g)),({h:x,l:P}=i.default.add(0|this.Hh,0|this.Hl,0|x,0|P)),this.set(r,n,o,u,l,f,h,p,b,m,y,v,w,g,x,P)}roundClean(){c.fill(0),d.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.SHA512=u;class l extends u{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28}}class f extends u{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class h extends u{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}t.sha512=(0,o.wrapConstructor)((()=>new u)),t.sha512_224=(0,o.wrapConstructor)((()=>new l)),t.sha512_256=(0,o.wrapConstructor)((()=>new f)),t.sha384=(0,o.wrapConstructor)((()=>new h))},8089:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomBytes=t.wrapConstructorWithOpts=t.wrapConstructor=t.checkOpts=t.Hash=t.concatBytes=t.toBytes=t.utf8ToBytes=t.asyncLoop=t.nextTick=t.hexToBytes=t.bytesToHex=t.isLE=t.rotr=t.createView=t.u32=t.u8=void 0;const n=r(1945);if(t.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength),t.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),t.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),t.rotr=(e,t)=>e<<32-t|e>>>t,t.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!t.isLE)throw new Error("Non little-endian hardware is not supported");const i=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function o(e){if("string"!=typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}function s(e){if("string"==typeof e&&(e=o(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}t.bytesToHex=function(e){if(!(e instanceof Uint8Array))throw new Error("Uint8Array expected");let t="";for(let r=0;r<e.length;r++)t+=i[e[r]];return t},t.hexToBytes=function(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");t[r]=o}return t},t.nextTick=async()=>{},t.asyncLoop=async function(e,r,n){let i=Date.now();for(let o=0;o<e;o++){n(o);const e=Date.now()-i;e>=0&&e<r||(await(0,t.nextTick)(),i+=e)}},t.utf8ToBytes=o,t.toBytes=s,t.concatBytes=function(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const i=e[t];r.set(i,n),n+=i.length}return r},t.Hash=class{clone(){return this._cloneInto()}},t.checkOpts=function(e,t){if(void 0!==t&&("object"!=typeof t||(r=t,"[object Object]"!==Object.prototype.toString.call(r)||r.constructor!==Object)))throw new TypeError("Options should be object or undefined");var r;return Object.assign(e,t)},t.wrapConstructor=function(e){const t=t=>e().update(s(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t},t.wrapConstructorWithOpts=function(e){const t=(t,r)=>e(r).update(s(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t},t.randomBytes=function(e=32){if(n.crypto&&"function"==typeof n.crypto.getRandomValues)return n.crypto.getRandomValues(new Uint8Array(e));throw new Error("crypto.getRandomValues must be defined")}},9187:(e,t)=>{"use strict";function r(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function n(...e){const t=(e,t)=>r=>e(t(r));return{encode:Array.from(e).reverse().reduce(((e,r)=>e?t(e,r.encode):r.encode),void 0),decode:e.reduce(((e,r)=>e?t(e,r.decode):r.decode),void 0)}}function i(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(r(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const r=e.indexOf(t);if(-1===r)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return r}))}}}function o(e=""){if("string"!=typeof e)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function s(e,t="="){if(r(e),"string"!=typeof t)throw new Error("padding chr should be string");return{encode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;r.length*e%8;)r.push(t);return r},decode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let n=r.length;if(n*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===t;n--)if(!((n-1)*e%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function a(e){if("function"!=typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function c(e,t,n){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let i=0;const o=[],s=Array.from(e);for(s.forEach((e=>{if(r(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,r=!0;for(let o=i;o<s.length;o++){const a=s[o],c=t*e+a;if(!Number.isSafeInteger(c)||t*e/t!==e||c-a!=t*e)throw new Error("convertRadix: carry overflow");if(e=c%n,s[o]=Math.floor(c/n),!Number.isSafeInteger(s[o])||s[o]*n+e!==c)throw new Error("convertRadix: carry overflow");r&&(s[o]?r=!1:i=o)}if(o.push(e),r)break}for(let t=0;t<e.length-1&&0===e[t];t++)o.push(0);return o.reverse()}Object.defineProperty(t,"__esModule",{value:!0}),t.bytes=t.stringToBytes=t.str=t.bytesToString=t.hex=t.utf8=t.bech32m=t.bech32=t.base58check=t.base58xmr=t.base58xrp=t.base58flickr=t.base58=t.base64url=t.base64=t.base32crockford=t.base32hex=t.base32=t.base16=t.utils=t.assertNumber=void 0,t.assertNumber=r;const d=(e,t)=>t?d(t,e%t):e,u=(e,t)=>e+(t-d(e,t));function l(e,t,n,i){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(u(t,n)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${n} carryBits=${u(t,n)}`);let o=0,s=0;const a=2**n-1,c=[];for(const i of e){if(r(i),i>=2**t)throw new Error(`convertRadix2: invalid data word=${i} from=${t}`);if(o=o<<t|i,s+t>32)throw new Error(`convertRadix2: carry overflow pos=${s} from=${t}`);for(s+=t;s>=n;s-=n)c.push((o>>s-n&a)>>>0);o&=2**s-1}if(o=o<<n-s&a,!i&&s>=t)throw new Error("Excess padding");if(!i&&o)throw new Error(`Non-zero padding: ${o}`);return i&&s>0&&c.push(o>>>0),c}function f(e){return r(e),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return c(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(c(t,e,256))}}}function h(e,t=!1){if(r(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(u(8,e)>32||u(e,8)>32)throw new Error("radix2: carry overflow");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return l(Array.from(r),8,e,!t)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(l(r,e,8,t))}}}function p(e){if("function"!=typeof e)throw new Error("unsafeWrapper fn should be function");return function(...t){try{return e.apply(null,t)}catch(e){}}}function b(e,t){if(r(e),"function"!=typeof t)throw new Error("checksum fn should be function");return{encode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const n=t(r).slice(0,e),i=new Uint8Array(r.length+e);return i.set(r),i.set(n,r.length),i},decode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const n=r.slice(0,-e),i=t(n).slice(0,e),o=r.slice(-e);for(let t=0;t<e;t++)if(i[t]!==o[t])throw new Error("Invalid checksum");return n}}}t.utils={alphabet:i,chain:n,checksum:b,radix:f,radix2:h,join:o,padding:s},t.base16=n(h(4),i("0123456789ABCDEF"),o("")),t.base32=n(h(5),i("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),s(5),o("")),t.base32hex=n(h(5),i("0123456789ABCDEFGHIJKLMNOPQRSTUV"),s(5),o("")),t.base32crockford=n(h(5),i("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),o(""),a((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),t.base64=n(h(6),i("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),s(6),o("")),t.base64url=n(h(6),i("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),s(6),o(""));const m=e=>n(f(58),i(e),o(""));t.base58=m("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),t.base58flickr=m("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),t.base58xrp=m("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const y=[0,2,3,5,6,7,9,10,11];t.base58xmr={encode(e){let r="";for(let n=0;n<e.length;n+=8){const i=e.subarray(n,n+8);r+=t.base58.encode(i).padStart(y[i.length],"1")}return r},decode(e){let r=[];for(let n=0;n<e.length;n+=11){const i=e.slice(n,n+11),o=y.indexOf(i.length),s=t.base58.decode(i);for(let e=0;e<s.length-o;e++)if(0!==s[e])throw new Error("base58xmr: wrong padding");r=r.concat(Array.from(s.slice(s.length-o)))}return Uint8Array.from(r)}},t.base58check=e=>n(b(4,(t=>e(e(t)))),t.base58);const v=n(i("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),o("")),w=[996825010,642813549,513874426,1027748829,705979059];function g(e){const t=e>>25;let r=(33554431&e)<<5;for(let e=0;e<w.length;e++)1==(t>>e&1)&&(r^=w[e]);return r}function x(e,t,r=1){const n=e.length;let i=1;for(let t=0;t<n;t++){const r=e.charCodeAt(t);if(r<33||r>126)throw new Error(`Invalid prefix (${e})`);i=g(i)^r>>5}i=g(i);for(let t=0;t<n;t++)i=g(i)^31&e.charCodeAt(t);for(let e of t)i=g(i)^e;for(let e=0;e<6;e++)i=g(i);return i^=r,v.encode(l([i%2**30],30,5,!1))}function P(e){const t="bech32"===e?1:734539939,r=h(5),n=r.decode,i=r.encode,o=p(n);function s(e,r=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==r&&e.length>r)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${r})`);const n=e.toLowerCase();if(e!==n&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(e=n).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const o=e.slice(0,i),s=e.slice(i+1);if(s.length<6)throw new Error("Data must be at least 6 characters long");const a=v.decode(s).slice(0,-6),c=x(o,a,t);if(!s.endsWith(c))throw new Error(`Invalid checksum in ${e}: expected "${c}"`);return{prefix:o,words:a}}return{encode:function(e,r,n=90){if("string"!=typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof r);const i=e.length+7+r.length;if(!1!==n&&i>n)throw new TypeError(`Length ${i} exceeds limit ${n}`);return`${e=e.toLowerCase()}1${v.encode(r)}${x(e,r,t)}`},decode:s,decodeToBytes:function(e){const{prefix:t,words:r}=s(e,!1);return{prefix:t,words:r,bytes:n(r)}},decodeUnsafe:p(s),fromWords:n,fromWordsUnsafe:o,toWords:i}}t.bech32=P("bech32"),t.bech32m=P("bech32m"),t.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.hex=n(h(4),i("0123456789abcdef"),o(""),a((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const O={utf8:t.utf8,hex:t.hex,base16:t.base16,base32:t.base32,base64:t.base64,base64url:t.base64url,base58:t.base58,base58xmr:t.base58xmr},k=`Invalid encoding type. Available types: ${Object.keys(O).join(", ")}`;t.bytesToString=(e,t)=>{if("string"!=typeof e||!O.hasOwnProperty(e))throw new TypeError(k);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return O[e].encode(t)},t.str=t.bytesToString,t.stringToBytes=(e,t)=>{if(!O.hasOwnProperty(e))throw new TypeError(k);if("string"!=typeof t)throw new TypeError("stringToBytes() expects string");return O[e].decode(t)},t.bytes=t.stringToBytes},3550:function(e,t,r){!function(e,t){"use strict";function n(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function o(e,t,r){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}var s;"object"==typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{s="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(6601).Buffer}catch(e){}function a(e,t){var r=e.charCodeAt(t);return r>=48&&r<=57?r-48:r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:void n(!1,"Invalid character in "+e)}function c(e,t,r){var n=a(e,r);return r-1>=t&&(n|=a(e,r-1)<<4),n}function d(e,t,r,i){for(var o=0,s=0,a=Math.min(e.length,r),c=t;c<a;c++){var d=e.charCodeAt(c)-48;o*=i,s=d>=49?d-49+10:d>=17?d-17+10:d,n(d>=0&&s<i,"Invalid character"),o+=s}return o}function u(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red}if(o.isBN=function(e){return e instanceof o||null!==e&&"object"==typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,r){if("number"==typeof e)return this._initNumber(e,t,r);if("object"==typeof e)return this._initArray(e,t,r);"hex"===t&&(t=16),n(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,r):(this._parseBase(e,t,i),"le"===r&&this._initArray(this.toArray(),t,r)))},o.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(n(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),t,r)},o.prototype._initArray=function(e,t,r){if(n("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===r)for(i=e.length-1,o=0;i>=0;i-=3)s=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===r)for(i=0,o=0;i<e.length;i+=3)s=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this._strip()},o.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,o=0,s=0;if("be"===r)for(n=e.length-1;n>=t;n-=2)i=c(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)i=c(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;this._strip()},o.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=t)n++;n--,i=i/t|0;for(var o=e.length-r,s=o%n,a=Math.min(o,o-s)+r,c=0,u=r;u<a;u+=n)c=d(e,u,u+n,t),this.imuln(i),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==s){var l=1;for(c=d(e,u,e.length,t),u=0;u<s;u++)l*=t;this.imuln(l),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}this._strip()},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},o.prototype._move=function(e){u(e,this)},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{o.prototype[Symbol.for("nodejs.util.inspect.custom")]=l}catch(e){o.prototype.inspect=l}else o.prototype.inspect=l;function l(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var f=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],h=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function b(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var i=0|e.words[0],o=0|t.words[0],s=i*o,a=67108863&s,c=s/67108864|0;r.words[0]=a;for(var d=1;d<n;d++){for(var u=c>>>26,l=67108863&c,f=Math.min(d,t.length-1),h=Math.max(0,d-e.length+1);h<=f;h++){var p=d-h|0;u+=(s=(i=0|e.words[p])*(o=0|t.words[h])+l)/67108864|0,l=67108863&s}r.words[d]=0|l,c=0|u}return 0!==c?r.words[d]=0|c:r.length--,r._strip()}o.prototype.toString=function(e,t){var r;if(t=0|t||1,16===(e=e||10)||"hex"===e){r="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],c=(16777215&(a<<i|o)).toString(16);o=a>>>24-i&16777215,(i+=2)>=26&&(i-=26,s--),r=0!==o||s!==this.length-1?f[6-c.length]+c+r:c+r}for(0!==o&&(r=o.toString(16)+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(e===(0|e)&&e>=2&&e<=36){var d=h[e],u=p[e];r="";var l=this.clone();for(l.negative=0;!l.isZero();){var b=l.modrn(u).toString(e);r=(l=l.idivn(u)).isZero()?b+r:f[d-b.length]+b+r}for(this.isZero()&&(r="0"+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16,2)},s&&(o.prototype.toBuffer=function(e,t){return this.toArrayLike(s,e,t)}),o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},o.prototype.toArrayLike=function(e,t,r){this._strip();var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,"byte array longer than desired length"),n(o>0,"Requested array length <= 0");var s=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,o);return this["_toArrayLike"+("le"===t?"LE":"BE")](s,i),s},o.prototype._toArrayLikeLE=function(e,t){for(var r=0,n=0,i=0,o=0;i<this.length;i++){var s=this.words[i]<<o|n;e[r++]=255&s,r<e.length&&(e[r++]=s>>8&255),r<e.length&&(e[r++]=s>>16&255),6===o?(r<e.length&&(e[r++]=s>>24&255),n=0,o=0):(n=s>>>24,o+=2)}if(r<e.length)for(e[r++]=n;r<e.length;)e[r++]=0},o.prototype._toArrayLikeBE=function(e,t){for(var r=e.length-1,n=0,i=0,o=0;i<this.length;i++){var s=this.words[i]<<o|n;e[r--]=255&s,r>=0&&(e[r--]=s>>8&255),r>=0&&(e[r--]=s>>16&255),6===o?(r>=0&&(e[r--]=s>>24&255),n=0,o=0):(n=s>>>24,o+=2)}if(r>=0)for(e[r--]=n;r>=0;)e[r--]=0},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},o.prototype.ior=function(e){return n(0==(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this._strip()},o.prototype.iand=function(e){return n(0==(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this._strip()},o.prototype.ixor=function(e){return n(0==(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){n("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this._strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){n("number"==typeof e&&e>=0);var r=e/26|0,i=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<i:this.words[r]&~(1<<i),this._strip()},o.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var i=0,o=0;o<n.length;o++)t=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<r.length;o++)t=(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=e):(r=e,n=this);for(var o=0,s=0;s<n.length;s++)o=(t=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&t;for(;0!==o&&s<r.length;s++)o=(t=(0|r.words[s])+o)>>26,this.words[s]=67108863&t;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var m=function(e,t,r){var n,i,o,s=e.words,a=t.words,c=r.words,d=0,u=0|s[0],l=8191&u,f=u>>>13,h=0|s[1],p=8191&h,b=h>>>13,m=0|s[2],y=8191&m,v=m>>>13,w=0|s[3],g=8191&w,x=w>>>13,P=0|s[4],O=8191&P,k=P>>>13,j=0|s[5],M=8191&j,N=j>>>13,T=0|s[6],E=8191&T,B=T>>>13,z=0|s[7],A=8191&z,L=z>>>13,U=0|s[8],S=8191&U,H=U>>>13,X=0|s[9],I=8191&X,R=X>>>13,D=0|a[0],F=8191&D,Z=D>>>13,V=0|a[1],q=8191&V,C=V>>>13,G=0|a[2],W=8191&G,Y=G>>>13,K=0|a[3],J=8191&K,Q=K>>>13,_=0|a[4],$=8191&_,ee=_>>>13,te=0|a[5],re=8191&te,ne=te>>>13,ie=0|a[6],oe=8191&ie,se=ie>>>13,ae=0|a[7],ce=8191&ae,de=ae>>>13,ue=0|a[8],le=8191&ue,fe=ue>>>13,he=0|a[9],pe=8191&he,be=he>>>13;r.negative=e.negative^t.negative,r.length=19;var me=(d+(n=Math.imul(l,F))|0)+((8191&(i=(i=Math.imul(l,Z))+Math.imul(f,F)|0))<<13)|0;d=((o=Math.imul(f,Z))+(i>>>13)|0)+(me>>>26)|0,me&=67108863,n=Math.imul(p,F),i=(i=Math.imul(p,Z))+Math.imul(b,F)|0,o=Math.imul(b,Z);var ye=(d+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,C)|0)+Math.imul(f,q)|0))<<13)|0;d=((o=o+Math.imul(f,C)|0)+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(y,F),i=(i=Math.imul(y,Z))+Math.imul(v,F)|0,o=Math.imul(v,Z),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,C)|0)+Math.imul(b,q)|0,o=o+Math.imul(b,C)|0;var ve=(d+(n=n+Math.imul(l,W)|0)|0)+((8191&(i=(i=i+Math.imul(l,Y)|0)+Math.imul(f,W)|0))<<13)|0;d=((o=o+Math.imul(f,Y)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(g,F),i=(i=Math.imul(g,Z))+Math.imul(x,F)|0,o=Math.imul(x,Z),n=n+Math.imul(y,q)|0,i=(i=i+Math.imul(y,C)|0)+Math.imul(v,q)|0,o=o+Math.imul(v,C)|0,n=n+Math.imul(p,W)|0,i=(i=i+Math.imul(p,Y)|0)+Math.imul(b,W)|0,o=o+Math.imul(b,Y)|0;var we=(d+(n=n+Math.imul(l,J)|0)|0)+((8191&(i=(i=i+Math.imul(l,Q)|0)+Math.imul(f,J)|0))<<13)|0;d=((o=o+Math.imul(f,Q)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(O,F),i=(i=Math.imul(O,Z))+Math.imul(k,F)|0,o=Math.imul(k,Z),n=n+Math.imul(g,q)|0,i=(i=i+Math.imul(g,C)|0)+Math.imul(x,q)|0,o=o+Math.imul(x,C)|0,n=n+Math.imul(y,W)|0,i=(i=i+Math.imul(y,Y)|0)+Math.imul(v,W)|0,o=o+Math.imul(v,Y)|0,n=n+Math.imul(p,J)|0,i=(i=i+Math.imul(p,Q)|0)+Math.imul(b,J)|0,o=o+Math.imul(b,Q)|0;var ge=(d+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,ee)|0)+Math.imul(f,$)|0))<<13)|0;d=((o=o+Math.imul(f,ee)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(M,F),i=(i=Math.imul(M,Z))+Math.imul(N,F)|0,o=Math.imul(N,Z),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,C)|0)+Math.imul(k,q)|0,o=o+Math.imul(k,C)|0,n=n+Math.imul(g,W)|0,i=(i=i+Math.imul(g,Y)|0)+Math.imul(x,W)|0,o=o+Math.imul(x,Y)|0,n=n+Math.imul(y,J)|0,i=(i=i+Math.imul(y,Q)|0)+Math.imul(v,J)|0,o=o+Math.imul(v,Q)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,ee)|0)+Math.imul(b,$)|0,o=o+Math.imul(b,ee)|0;var xe=(d+(n=n+Math.imul(l,re)|0)|0)+((8191&(i=(i=i+Math.imul(l,ne)|0)+Math.imul(f,re)|0))<<13)|0;d=((o=o+Math.imul(f,ne)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(E,F),i=(i=Math.imul(E,Z))+Math.imul(B,F)|0,o=Math.imul(B,Z),n=n+Math.imul(M,q)|0,i=(i=i+Math.imul(M,C)|0)+Math.imul(N,q)|0,o=o+Math.imul(N,C)|0,n=n+Math.imul(O,W)|0,i=(i=i+Math.imul(O,Y)|0)+Math.imul(k,W)|0,o=o+Math.imul(k,Y)|0,n=n+Math.imul(g,J)|0,i=(i=i+Math.imul(g,Q)|0)+Math.imul(x,J)|0,o=o+Math.imul(x,Q)|0,n=n+Math.imul(y,$)|0,i=(i=i+Math.imul(y,ee)|0)+Math.imul(v,$)|0,o=o+Math.imul(v,ee)|0,n=n+Math.imul(p,re)|0,i=(i=i+Math.imul(p,ne)|0)+Math.imul(b,re)|0,o=o+Math.imul(b,ne)|0;var Pe=(d+(n=n+Math.imul(l,oe)|0)|0)+((8191&(i=(i=i+Math.imul(l,se)|0)+Math.imul(f,oe)|0))<<13)|0;d=((o=o+Math.imul(f,se)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(A,F),i=(i=Math.imul(A,Z))+Math.imul(L,F)|0,o=Math.imul(L,Z),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,C)|0)+Math.imul(B,q)|0,o=o+Math.imul(B,C)|0,n=n+Math.imul(M,W)|0,i=(i=i+Math.imul(M,Y)|0)+Math.imul(N,W)|0,o=o+Math.imul(N,Y)|0,n=n+Math.imul(O,J)|0,i=(i=i+Math.imul(O,Q)|0)+Math.imul(k,J)|0,o=o+Math.imul(k,Q)|0,n=n+Math.imul(g,$)|0,i=(i=i+Math.imul(g,ee)|0)+Math.imul(x,$)|0,o=o+Math.imul(x,ee)|0,n=n+Math.imul(y,re)|0,i=(i=i+Math.imul(y,ne)|0)+Math.imul(v,re)|0,o=o+Math.imul(v,ne)|0,n=n+Math.imul(p,oe)|0,i=(i=i+Math.imul(p,se)|0)+Math.imul(b,oe)|0,o=o+Math.imul(b,se)|0;var Oe=(d+(n=n+Math.imul(l,ce)|0)|0)+((8191&(i=(i=i+Math.imul(l,de)|0)+Math.imul(f,ce)|0))<<13)|0;d=((o=o+Math.imul(f,de)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,n=Math.imul(S,F),i=(i=Math.imul(S,Z))+Math.imul(H,F)|0,o=Math.imul(H,Z),n=n+Math.imul(A,q)|0,i=(i=i+Math.imul(A,C)|0)+Math.imul(L,q)|0,o=o+Math.imul(L,C)|0,n=n+Math.imul(E,W)|0,i=(i=i+Math.imul(E,Y)|0)+Math.imul(B,W)|0,o=o+Math.imul(B,Y)|0,n=n+Math.imul(M,J)|0,i=(i=i+Math.imul(M,Q)|0)+Math.imul(N,J)|0,o=o+Math.imul(N,Q)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,ee)|0)+Math.imul(k,$)|0,o=o+Math.imul(k,ee)|0,n=n+Math.imul(g,re)|0,i=(i=i+Math.imul(g,ne)|0)+Math.imul(x,re)|0,o=o+Math.imul(x,ne)|0,n=n+Math.imul(y,oe)|0,i=(i=i+Math.imul(y,se)|0)+Math.imul(v,oe)|0,o=o+Math.imul(v,se)|0,n=n+Math.imul(p,ce)|0,i=(i=i+Math.imul(p,de)|0)+Math.imul(b,ce)|0,o=o+Math.imul(b,de)|0;var ke=(d+(n=n+Math.imul(l,le)|0)|0)+((8191&(i=(i=i+Math.imul(l,fe)|0)+Math.imul(f,le)|0))<<13)|0;d=((o=o+Math.imul(f,fe)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(I,F),i=(i=Math.imul(I,Z))+Math.imul(R,F)|0,o=Math.imul(R,Z),n=n+Math.imul(S,q)|0,i=(i=i+Math.imul(S,C)|0)+Math.imul(H,q)|0,o=o+Math.imul(H,C)|0,n=n+Math.imul(A,W)|0,i=(i=i+Math.imul(A,Y)|0)+Math.imul(L,W)|0,o=o+Math.imul(L,Y)|0,n=n+Math.imul(E,J)|0,i=(i=i+Math.imul(E,Q)|0)+Math.imul(B,J)|0,o=o+Math.imul(B,Q)|0,n=n+Math.imul(M,$)|0,i=(i=i+Math.imul(M,ee)|0)+Math.imul(N,$)|0,o=o+Math.imul(N,ee)|0,n=n+Math.imul(O,re)|0,i=(i=i+Math.imul(O,ne)|0)+Math.imul(k,re)|0,o=o+Math.imul(k,ne)|0,n=n+Math.imul(g,oe)|0,i=(i=i+Math.imul(g,se)|0)+Math.imul(x,oe)|0,o=o+Math.imul(x,se)|0,n=n+Math.imul(y,ce)|0,i=(i=i+Math.imul(y,de)|0)+Math.imul(v,ce)|0,o=o+Math.imul(v,de)|0,n=n+Math.imul(p,le)|0,i=(i=i+Math.imul(p,fe)|0)+Math.imul(b,le)|0,o=o+Math.imul(b,fe)|0;var je=(d+(n=n+Math.imul(l,pe)|0)|0)+((8191&(i=(i=i+Math.imul(l,be)|0)+Math.imul(f,pe)|0))<<13)|0;d=((o=o+Math.imul(f,be)|0)+(i>>>13)|0)+(je>>>26)|0,je&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,C))+Math.imul(R,q)|0,o=Math.imul(R,C),n=n+Math.imul(S,W)|0,i=(i=i+Math.imul(S,Y)|0)+Math.imul(H,W)|0,o=o+Math.imul(H,Y)|0,n=n+Math.imul(A,J)|0,i=(i=i+Math.imul(A,Q)|0)+Math.imul(L,J)|0,o=o+Math.imul(L,Q)|0,n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,ee)|0)+Math.imul(B,$)|0,o=o+Math.imul(B,ee)|0,n=n+Math.imul(M,re)|0,i=(i=i+Math.imul(M,ne)|0)+Math.imul(N,re)|0,o=o+Math.imul(N,ne)|0,n=n+Math.imul(O,oe)|0,i=(i=i+Math.imul(O,se)|0)+Math.imul(k,oe)|0,o=o+Math.imul(k,se)|0,n=n+Math.imul(g,ce)|0,i=(i=i+Math.imul(g,de)|0)+Math.imul(x,ce)|0,o=o+Math.imul(x,de)|0,n=n+Math.imul(y,le)|0,i=(i=i+Math.imul(y,fe)|0)+Math.imul(v,le)|0,o=o+Math.imul(v,fe)|0;var Me=(d+(n=n+Math.imul(p,pe)|0)|0)+((8191&(i=(i=i+Math.imul(p,be)|0)+Math.imul(b,pe)|0))<<13)|0;d=((o=o+Math.imul(b,be)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(I,W),i=(i=Math.imul(I,Y))+Math.imul(R,W)|0,o=Math.imul(R,Y),n=n+Math.imul(S,J)|0,i=(i=i+Math.imul(S,Q)|0)+Math.imul(H,J)|0,o=o+Math.imul(H,Q)|0,n=n+Math.imul(A,$)|0,i=(i=i+Math.imul(A,ee)|0)+Math.imul(L,$)|0,o=o+Math.imul(L,ee)|0,n=n+Math.imul(E,re)|0,i=(i=i+Math.imul(E,ne)|0)+Math.imul(B,re)|0,o=o+Math.imul(B,ne)|0,n=n+Math.imul(M,oe)|0,i=(i=i+Math.imul(M,se)|0)+Math.imul(N,oe)|0,o=o+Math.imul(N,se)|0,n=n+Math.imul(O,ce)|0,i=(i=i+Math.imul(O,de)|0)+Math.imul(k,ce)|0,o=o+Math.imul(k,de)|0,n=n+Math.imul(g,le)|0,i=(i=i+Math.imul(g,fe)|0)+Math.imul(x,le)|0,o=o+Math.imul(x,fe)|0;var Ne=(d+(n=n+Math.imul(y,pe)|0)|0)+((8191&(i=(i=i+Math.imul(y,be)|0)+Math.imul(v,pe)|0))<<13)|0;d=((o=o+Math.imul(v,be)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,n=Math.imul(I,J),i=(i=Math.imul(I,Q))+Math.imul(R,J)|0,o=Math.imul(R,Q),n=n+Math.imul(S,$)|0,i=(i=i+Math.imul(S,ee)|0)+Math.imul(H,$)|0,o=o+Math.imul(H,ee)|0,n=n+Math.imul(A,re)|0,i=(i=i+Math.imul(A,ne)|0)+Math.imul(L,re)|0,o=o+Math.imul(L,ne)|0,n=n+Math.imul(E,oe)|0,i=(i=i+Math.imul(E,se)|0)+Math.imul(B,oe)|0,o=o+Math.imul(B,se)|0,n=n+Math.imul(M,ce)|0,i=(i=i+Math.imul(M,de)|0)+Math.imul(N,ce)|0,o=o+Math.imul(N,de)|0,n=n+Math.imul(O,le)|0,i=(i=i+Math.imul(O,fe)|0)+Math.imul(k,le)|0,o=o+Math.imul(k,fe)|0;var Te=(d+(n=n+Math.imul(g,pe)|0)|0)+((8191&(i=(i=i+Math.imul(g,be)|0)+Math.imul(x,pe)|0))<<13)|0;d=((o=o+Math.imul(x,be)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,ee))+Math.imul(R,$)|0,o=Math.imul(R,ee),n=n+Math.imul(S,re)|0,i=(i=i+Math.imul(S,ne)|0)+Math.imul(H,re)|0,o=o+Math.imul(H,ne)|0,n=n+Math.imul(A,oe)|0,i=(i=i+Math.imul(A,se)|0)+Math.imul(L,oe)|0,o=o+Math.imul(L,se)|0,n=n+Math.imul(E,ce)|0,i=(i=i+Math.imul(E,de)|0)+Math.imul(B,ce)|0,o=o+Math.imul(B,de)|0,n=n+Math.imul(M,le)|0,i=(i=i+Math.imul(M,fe)|0)+Math.imul(N,le)|0,o=o+Math.imul(N,fe)|0;var Ee=(d+(n=n+Math.imul(O,pe)|0)|0)+((8191&(i=(i=i+Math.imul(O,be)|0)+Math.imul(k,pe)|0))<<13)|0;d=((o=o+Math.imul(k,be)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(I,re),i=(i=Math.imul(I,ne))+Math.imul(R,re)|0,o=Math.imul(R,ne),n=n+Math.imul(S,oe)|0,i=(i=i+Math.imul(S,se)|0)+Math.imul(H,oe)|0,o=o+Math.imul(H,se)|0,n=n+Math.imul(A,ce)|0,i=(i=i+Math.imul(A,de)|0)+Math.imul(L,ce)|0,o=o+Math.imul(L,de)|0,n=n+Math.imul(E,le)|0,i=(i=i+Math.imul(E,fe)|0)+Math.imul(B,le)|0,o=o+Math.imul(B,fe)|0;var Be=(d+(n=n+Math.imul(M,pe)|0)|0)+((8191&(i=(i=i+Math.imul(M,be)|0)+Math.imul(N,pe)|0))<<13)|0;d=((o=o+Math.imul(N,be)|0)+(i>>>13)|0)+(Be>>>26)|0,Be&=67108863,n=Math.imul(I,oe),i=(i=Math.imul(I,se))+Math.imul(R,oe)|0,o=Math.imul(R,se),n=n+Math.imul(S,ce)|0,i=(i=i+Math.imul(S,de)|0)+Math.imul(H,ce)|0,o=o+Math.imul(H,de)|0,n=n+Math.imul(A,le)|0,i=(i=i+Math.imul(A,fe)|0)+Math.imul(L,le)|0,o=o+Math.imul(L,fe)|0;var ze=(d+(n=n+Math.imul(E,pe)|0)|0)+((8191&(i=(i=i+Math.imul(E,be)|0)+Math.imul(B,pe)|0))<<13)|0;d=((o=o+Math.imul(B,be)|0)+(i>>>13)|0)+(ze>>>26)|0,ze&=67108863,n=Math.imul(I,ce),i=(i=Math.imul(I,de))+Math.imul(R,ce)|0,o=Math.imul(R,de),n=n+Math.imul(S,le)|0,i=(i=i+Math.imul(S,fe)|0)+Math.imul(H,le)|0,o=o+Math.imul(H,fe)|0;var Ae=(d+(n=n+Math.imul(A,pe)|0)|0)+((8191&(i=(i=i+Math.imul(A,be)|0)+Math.imul(L,pe)|0))<<13)|0;d=((o=o+Math.imul(L,be)|0)+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(I,le),i=(i=Math.imul(I,fe))+Math.imul(R,le)|0,o=Math.imul(R,fe);var Le=(d+(n=n+Math.imul(S,pe)|0)|0)+((8191&(i=(i=i+Math.imul(S,be)|0)+Math.imul(H,pe)|0))<<13)|0;d=((o=o+Math.imul(H,be)|0)+(i>>>13)|0)+(Le>>>26)|0,Le&=67108863;var Ue=(d+(n=Math.imul(I,pe))|0)+((8191&(i=(i=Math.imul(I,be))+Math.imul(R,pe)|0))<<13)|0;return d=((o=Math.imul(R,be))+(i>>>13)|0)+(Ue>>>26)|0,Ue&=67108863,c[0]=me,c[1]=ye,c[2]=ve,c[3]=we,c[4]=ge,c[5]=xe,c[6]=Pe,c[7]=Oe,c[8]=ke,c[9]=je,c[10]=Me,c[11]=Ne,c[12]=Te,c[13]=Ee,c[14]=Be,c[15]=ze,c[16]=Ae,c[17]=Le,c[18]=Ue,0!==d&&(c[19]=d,r.length++),r};function y(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,c=Math.min(o,t.length-1),d=Math.max(0,o-e.length+1);d<=c;d++){var u=o-d,l=(0|e.words[u])*(0|t.words[d]),f=67108863&l;a=67108863&(f=f+a|0),i+=(s=(s=s+(l/67108864|0)|0)+(f>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r._strip()}function v(e,t,r){return y(e,t,r)}function w(e,t){this.x=e,this.y=t}Math.imul||(m=b),o.prototype.mulTo=function(e,t){var r=this.length+e.length;return 10===this.length&&10===e.length?m(this,e,t):r<63?b(this,e,t):r<1024?y(this,e,t):v(this,e,t)},w.prototype.makeRBT=function(e){for(var t=new Array(e),r=o.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},w.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,i=0;i<t;i++)n|=(1&e)<<t-i-1,e>>=1;return n},w.prototype.permute=function(e,t,r,n,i,o){for(var s=0;s<o;s++)n[s]=t[e[s]],i[s]=r[e[s]]},w.prototype.transform=function(e,t,r,n,i,o){this.permute(o,e,t,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,c=Math.cos(2*Math.PI/a),d=Math.sin(2*Math.PI/a),u=0;u<i;u+=a)for(var l=c,f=d,h=0;h<s;h++){var p=r[u+h],b=n[u+h],m=r[u+h+s],y=n[u+h+s],v=l*m-f*y;y=l*y+f*m,m=v,r[u+h]=p+m,n[u+h]=b+y,r[u+h+s]=p-m,n[u+h+s]=b-y,h!==a&&(v=c*l-d*f,f=c*f+d*l,l=v)}},w.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},w.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=e[n];e[n]=e[r-n-1],e[r-n-1]=i,i=t[n],t[n]=-t[r-n-1],t[r-n-1]=-i}},w.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var i=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&i,r=i<67108864?0:i/67108864|0}return e},w.prototype.convert13b=function(e,t,r,i){for(var o=0,s=0;s<t;s++)o+=0|e[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*t;s<i;++s)r[s]=0;n(0===o),n(0==(-8192&o))},w.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},w.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),c=new Array(n),d=new Array(n),u=new Array(n),l=new Array(n),f=r.words;f.length=n,this.convert13b(e.words,e.length,s,n),this.convert13b(t.words,t.length,d,n),this.transform(s,o,a,c,n,i),this.transform(d,o,u,l,n,i);for(var h=0;h<n;h++){var p=a[h]*u[h]-c[h]*l[h];c[h]=a[h]*l[h]+c[h]*u[h],a[h]=p}return this.conjugate(a,c,n),this.transform(a,c,f,o,n,i),this.conjugate(f,o,n),this.normalize13b(f,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r._strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),v(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){var t=e<0;t&&(e=-e),n("number"==typeof e),n(e<67108864);for(var r=0,i=0;i<this.length;i++){var o=(0|this.words[i])*e,s=(67108863&o)+(67108863&r);r>>=26,r+=o/67108864|0,r+=s>>>26,this.words[i]=67108863&s}return 0!==r&&(this.words[i]=r,this.length++),t?this.ineg():this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,i=r%26;t[r]=e.words[n]>>>i&1}return t}(e);if(0===t.length)return new o(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var i=r.sqr();n<t.length;n++,i=i.sqr())0!==t[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(e){n("number"==typeof e&&e>=0);var t,r=e%26,i=(e-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(t=0;t<this.length;t++){var a=this.words[t]&o,c=(0|this.words[t])-a<<r;this.words[t]=c|s,s=a>>>26-r}s&&(this.words[t]=s,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this._strip()},o.prototype.ishln=function(e){return n(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,r){var i;n("number"==typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,s=Math.min((e-o)/26,this.length),a=67108863^67108863>>>o<<o,c=r;if(i-=s,i=Math.max(0,i),c){for(var d=0;d<s;d++)c.words[d]=this.words[d];c.length=s}if(0===s);else if(this.length>s)for(this.length-=s,d=0;d<this.length;d++)this.words[d]=this.words[d+s];else this.words[0]=0,this.length=1;var u=0;for(d=this.length-1;d>=0&&(0!==u||d>=i);d--){var l=0|this.words[d];this.words[d]=u<<26-o|l>>>o,u=l&a}return c&&0!==u&&(c.words[c.length++]=u),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(e,t,r){return n(0===this.negative),this.iushrn(e,t,r)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,i=1<<t;return!(this.length<=r||!(this.words[r]&i))},o.prototype.imaskn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this._strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return n("number"==typeof e),n(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(n("number"==typeof e),n(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,r){var i,o,s=e.length+r;this._expand(s);var a=0;for(i=0;i<e.length;i++){o=(0|this.words[i+r])+a;var c=(0|e.words[i])*t;a=((o-=67108863&c)>>26)-(c/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this._strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this._strip()},o.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),i=e,s=0|i.words[i.length-1];0!=(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,c=n.length-i.length;if("mod"!==t){(a=new o(null)).length=c+1,a.words=new Array(a.length);for(var d=0;d<a.length;d++)a.words[d]=0}var u=n.clone()._ishlnsubmul(i,1,c);0===u.negative&&(n=u,a&&(a.words[c]=1));for(var l=c-1;l>=0;l--){var f=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(f=Math.min(f/s|0,67108863),n._ishlnsubmul(i,f,l);0!==n.negative;)f--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=f)}return a&&a._strip(),n._strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(e,t,r){return n(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(a=this.neg().divmod(e,t),"mod"!==t&&(i=a.div.neg()),"div"!==t&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(e)),{div:i,mod:s}):0===this.negative&&0!==e.negative?(a=this.divmod(e.neg(),t),"mod"!==t&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&e.negative)?(a=this.neg().divmod(e.neg(),t),"div"!==t&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(e)),{div:a.div,mod:s}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new o(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modrn(e.words[0]))}:this._wordDiv(e,t);var i,s,a},o.prototype.div=function(e){return this.divmod(e,"div",!1).div},o.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},o.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),i=e.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modrn=function(e){var t=e<0;t&&(e=-e),n(e<=67108863);for(var r=(1<<26)%e,i=0,o=this.length-1;o>=0;o--)i=(r*i+(0|this.words[o]))%e;return t?-i:i},o.prototype.modn=function(e){return this.modrn(e)},o.prototype.idivn=function(e){var t=e<0;t&&(e=-e),n(e<=67108863);for(var r=0,i=this.length-1;i>=0;i--){var o=(0|this.words[i])+67108864*r;this.words[i]=o/e|0,r=o%e}return this._strip(),t?this.ineg():this},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new o(1),s=new o(0),a=new o(0),c=new o(1),d=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++d;for(var u=r.clone(),l=t.clone();!t.isZero();){for(var f=0,h=1;0==(t.words[0]&h)&&f<26;++f,h<<=1);if(f>0)for(t.iushrn(f);f-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(u),s.isub(l)),i.iushrn(1),s.iushrn(1);for(var p=0,b=1;0==(r.words[0]&b)&&p<26;++p,b<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||c.isOdd())&&(a.iadd(u),c.isub(l)),a.iushrn(1),c.iushrn(1);t.cmp(r)>=0?(t.isub(r),i.isub(a),s.isub(c)):(r.isub(t),a.isub(i),c.isub(s))}return{a,b:c,gcd:r.iushln(d)}},o.prototype._invmp=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i,s=new o(1),a=new o(0),c=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var d=0,u=1;0==(t.words[0]&u)&&d<26;++d,u<<=1);if(d>0)for(t.iushrn(d);d-- >0;)s.isOdd()&&s.iadd(c),s.iushrn(1);for(var l=0,f=1;0==(r.words[0]&f)&&l<26;++l,f<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(c),a.iushrn(1);t.cmp(r)>=0?(t.isub(r),s.isub(a)):(r.isub(t),a.isub(s))}return(i=0===t.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(e),i},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=t.cmp(r);if(i<0){var o=t;t=r,r=o}else if(0===i||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){n("number"==typeof e);var t=e%26,r=(e-t)/26,i=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,r=e<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this._strip(),this.length>1)t=1;else{r&&(e=-e),n(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|e.words[r];if(n!==i){n<i?t=-1:n>i&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return-1===this.cmpn(e)},o.prototype.lt=function(e){return-1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new M(e)},o.prototype.toRed=function(e){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return n(!this.red,"Already a number in reduction context"),this._forceRed(e)},o.prototype.redAdd=function(e){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},o.prototype.redISub=function(e){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},o.prototype.redShl=function(e){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},o.prototype.redMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return n(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var g={k256:null,p224:null,p192:null,p25519:null};function x(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function P(){x.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function O(){x.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function k(){x.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function j(){x.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function M(e){if("string"==typeof e){var t=o._prime(e);this.m=t.p,this.prime=t}else n(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function N(e){M.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}x.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},x.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},x.prototype.split=function(e,t){e.iushrn(this.n,0,t)},x.prototype.imulK=function(e){return e.imul(this.k)},i(P,x),P.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),i=0;i<n;i++)t.words[i]=e.words[i];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&r,i=10;i<e.length;i++){var s=0|e.words[i];e.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},P.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(O,x),i(k,x),i(j,x),j.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,i=67108863&n;n>>>=26,e.words[r]=i,t=n}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(g[e])return g[e];var t;if("k256"===e)t=new P;else if("p224"===e)t=new O;else if("p192"===e)t=new k;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new j}return g[e]=t,t},M.prototype._verify1=function(e){n(0===e.negative,"red works only with positives"),n(e.red,"red works only with red numbers")},M.prototype._verify2=function(e,t){n(0==(e.negative|t.negative),"red works only with positives"),n(e.red&&e.red===t.red,"red works only with red numbers")},M.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(u(e,e.umod(this.m)._forceRed(this)),e)},M.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},M.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},M.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},M.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},M.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},M.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},M.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},M.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},M.prototype.isqr=function(e){return this.imul(e,e.clone())},M.prototype.sqr=function(e){return this.mul(e,e)},M.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(n(t%2==1),3===t){var r=this.m.add(new o(1)).iushrn(2);return this.pow(e,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),c=a.redNeg(),d=this.m.subn(1).iushrn(1),u=this.m.bitLength();for(u=new o(2*u*u).toRed(this);0!==this.pow(u,d).cmp(c);)u.redIAdd(c);for(var l=this.pow(u,i),f=this.pow(e,i.addn(1).iushrn(1)),h=this.pow(e,i),p=s;0!==h.cmp(a);){for(var b=h,m=0;0!==b.cmp(a);m++)b=b.redSqr();n(m<p);var y=this.pow(l,new o(1).iushln(p-m-1));f=f.redMul(y),l=y.redSqr(),h=h.redMul(l),p=m}return f},M.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},M.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var i=r[0],s=0,a=0,c=t.bitLength()%26;for(0===c&&(c=26),n=t.length-1;n>=0;n--){for(var d=t.words[n],u=c-1;u>=0;u--){var l=d>>u&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==s?(s<<=1,s|=l,(4==++a||0===n&&0===u)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0}c=26}return i},M.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},M.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new N(e)},i(N,M),N.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},N.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},N.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},N.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},N.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=r.nmd(e),this)},655:(e,t,r)=>{"use strict";r.r(t),r.d(t,{__assign:()=>o,__asyncDelegator:()=>j,__asyncGenerator:()=>k,__asyncValues:()=>M,__await:()=>O,__awaiter:()=>p,__classPrivateFieldGet:()=>z,__classPrivateFieldIn:()=>L,__classPrivateFieldSet:()=>A,__createBinding:()=>m,__decorate:()=>a,__esDecorate:()=>d,__exportStar:()=>y,__extends:()=>i,__generator:()=>b,__importDefault:()=>B,__importStar:()=>E,__makeTemplateObject:()=>N,__metadata:()=>h,__param:()=>c,__propKey:()=>l,__read:()=>w,__rest:()=>s,__runInitializers:()=>u,__setFunctionName:()=>f,__spread:()=>g,__spreadArray:()=>P,__spreadArrays:()=>x,__values:()=>v});var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)};function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var o=function(){return o=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},o.apply(this,arguments)};function s(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(n=Object.getOwnPropertySymbols(e);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(e,n[i])&&(r[n[i]]=e[n[i]])}return r}function a(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s}function c(e,t){return function(r,n){t(r,n,e)}}function d(e,t,r,n,i,o){function s(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var a,c=n.kind,d="getter"===c?"get":"setter"===c?"set":"value",u=!t&&e?n.static?e:e.prototype:null,l=t||(u?Object.getOwnPropertyDescriptor(u,n.name):{}),f=!1,h=r.length-1;h>=0;h--){var p={};for(var b in n)p[b]="access"===b?{}:n[b];for(var b in n.access)p.access[b]=n.access[b];p.addInitializer=function(e){if(f)throw new TypeError("Cannot add initializers after decoration has completed");o.push(s(e||null))};var m=(0,r[h])("accessor"===c?{get:l.get,set:l.set}:l[d],p);if("accessor"===c){if(void 0===m)continue;if(null===m||"object"!=typeof m)throw new TypeError("Object expected");(a=s(m.get))&&(l.get=a),(a=s(m.set))&&(l.set=a),(a=s(m.init))&&i.push(a)}else(a=s(m))&&("field"===c?i.push(a):l[d]=a)}u&&Object.defineProperty(u,n.name,l),f=!0}function u(e,t,r){for(var n=arguments.length>2,i=0;i<t.length;i++)r=n?t[i].call(e,r):t[i].call(e);return n?r:void 0}function l(e){return"symbol"==typeof e?e:"".concat(e)}function f(e,t,r){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:r?"".concat(r," ",t):t})}function h(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function p(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{c(n.next(e))}catch(e){o(e)}}function a(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((n=n.apply(e,t||[])).next())}))}function b(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(c){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}}var m=Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]};function y(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||m(t,e,r)}function v(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function w(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)s.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return s}function g(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(w(arguments[t]));return e}function x(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,a=o.length;s<a;s++,i++)n[i]=o[s];return n}function P(e,t,r){if(r||2===arguments.length)for(var n,i=0,o=t.length;i<o;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))}function O(e){return this instanceof O?(this.v=e,this):new O(e)}function k(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=i[e](t)).value instanceof O?Promise.resolve(r.value.v).then(c,d):u(o[0][2],r)}catch(e){u(o[0][3],e)}var r}function c(e){a("next",e)}function d(e){a("throw",e)}function u(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}}function j(e){var t,r;return t={},n("next"),n("throw",(function(e){throw e})),n("return"),t[Symbol.iterator]=function(){return this},t;function n(n,i){t[n]=e[n]?function(t){return(r=!r)?{value:O(e[n](t)),done:!1}:i?i(t):t}:i}}function M(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=v(e),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)}(n,i,(t=e[r](t)).done,t.value)}))}}}function N(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var T=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function E(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&m(t,e,r);return T(t,e),t}function B(e){return e&&e.__esModule?e:{default:e}}function z(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)}function A(e,t,r,n,i){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?i.call(e,r):i?i.value=r:t.set(e,r),r}function L(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}},6601:()=>{},7452:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownGenesis=void 0,t.knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]}},1332:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownIcon=void 0,t.knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"}},8197:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownTestnet=t.knownLedger=t.knownIcon=t.knownGenesis=void 0;var n=r(7452);Object.defineProperty(t,"knownGenesis",{enumerable:!0,get:function(){return n.knownGenesis}});var i=r(1332);Object.defineProperty(t,"knownIcon",{enumerable:!0,get:function(){return i.knownIcon}});var o=r(2475);Object.defineProperty(t,"knownLedger",{enumerable:!0,get:function(){return o.knownLedger}});var s=r(1664);Object.defineProperty(t,"knownTestnet",{enumerable:!0,get:function(){return s.knownTestnet}})},2475:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownLedger=void 0,t.knownLedger={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:354,vtb:694,xxnetwork:1955}},1664:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownTestnet=void 0,t.knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0}},2519:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,r(655).__exportStar(r(6700),t);var n=r(7057);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return n.packageInfo}})},6700:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectableNetworks=t.availableNetworks=t.allNetworks=void 0;const n=r(655).__importDefault(r(2314)),i=r(8197),o=[0,2,42],s=["testnet"];t.allNetworks=n.default.map((function(e){const t=e.network||"",r=t.replace(/_/g,"-").split("-"),n=e;return n.slip44=i.knownLedger[t],n.hasLedgerSupport=!!n.slip44,n.genesisHash=i.knownGenesis[t]||[],n.icon=i.knownIcon[t]||"substrate",n.isTestnet=!!i.knownTestnet[t]||s.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,n})),t.availableNetworks=t.allNetworks.filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){const r=o.includes(e.prefix);return r===o.includes(t.prefix)?r?0:e.displayName.localeCompare(t.displayName):r?-1:1})),t.selectableNetworks=t.availableNetworks.filter((function({genesisHash:e,prefix:t}){return!!e.length||42===t}))},7057:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/networks",path:"/",type:"cjs",version:"12.1.2"}},9086:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressToEvm=void 0;const n=r(4888);t.addressToEvm=function(e,t){return(0,n.decodeAddress)(e,t).subarray(0,20)}},1349:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkAddress=void 0;const n=r(2571),i=r(109),o=r(7312);t.checkAddress=function(e,t){let r;try{r=(0,n.base58Decode)(e)}catch(e){return[!1,e.message]}const[s,,,a]=(0,i.checkAddressChecksum)(r);return a!==t?[!1,`Prefix mismatch, expected ${t}, found ${a}`]:o.defaults.allowedEncodedLengths.includes(r.length)?[s,s?null:"Invalid decoded address checksum"]:[!1,"Invalid decoded address length"]}},109:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkAddressChecksum=void 0;const n=r(2611);t.checkAddressChecksum=function(e){const t=64&e[0]?2:1,r=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,i=[34+t,35+t].includes(e.length),o=e.length-(i?2:1),s=(0,n.sshash)(e.subarray(0,o));return[0==(128&e[0])&&![46,47].includes(e[0])&&(i?e[e.length-2]===s[0]&&e[e.length-1]===s[1]:e[e.length-1]===s[0]),o,t,r]}},4888:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeAddress=void 0;const n=r(8245),i=r(2571),o=r(109),s=r(7312);t.decodeAddress=function(e,t,r=-1){if(!e)throw new Error("Invalid empty address passed");if((0,n.isU8a)(e)||(0,n.isHex)(e))return(0,n.u8aToU8a)(e);try{const n=(0,i.base58Decode)(e);if(!s.defaults.allowedEncodedLengths.includes(n.length))throw new Error("Invalid decoded address length");const[a,c,d,u]=(0,o.checkAddressChecksum)(n);if(!a&&!t)throw new Error("Invalid decoded address checksum");if(-1!==r&&r!==u)throw new Error(`Expected ss58Format ${r}, received ${u}`);return n.slice(d,c)}catch(t){throw new Error(`Decoding ${e}: ${t.message}`)}}},7312:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaults=void 0;const n=r(4392);t.defaults={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:n.availableNetworks.map((({prefix:e})=>e)),prefix:42}},2986:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deriveAddress=void 0;const n=r(8574),i=r(9070),o=r(4888),s=r(7410);function a({isHard:e}){return e}t.deriveAddress=function(e,t,r){const{path:c}=(0,n.keyExtractPath)(t);if(!c.length||c.every(a))throw new Error("Expected suri to contain a combination of non-hard paths");let d=(0,o.decodeAddress)(e);for(const{chainCode:e}of c)d=(0,i.sr25519DerivePublic)(d,e);return(0,s.encodeAddress)(d,r)}},7410:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeAddress=void 0;const n=r(8245),i=r(2571),o=r(4888),s=r(7312),a=r(2611);t.encodeAddress=function(e,t=s.defaults.prefix){const r=(0,o.decodeAddress)(e);if(t<0||t>16383||[46,47].includes(t))throw new Error("Out of range ss58Format specified");if(!s.defaults.allowedDecodedLengths.includes(r.length))throw new Error(`Expected a valid key to convert, with length ${s.defaults.allowedDecodedLengths.join(", ")}`);const c=(0,n.u8aConcat)(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],r);return(0,i.base58Encode)((0,n.u8aConcat)(c,(0,a.sshash)(c).subarray(0,[32,33].includes(r.length)?2:1)))}},3149:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeDerivedAddress=void 0;const n=r(4888),i=r(7410),o=r(5648);t.encodeDerivedAddress=function(e,t,r){return(0,i.encodeAddress)((0,o.createKeyDerived)((0,n.decodeAddress)(e),t),r)}},42:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeMultiAddress=void 0;const n=r(7410),i=r(5104);t.encodeMultiAddress=function(e,t,r){return(0,n.encodeAddress)((0,i.createKeyMulti)(e,t),r)}},3505:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressEq=void 0;const n=r(8245),i=r(4888);t.addressEq=function(e,t){return(0,n.u8aEq)((0,i.decodeAddress)(e),(0,i.decodeAddress)(t))}},9089:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.evmToAddress=void 0;const n=r(8245),i=r(3080),o=r(7410);t.evmToAddress=function(e,t,r="blake2"){const s=(0,n.u8aConcat)("evm:",e);if(24!==s.length)throw new Error(`Converting ${e}: Invalid evm address length`);return(0,o.encodeAddress)((0,i.hasher)(r,s),t)}},8703:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSS58Format=t.validateAddress=t.sortAddresses=t.createKeyMulti=t.createKeyDerived=t.isAddress=t.evmToAddress=t.addressEq=t.encodeMultiAddress=t.encodeDerivedAddress=t.encodeAddress=t.deriveAddress=t.decodeAddress=t.checkAddressChecksum=t.checkAddress=t.addressToEvm=void 0;var n=r(9086);Object.defineProperty(t,"addressToEvm",{enumerable:!0,get:function(){return n.addressToEvm}});var i=r(1349);Object.defineProperty(t,"checkAddress",{enumerable:!0,get:function(){return i.checkAddress}});var o=r(109);Object.defineProperty(t,"checkAddressChecksum",{enumerable:!0,get:function(){return o.checkAddressChecksum}});var s=r(4888);Object.defineProperty(t,"decodeAddress",{enumerable:!0,get:function(){return s.decodeAddress}});var a=r(2986);Object.defineProperty(t,"deriveAddress",{enumerable:!0,get:function(){return a.deriveAddress}});var c=r(7410);Object.defineProperty(t,"encodeAddress",{enumerable:!0,get:function(){return c.encodeAddress}});var d=r(3149);Object.defineProperty(t,"encodeDerivedAddress",{enumerable:!0,get:function(){return d.encodeDerivedAddress}});var u=r(42);Object.defineProperty(t,"encodeMultiAddress",{enumerable:!0,get:function(){return u.encodeMultiAddress}});var l=r(3505);Object.defineProperty(t,"addressEq",{enumerable:!0,get:function(){return l.addressEq}});var f=r(9089);Object.defineProperty(t,"evmToAddress",{enumerable:!0,get:function(){return f.evmToAddress}});var h=r(2114);Object.defineProperty(t,"isAddress",{enumerable:!0,get:function(){return h.isAddress}});var p=r(5648);Object.defineProperty(t,"createKeyDerived",{enumerable:!0,get:function(){return p.createKeyDerived}});var b=r(5104);Object.defineProperty(t,"createKeyMulti",{enumerable:!0,get:function(){return b.createKeyMulti}});var m=r(2741);Object.defineProperty(t,"sortAddresses",{enumerable:!0,get:function(){return m.sortAddresses}});var y=r(8049);Object.defineProperty(t,"validateAddress",{enumerable:!0,get:function(){return y.validateAddress}});var v=r(1637);Object.defineProperty(t,"setSS58Format",{enumerable:!0,get:function(){return v.setSS58Format}})},2114:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAddress=void 0;const n=r(8049);t.isAddress=function(e,t,r){try{return(0,n.validateAddress)(e,t,r)}catch{return!1}}},5648:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createKeyDerived=void 0;const n=r(8245),i=r(2256),o=r(7874),s=r(4888),a=(0,n.stringToU8a)("modlpy/utilisuba");t.createKeyDerived=function(e,t){return(0,i.blake2AsU8a)((0,n.u8aConcat)(a,(0,s.decodeAddress)(e),(0,n.bnToU8a)(t,o.BN_LE_16_OPTS)))}},5104:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createKeyMulti=void 0;const n=r(8245),i=r(2256),o=r(7874),s=r(3330),a=(0,n.stringToU8a)("modlpy/utilisuba");t.createKeyMulti=function(e,t){return(0,i.blake2AsU8a)((0,n.u8aConcat)(a,(0,n.compactToU8a)(e.length),...(0,n.u8aSorted)(e.map(s.addressToU8a)),(0,n.bnToU8a)(t,o.BN_LE_16_OPTS)))}},1637:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSS58Format=void 0;const n=r(8245),i=r(7312),o=(0,n.logger)("setSS58Format");t.setSS58Format=function(e){o.warn("Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as part of the address encode function"),i.defaults.prefix=e}},2741:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sortAddresses=void 0;const n=r(8245),i=r(7410),o=r(3330);t.sortAddresses=function(e,t){return(0,n.u8aSorted)(e.map(o.addressToU8a)).map((e=>(0,i.encodeAddress)(e,t)))}},2611:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sshash=void 0;const n=r(8245),i=r(2256),o=(0,n.stringToU8a)("SS58PRE");t.sshash=function(e){return(0,i.blake2AsU8a)((0,n.u8aConcat)(o,e),512)}},3330:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressToU8a=void 0;const n=r(4888);t.addressToU8a=function(e){return(0,n.decodeAddress)(e)}},8049:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateAddress=void 0;const n=r(4888);t.validateAddress=function(e,t,r){return!!(0,n.decodeAddress)(e,t,r)}},1990:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base32Encode=t.base32Decode=t.isBase32=t.base32Validate=void 0;const n=r(9187),i=r(4490),o="abcdefghijklmnopqrstuvwxyz234567",s={chars:o,coder:n.utils.chain(n.utils.radix2(5),n.utils.alphabet(o),{decode:e=>e.split(""),encode:e=>e.join("")}),ipfs:"b",type:"base32"};t.base32Validate=(0,i.createValidate)(s),t.isBase32=(0,i.createIs)(t.base32Validate),t.base32Decode=(0,i.createDecode)(s,t.base32Validate),t.base32Encode=(0,i.createEncode)(s)},4490:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createValidate=t.createIs=t.createEncode=t.createDecode=void 0;const n=r(8245);t.createDecode=function({coder:e,ipfs:t},r){return(n,i)=>(r(n,i),e.decode(t&&i?n.substring(1):n))},t.createEncode=function({coder:e,ipfs:t}){return(r,i)=>{const o=e.encode((0,n.u8aToU8a)(r));return t&&i?`${t}${o}`:o}},t.createIs=function(e){return(t,r)=>{try{return e(t,r)}catch{return!1}}},t.createValidate=function({chars:e,ipfs:t,type:r}){return(n,i)=>{if("string"!=typeof n)throw new Error(`Expected ${r} string input`);if(t&&i&&n[0]!==t)throw new Error(`Expected ipfs-compatible ${r} to start with '${t}'`);for(let t=i?1:0;t<n.length;t++)if(!e.includes(n[t])&&("="!==n[t]||t!==n.length-1&&e.includes(n[t+1])))throw new Error(`Invalid ${r} character "${n[t]}" (0x${n.charCodeAt(t).toString(16)}) at index ${t}`);return!0}}},4444:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase32=t.base32Validate=t.base32Encode=t.base32Decode=void 0;var n=r(1990);Object.defineProperty(t,"base32Decode",{enumerable:!0,get:function(){return n.base32Decode}}),Object.defineProperty(t,"base32Encode",{enumerable:!0,get:function(){return n.base32Encode}}),Object.defineProperty(t,"base32Validate",{enumerable:!0,get:function(){return n.base32Validate}}),Object.defineProperty(t,"isBase32",{enumerable:!0,get:function(){return n.isBase32}})},3594:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase58=t.base58Encode=t.base58Decode=t.base58Validate=void 0;const n=r(9187),i=r(4490),o={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:n.base58,ipfs:"z",type:"base58"};t.base58Validate=(0,i.createValidate)(o),t.base58Decode=(0,i.createDecode)(o,t.base58Validate),t.base58Encode=(0,i.createEncode)(o),t.isBase58=(0,i.createIs)(t.base58Validate)},2571:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase58=t.base58Validate=t.base58Encode=t.base58Decode=void 0;var n=r(3594);Object.defineProperty(t,"base58Decode",{enumerable:!0,get:function(){return n.base58Decode}}),Object.defineProperty(t,"base58Encode",{enumerable:!0,get:function(){return n.base58Encode}}),Object.defineProperty(t,"base58Validate",{enumerable:!0,get:function(){return n.base58Validate}}),Object.defineProperty(t,"isBase58",{enumerable:!0,get:function(){return n.isBase58}})},4053:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Encode=t.base64Decode=t.isBase64=t.base64Validate=void 0;const n=r(9187),i=r(4490),o={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:n.base64,type:"base64"};t.base64Validate=(0,i.createValidate)(o),t.isBase64=(0,i.createIs)(t.base64Validate),t.base64Decode=(0,i.createDecode)(o,t.base64Validate),t.base64Encode=(0,i.createEncode)(o)},8195:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Trim=t.base64Pad=t.isBase64=t.base64Validate=t.base64Encode=t.base64Decode=void 0;var n=r(4053);Object.defineProperty(t,"base64Decode",{enumerable:!0,get:function(){return n.base64Decode}}),Object.defineProperty(t,"base64Encode",{enumerable:!0,get:function(){return n.base64Encode}}),Object.defineProperty(t,"base64Validate",{enumerable:!0,get:function(){return n.base64Validate}}),Object.defineProperty(t,"isBase64",{enumerable:!0,get:function(){return n.isBase64}});var i=r(3320);Object.defineProperty(t,"base64Pad",{enumerable:!0,get:function(){return i.base64Pad}});var o=r(7906);Object.defineProperty(t,"base64Trim",{enumerable:!0,get:function(){return o.base64Trim}})},3320:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Pad=void 0,t.base64Pad=function(e){return e.padEnd(e.length+e.length%4,"=")}},7906:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Trim=void 0,t.base64Trim=function(e){for(;e.length&&"="===e[e.length-1];)e=e.slice(0,-1);return e}},2256:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.blake2AsHex=t.blake2AsU8a=void 0;const n=r(3803),i=r(8245),o=r(8928),s=r(3115);function a(e,t=256,r,s){const a=Math.ceil(t/8),c=(0,i.u8aToU8a)(e);return!i.hasBigInt||!s&&(0,o.isReady)()?(0,o.blake2b)(c,(0,i.u8aToU8a)(r),a):r?(0,n.blake2b)(c,{dkLen:a,key:r}):(0,n.blake2b)(c,{dkLen:a})}t.blake2AsU8a=a,t.blake2AsHex=(0,s.createAsHex)(a)},7295:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.blake2AsU8a=t.blake2AsHex=void 0;var n=r(2256);Object.defineProperty(t,"blake2AsHex",{enumerable:!0,get:function(){return n.blake2AsHex}}),Object.defineProperty(t,"blake2AsU8a",{enumerable:!0,get:function(){return n.blake2AsU8a}})},7874:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN_LE_512_OPTS=t.BN_LE_256_OPTS=t.BN_BE_256_OPTS=t.BN_LE_32_OPTS=t.BN_BE_32_OPTS=t.BN_LE_16_OPTS=t.BN_LE_OPTS=t.BN_BE_OPTS=void 0,t.BN_BE_OPTS={isLe:!1},t.BN_LE_OPTS={isLe:!0},t.BN_LE_16_OPTS={bitLength:16,isLe:!0},t.BN_BE_32_OPTS={bitLength:32,isLe:!1},t.BN_LE_32_OPTS={bitLength:32,isLe:!0},t.BN_BE_256_OPTS={bitLength:256,isLe:!1},t.BN_LE_256_OPTS={bitLength:256,isLe:!0},t.BN_LE_512_OPTS={bitLength:512,isLe:!0}},4826:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;const n=r(655);r(7416);var i=r(8689);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}}),n.__exportStar(r(8703),t),n.__exportStar(r(4444),t),n.__exportStar(r(2571),t),n.__exportStar(r(8195),t),n.__exportStar(r(7295),t),n.__exportStar(r(6750),t),n.__exportStar(r(7626),t),n.__exportStar(r(4309),t),n.__exportStar(r(6180),t),n.__exportStar(r(3209),t),n.__exportStar(r(6490),t),n.__exportStar(r(1679),t),n.__exportStar(r(8574),t),n.__exportStar(r(6945),t),n.__exportStar(r(3951),t),n.__exportStar(r(4392),t),n.__exportStar(r(4007),t),n.__exportStar(r(3577),t),n.__exportStar(r(4840),t),n.__exportStar(r(4904),t),n.__exportStar(r(6843),t),n.__exportStar(r(7819),t),n.__exportStar(r(9070),t),n.__exportStar(r(5486),t)},7416:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(4375),(0,r(6750).cryptoWaitReady)().catch((()=>{}))},6750:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cryptoWaitReady=t.cryptoIsReady=void 0;const n=r(8928);t.cryptoIsReady=n.isReady,t.cryptoWaitReady=function(){return(0,n.waitReady)().then((()=>{if(!(0,n.isReady)())throw new Error("Unable to initialize @polkadot/util-crypto");return!0})).catch((()=>!1))}},2470:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(7057),i=r(321),o=r(2714);t.default=[n.packageInfo,i.packageInfo,o.packageInfo]},5899:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655),i=r(8245),o=n.__importDefault(r(2470)),s=r(8689);(0,i.detectPackage)(s.packageInfo,null,o.default)},269:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519DeriveHard=void 0;const n=r(8245),i=r(2256),o=(0,n.compactAddLength)((0,n.stringToU8a)("Ed25519HDKD"));t.ed25519DeriveHard=function(e,t){if(!(0,n.isU8a)(t)||32!==t.length)throw new Error("Invalid chainCode passed to derive");return(0,i.blake2AsU8a)((0,n.u8aConcat)(o,e,t))}},7626:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Verify=t.ed25519Sign=t.ed25519PairFromString=t.ed25519PairFromSeed=t.ed25519PairFromSecret=t.ed25519PairFromRandom=t.ed25519DeriveHard=void 0;var n=r(269);Object.defineProperty(t,"ed25519DeriveHard",{enumerable:!0,get:function(){return n.ed25519DeriveHard}});var i=r(7240);Object.defineProperty(t,"ed25519PairFromRandom",{enumerable:!0,get:function(){return i.ed25519PairFromRandom}});var o=r(2539);Object.defineProperty(t,"ed25519PairFromSecret",{enumerable:!0,get:function(){return o.ed25519PairFromSecret}});var s=r(3157);Object.defineProperty(t,"ed25519PairFromSeed",{enumerable:!0,get:function(){return s.ed25519PairFromSeed}});var a=r(7260);Object.defineProperty(t,"ed25519PairFromString",{enumerable:!0,get:function(){return a.ed25519PairFromString}});var c=r(177);Object.defineProperty(t,"ed25519Sign",{enumerable:!0,get:function(){return c.ed25519Sign}});var d=r(2209);Object.defineProperty(t,"ed25519Verify",{enumerable:!0,get:function(){return d.ed25519Verify}})},7240:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromRandom=void 0;const n=r(3577),i=r(3157);t.ed25519PairFromRandom=function(){return(0,i.ed25519PairFromSeed)((0,n.randomAsU8a)())}},2539:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromSecret=void 0,t.ed25519PairFromSecret=function(e){if(64!==e.length)throw new Error("Invalid secretKey provided");return{publicKey:e.slice(32),secretKey:e}}},3157:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromSeed=void 0;const n=r(2889),i=r(8245),o=r(8928);t.ed25519PairFromSeed=function(e,t){if(!i.hasBigInt||!t&&(0,o.isReady)()){const t=(0,o.ed25519KeypairFromSeed)(e);return{publicKey:t.slice(32),secretKey:t.slice(0,64)}}const r=n.ed25519.getPublicKey(e);return{publicKey:r,secretKey:(0,i.u8aConcatStrict)([e,r])}}},7260:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromString=void 0;const n=r(8245),i=r(2256),o=r(3157);t.ed25519PairFromString=function(e){return(0,o.ed25519PairFromSeed)((0,i.blake2AsU8a)((0,n.stringToU8a)(e)))}},177:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Sign=void 0;const n=r(2889),i=r(8245),o=r(8928);t.ed25519Sign=function(e,{publicKey:t,secretKey:r},s){if(!r)throw new Error("Expected a valid secretKey");if(!t)throw new Error("Expected a valid publicKey");const a=(0,i.u8aToU8a)(e),c=r.subarray(0,32);return!i.hasBigInt||!s&&(0,o.isReady)()?(0,o.ed25519Sign)(t,c,a):n.ed25519.sign(a,c)}},2209:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Verify=void 0;const n=r(2889),i=r(8245),o=r(8928);t.ed25519Verify=function(e,t,r,s){const a=(0,i.u8aToU8a)(e),c=(0,i.u8aToU8a)(r),d=(0,i.u8aToU8a)(t);if(32!==c.length)throw new Error(`Invalid publicKey, received ${c.length}, expected 32`);if(64!==d.length)throw new Error(`Invalid signature, received ${d.length} bytes, expected 64`);try{return!i.hasBigInt||!s&&(0,o.isReady)()?(0,o.ed25519Verify)(d,a,c):n.ed25519.verify(d,a,c)}catch{return!1}}},8478:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ethereumEncode=void 0;const n=r(8245),i=r(1679),o=r(4904);t.ethereumEncode=function(e){if(!e)return"0x";const t=(0,n.u8aToU8a)(e);if(![20,32,33,65].includes(t.length))throw new Error(`Invalid address or publicKey provided, received ${t.length} bytes input`);const r=(0,n.u8aToHex)(([33,65].includes((s=t).length)&&(s=(0,i.keccakAsU8a)((0,o.secp256k1Expand)(s))),s.slice(-20)),-1,!1);var s;const a=(0,n.u8aToHex)((0,i.keccakAsU8a)(r),-1,!1);let c="";for(let e=0;e<40;e++)c=`${c}${parseInt(a[e],16)>7?r[e].toUpperCase():r[e]}`;return`0x${c}`}},4309:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumChecksum=t.isEthereumAddress=t.ethereumEncode=void 0;var n=r(8478);Object.defineProperty(t,"ethereumEncode",{enumerable:!0,get:function(){return n.ethereumEncode}});var i=r(4098);Object.defineProperty(t,"isEthereumAddress",{enumerable:!0,get:function(){return i.isEthereumAddress}});var o=r(3863);Object.defineProperty(t,"isEthereumChecksum",{enumerable:!0,get:function(){return o.isEthereumChecksum}})},4098:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumAddress=void 0;const n=r(8245),i=r(3863);t.isEthereumAddress=function(e){return!(!e||42!==e.length||!(0,n.isHex)(e))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||(0,i.isEthereumChecksum)(e))}},3863:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumChecksum=void 0;const n=r(8245),i=r(1679);t.isEthereumChecksum=function(e){const t=e.replace("0x",""),r=(0,n.u8aToHex)((0,i.keccakAsU8a)(t.toLowerCase()),-1,!1);for(let e=0;e<40;e++)if((o=t[e])!==(parseInt(r[e],16)>7?o.toUpperCase():o.toLowerCase()))return!1;var o;return!0}},3306:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hdEthereum=void 0;const n=r(8245),i=r(7874),o=r(3209),s=r(4904),a=r(8581),c=(0,n.stringToU8a)("Bitcoin seed");function d(e,t){return{chainCode:t,publicKey:(0,s.secp256k1PairFromSeed)(e).publicKey,secretKey:e}}function u(e,t){const r=(0,n.bnToU8a)(t,i.BN_BE_32_OPTS),c=t>=a.HARDENED?(0,n.u8aConcat)(new Uint8Array(1),e.secretKey,r):(0,n.u8aConcat)(e.publicKey,r);try{const t=(0,o.hmacShaAsU8a)(e.chainCode,c,512);return d((0,s.secp256k1PrivateKeyTweakAdd)(e.secretKey,t.slice(0,32)),t.slice(32))}catch{return u(e,t+1)}}t.hdEthereum=function(e,t=""){const r=(0,o.hmacShaAsU8a)(c,e,512);let n=d(r.slice(0,32),r.slice(32));if(!t||"m"===t||"M"===t||"m'"===t||"M'"===t)return n;if(!(0,a.hdValidatePath)(t))throw new Error("Invalid derivation path");const i=t.split("/").slice(1);for(const e of i)n=u(n,parseInt(e,10)+(e.length>1&&e.endsWith("'")?a.HARDENED:0));return n}},6180:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hdValidatePath=t.hdLedger=t.hdEthereum=void 0;var n=r(3306);Object.defineProperty(t,"hdEthereum",{enumerable:!0,get:function(){return n.hdEthereum}});var i=r(9978);Object.defineProperty(t,"hdLedger",{enumerable:!0,get:function(){return i.hdLedger}});var o=r(8581);Object.defineProperty(t,"hdValidatePath",{enumerable:!0,get:function(){return o.hdValidatePath}})},130:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ledgerDerivePrivate=void 0;const n=r(8245),i=r(7874),o=r(3209);t.ledgerDerivePrivate=function(e,t){const r=e.subarray(0,32),s=e.subarray(32,64),a=e.subarray(64,96),c=(0,n.u8aConcat)([0],r,s,(0,n.bnToU8a)(t,i.BN_LE_32_OPTS)),d=(0,o.hmacShaAsU8a)(a,c,512);return c[0]=1,(0,n.u8aConcat)((0,n.bnToU8a)((0,n.u8aToBn)(r,i.BN_LE_OPTS).iadd((0,n.u8aToBn)(d.subarray(0,28),i.BN_LE_OPTS).imul(n.BN_EIGHT)),i.BN_LE_512_OPTS).subarray(0,32),(0,n.bnToU8a)((0,n.u8aToBn)(s,i.BN_LE_OPTS).iadd((0,n.u8aToBn)(d.subarray(32,64),i.BN_LE_OPTS)),i.BN_LE_512_OPTS).subarray(0,32),(0,o.hmacShaAsU8a)(a,c,512).subarray(32,64))}},9978:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hdLedger=void 0;const n=r(7626),i=r(6945),o=r(8581),s=r(130),a=r(533);t.hdLedger=function(e,t){const r=e.split(" ").map((e=>e.trim())).filter((e=>e));if(![12,24,25].includes(r.length))throw new Error("Expected a mnemonic with 24 words (or 25 including a password)");const[c,d]=25===r.length?[r.slice(0,24).join(" "),r[24]]:[r.join(" "),""];if(!(0,i.mnemonicValidate)(c))throw new Error("Invalid mnemonic passed to ledger derivation");if(!(0,o.hdValidatePath)(t))throw new Error("Invalid derivation path");const u=t.split("/").slice(1);let l=(0,a.ledgerMaster)(c,d);for(const e of u){const t=parseInt(e.replace(/'$/,""),10);l=(0,s.ledgerDerivePrivate)(l,t<o.HARDENED?t+o.HARDENED:t)}return(0,n.ed25519PairFromSeed)(l.slice(0,32))}},533:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ledgerMaster=void 0;const n=r(8245),i=r(3209),o=r(4859),s="ed25519 seed";t.ledgerMaster=function(e,t){const r=(0,o.mnemonicToSeedSync)(e,t),a=(0,i.hmacShaAsU8a)(s,new Uint8Array([1,...r]),256);let c;for(;!c||32&c[31];)c=(0,i.hmacShaAsU8a)(s,c||r,512);return c[0]&=248,c[31]&=127,c[31]|=64,(0,n.u8aConcat)(c,a)}},8581:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hdValidatePath=t.HARDENED=void 0,t.HARDENED=2147483648,t.hdValidatePath=function(e){if(!e.startsWith("m/"))return!1;const r=e.split("/").slice(1);for(const e of r){const r=/^\d+'?$/.test(e)?parseInt(e.replace(/'$/,""),10):Number.NaN;if(isNaN(r)||r>=t.HARDENED||r<0)return!1}return!0}},3115:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDualHasher=t.createBitHasher=t.createAsHex=void 0;const n=r(8245),i=r(8928);t.createAsHex=function(e){return(...t)=>(0,n.u8aToHex)(e(...t))},t.createBitHasher=function(e,t){return(r,n)=>t(r,e,n)},t.createDualHasher=function(e,t){return(r,o=256,s)=>{const a=(0,n.u8aToU8a)(r);return!n.hasBigInt||!s&&(0,i.isReady)()?e[o](a):t[o](a)}}},3209:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmacShaAsU8a=t.hmacSha512AsU8a=t.hmacSha256AsU8a=void 0;var n=r(539);Object.defineProperty(t,"hmacSha256AsU8a",{enumerable:!0,get:function(){return n.hmacSha256AsU8a}}),Object.defineProperty(t,"hmacSha512AsU8a",{enumerable:!0,get:function(){return n.hmacSha512AsU8a}}),Object.defineProperty(t,"hmacShaAsU8a",{enumerable:!0,get:function(){return n.hmacShaAsU8a}})},539:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmacSha512AsU8a=t.hmacSha256AsU8a=t.hmacShaAsU8a=void 0;const n=r(9569),i=r(3061),o=r(6262),s=r(8245),a=r(8928),c={256:i.sha256,512:o.sha512},d={256:a.hmacSha256,512:a.hmacSha512};function u(e){return(t,r,n)=>l(t,r,e,n)}function l(e,t,r=256,i){const o=(0,s.u8aToU8a)(e);return!s.hasBigInt||!i&&(0,a.isReady)()?d[r](o,t):(0,n.hmac)(c[r],o,t)}t.hmacShaAsU8a=l,t.hmacSha256AsU8a=u(256),t.hmacSha512AsU8a=u(512)},9754:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);r(5899),n.__exportStar(r(4826),t)},3992:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SCRYPT_LENGTH=t.NONCE_LENGTH=t.ENCODING_VERSION=t.ENCODING_NONE=t.ENCODING=void 0,t.ENCODING=["scrypt","xsalsa20-poly1305"],t.ENCODING_NONE=["none"],t.ENCODING_VERSION="3",t.NONCE_LENGTH=24,t.SCRYPT_LENGTH=44},7366:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonDecrypt=void 0;const n=r(8245),i=r(8195),o=r(3836);t.jsonDecrypt=function({encoded:e,encoding:t},r){if(!e)throw new Error("No encrypted data available to decode");return(0,o.jsonDecryptData)((0,n.isHex)(e)?(0,n.hexToU8a)(e):(0,i.base64Decode)(e),r,Array.isArray(t.type)?t.type:[t.type])}},3836:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonDecryptData=void 0;const n=r(8245),i=r(3951),o=r(4840),s=r(3992);t.jsonDecryptData=function(e,t,r=s.ENCODING){if(!e)throw new Error("No encrypted data available to decode");if(r.includes("xsalsa20-poly1305")&&!t)throw new Error("Password required to decode encrypted data");let a=e;if(t){let c;if(r.includes("scrypt")){const{params:r,salt:n}=(0,o.scryptFromU8a)(e);c=(0,o.scryptEncode)(t,n,r).password,e=e.subarray(s.SCRYPT_LENGTH)}else c=(0,n.stringToU8a)(t);a=(0,i.naclDecrypt)(e.subarray(s.NONCE_LENGTH),e.subarray(0,s.NONCE_LENGTH),(0,n.u8aFixLength)(c,256,!0))}if(!a)throw new Error("Unable to decode using the supplied passphrase");return a}},6720:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncrypt=void 0;const n=r(8245),i=r(3951),o=r(4840),s=r(1311);t.jsonEncrypt=function(e,t,r){let a=!1,c=e;if(r){const{params:e,password:t,salt:s}=(0,o.scryptEncode)(r),{encrypted:d,nonce:u}=(0,i.naclEncrypt)(c,t.subarray(0,32));a=!0,c=(0,n.u8aConcat)((0,o.scryptToU8a)(s,e),u,d)}return(0,s.jsonEncryptFormat)(c,t,a)}},1311:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncryptFormat=void 0;const n=r(8195),i=r(3992);t.jsonEncryptFormat=function(e,t,r){return{encoded:(0,n.base64Encode)(e),encoding:{content:t,type:r?i.ENCODING:i.ENCODING_NONE,version:i.ENCODING_VERSION}}}},6490:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncryptFormat=t.jsonEncrypt=t.jsonDecryptData=t.jsonDecrypt=void 0;var n=r(7366);Object.defineProperty(t,"jsonDecrypt",{enumerable:!0,get:function(){return n.jsonDecrypt}});var i=r(3836);Object.defineProperty(t,"jsonDecryptData",{enumerable:!0,get:function(){return i.jsonDecryptData}});var o=r(6720);Object.defineProperty(t,"jsonEncrypt",{enumerable:!0,get:function(){return o.jsonEncrypt}});var s=r(1311);Object.defineProperty(t,"jsonEncryptFormat",{enumerable:!0,get:function(){return s.jsonEncryptFormat}})},7706:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keccakAsHex=t.keccak512AsU8a=t.keccak256AsU8a=t.keccakAsU8a=void 0;const n=r(5426),i=r(8928),o=r(3115);t.keccakAsU8a=(0,o.createDualHasher)({256:i.keccak256,512:i.keccak512},{256:n.keccak_256,512:n.keccak_512}),t.keccak256AsU8a=(0,o.createBitHasher)(256,t.keccakAsU8a),t.keccak512AsU8a=(0,o.createBitHasher)(512,t.keccakAsU8a),t.keccakAsHex=(0,o.createAsHex)(t.keccakAsU8a)},1679:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keccakAsU8a=t.keccakAsHex=t.keccak512AsU8a=t.keccak256AsU8a=void 0;var n=r(7706);Object.defineProperty(t,"keccak256AsU8a",{enumerable:!0,get:function(){return n.keccak256AsU8a}}),Object.defineProperty(t,"keccak512AsU8a",{enumerable:!0,get:function(){return n.keccak512AsU8a}}),Object.defineProperty(t,"keccakAsHex",{enumerable:!0,get:function(){return n.keccakAsHex}}),Object.defineProperty(t,"keccakAsU8a",{enumerable:!0,get:function(){return n.keccakAsU8a}})},8744:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DeriveJunction=void 0;const n=r(8245),i=r(2256),o=r(7874),s=/^\d+$/;class a{constructor(){this.__internal__chainCode=new Uint8Array(32),this.__internal__isHard=!1}static from(e){const t=new a,[r,i]=e.startsWith("/")?[e.substring(1),!0]:[e,!1];return t.soft(s.test(r)?new n.BN(r,10):r),i?t.harden():t}get chainCode(){return this.__internal__chainCode}get isHard(){return this.__internal__isHard}get isSoft(){return!this.__internal__isHard}hard(e){return this.soft(e).harden()}harden(){return this.__internal__isHard=!0,this}soft(e){return(0,n.isNumber)(e)||(0,n.isBn)(e)||(0,n.isBigInt)(e)?this.soft((0,n.bnToU8a)(e,o.BN_LE_256_OPTS)):(0,n.isHex)(e)?this.soft((0,n.hexToU8a)(e)):(0,n.isString)(e)?this.soft((0,n.compactAddLength)((0,n.stringToU8a)(e))):e.length>32?this.soft((0,i.blake2AsU8a)(e)):(this.__internal__chainCode.fill(0),this.__internal__chainCode.set(e,0),this)}soften(){return this.__internal__isHard=!1,this}}t.DeriveJunction=a},7405:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyExtractPath=void 0;const n=r(8744),i=/\/(\/?)([^/]+)/g;t.keyExtractPath=function(e){const t=e.match(i),r=[];let o="";if(t){o=t.join("");for(const e of t)r.push(n.DeriveJunction.from(e.substring(1)))}if(o!==e)throw new Error(`Re-constructed path "${o}" does not match input`);return{parts:t,path:r}}},3830:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyExtractSuri=void 0;const n=r(7405),i=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;t.keyExtractSuri=function(e){const t=e.match(i);if(null===t)throw new Error("Unable to match provided value to a secret URI");const[,r,,o,,,s]=t,{path:a}=(0,n.keyExtractPath)(o);return{derivePath:o,password:s,path:a,phrase:r}}},8129:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyFromPath=void 0;const n=r(141),i=r(7655),o=r(611),s={ecdsa:n.keyHdkdEcdsa,ed25519:i.keyHdkdEd25519,ethereum:n.keyHdkdEcdsa,sr25519:o.keyHdkdSr25519};t.keyFromPath=function(e,t,r){const n=s[r];let i=e;for(const e of t)i=n(i,e);return i}},9908:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createSeedDeriveFn=void 0,t.createSeedDeriveFn=function(e,t){return(r,{chainCode:n,isHard:i})=>{if(!i)throw new Error("A soft key was found in the path and is not supported");return e(t(r.secretKey.subarray(0,32),n))}}},141:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdEcdsa=void 0;const n=r(7912),i=r(6300),o=r(9908);t.keyHdkdEcdsa=(0,o.createSeedDeriveFn)(i.secp256k1PairFromSeed,n.secp256k1DeriveHard)},7655:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdEd25519=void 0;const n=r(7626),i=r(9908);t.keyHdkdEd25519=(0,i.createSeedDeriveFn)(n.ed25519PairFromSeed,n.ed25519DeriveHard)},611:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdSr25519=void 0;const n=r(4994),i=r(8160);t.keyHdkdSr25519=function(e,{chainCode:t,isSoft:r}){return r?(0,i.sr25519DeriveSoft)(e,t):(0,n.sr25519DeriveHard)(e,t)}},8574:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdSr25519=t.keyHdkdEd25519=t.keyHdkdEcdsa=t.keyFromPath=t.keyExtractSuri=t.keyExtractPath=void 0;var n=r(7405);Object.defineProperty(t,"keyExtractPath",{enumerable:!0,get:function(){return n.keyExtractPath}});var i=r(3830);Object.defineProperty(t,"keyExtractSuri",{enumerable:!0,get:function(){return i.keyExtractSuri}});var o=r(8129);Object.defineProperty(t,"keyFromPath",{enumerable:!0,get:function(){return o.keyFromPath}});var s=r(141);Object.defineProperty(t,"keyHdkdEcdsa",{enumerable:!0,get:function(){return s.keyHdkdEcdsa}});var a=r(7655);Object.defineProperty(t,"keyHdkdEd25519",{enumerable:!0,get:function(){return a.keyHdkdEd25519}});var c=r(611);Object.defineProperty(t,"keyHdkdSr25519",{enumerable:!0,get:function(){return c.keyHdkdSr25519}})},4859:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateMnemonic=t.generateMnemonic=t.entropyToMnemonic=t.mnemonicToEntropy=t.mnemonicToSeedSync=void 0;const n=r(655),i=r(8245),o=r(4007),s=r(3577),a=r(6843),c=n.__importDefault(r(7623)),d="Invalid mnemonic",u="Invalid entropy";function l(e){return(e||"").normalize("NFKD")}function f(e){return parseInt(e,2)}function h(e){return e.map((e=>e.toString(2).padStart(8,"0"))).join("")}function p(e){return h(Array.from((0,a.sha256AsU8a)(e))).slice(0,8*e.length/32)}function b(e,t=c.default){const r=l(e).split(" ");if(r.length%3!=0)throw new Error(d);const n=r.map((e=>{const r=t.indexOf(e);if(-1===r)throw new Error(d);return r.toString(2).padStart(11,"0")})).join(""),o=32*Math.floor(n.length/33),s=n.slice(0,o),a=n.slice(o),h=s.match(/(.{1,8})/g),b=h&&h.map(f);if(!b||b.length%4!=0||b.length<16||b.length>32)throw new Error(u);const m=(0,i.u8aToU8a)(b);if(p(m)!==a)throw new Error("Invalid mnemonic checksum");return m}function m(e,t=c.default){if(e.length%4!=0||e.length<16||e.length>32)throw new Error(u);const r=`${h(Array.from(e))}${p(e)}`.match(/(.{1,11})/g),n=r&&r.map((e=>t[f(e)]));if(!n||n.length<12)throw new Error("Unable to map entropy to mnemonic");return n.join(" ")}t.mnemonicToSeedSync=function(e,t){return(0,o.pbkdf2Encode)((0,i.stringToU8a)(l(e)),(0,i.stringToU8a)(`mnemonic${l(t)}`)).password},t.mnemonicToEntropy=b,t.entropyToMnemonic=m,t.generateMnemonic=function(e,t){return m((0,s.randomAsU8a)(e/3*4),t)},t.validateMnemonic=function(e,t){try{b(e,t)}catch{return!1}return!0}},3511:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicGenerate=void 0;const n=r(8245),i=r(8928),o=r(4859);t.mnemonicGenerate=function(e=12,t,r){return!n.hasBigInt||!t&&!r&&(0,i.isReady)()?(0,i.bip39Generate)(e):(0,o.generateMnemonic)(e,t)}},6945:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicValidate=t.mnemonicToMiniSecret=t.mnemonicToLegacySeed=t.mnemonicToEntropy=t.mnemonicGenerate=void 0;var n=r(3511);Object.defineProperty(t,"mnemonicGenerate",{enumerable:!0,get:function(){return n.mnemonicGenerate}});var i=r(6063);Object.defineProperty(t,"mnemonicToEntropy",{enumerable:!0,get:function(){return i.mnemonicToEntropy}});var o=r(678);Object.defineProperty(t,"mnemonicToLegacySeed",{enumerable:!0,get:function(){return o.mnemonicToLegacySeed}});var s=r(9289);Object.defineProperty(t,"mnemonicToMiniSecret",{enumerable:!0,get:function(){return s.mnemonicToMiniSecret}});var a=r(7352);Object.defineProperty(t,"mnemonicValidate",{enumerable:!0,get:function(){return a.mnemonicValidate}})},6063:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToEntropy=void 0;const n=r(8245),i=r(8928),o=r(4859);t.mnemonicToEntropy=function(e,t,r){return!n.hasBigInt||!t&&!r&&(0,i.isReady)()?(0,i.bip39ToEntropy)(e):(0,o.mnemonicToEntropy)(e,t)}},678:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToLegacySeed=void 0;const n=r(8245),i=r(8928),o=r(4859),s=r(7352);t.mnemonicToLegacySeed=function(e,t="",r,a=32){if(!(0,s.mnemonicValidate)(e))throw new Error("Invalid bip39 mnemonic specified");if(![32,64].includes(a))throw new Error(`Invalid seed length ${a}, expected 32 or 64`);return 32===a?!n.hasBigInt||!r&&(0,i.isReady)()?(0,i.bip39ToSeed)(e,t):(0,o.mnemonicToSeedSync)(e,t).subarray(0,32):(0,o.mnemonicToSeedSync)(e,t)}},9289:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToMiniSecret=void 0;const n=r(8245),i=r(8928),o=r(4007),s=r(6063),a=r(7352);t.mnemonicToMiniSecret=function(e,t="",r,c){if(!(0,a.mnemonicValidate)(e,r,c))throw new Error("Invalid bip39 mnemonic specified");if(!r&&!c&&(0,i.isReady)())return(0,i.bip39ToMiniSecret)(e,t);const d=(0,s.mnemonicToEntropy)(e,r),u=(0,n.stringToU8a)(`mnemonic${t}`);return(0,o.pbkdf2Encode)(d,u).password.slice(0,32)}},7352:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicValidate=void 0;const n=r(8245),i=r(8928),o=r(4859);t.mnemonicValidate=function(e,t,r){return!n.hasBigInt||!t&&!r&&(0,i.isReady)()?(0,i.bip39Validate)(e):(0,o.validateMnemonic)(e,t)}},7623:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|")},4219:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.naclDecrypt=void 0;const n=r(4073);t.naclDecrypt=function(e,t,r){return(0,n.naclSecretboxOpen)(e,t,r)}},2468:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.naclEncrypt=void 0;const n=r(7729),i=r(4073);t.naclEncrypt=function(e,t,r=(0,n.randomAsU8a)(24)){return{encrypted:(0,i.naclSecretbox)(e,r,t),nonce:r}}},3951:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.naclEncrypt=t.naclDecrypt=void 0;var n=r(4219);Object.defineProperty(t,"naclDecrypt",{enumerable:!0,get:function(){return n.naclDecrypt}});var i=r(2468);Object.defineProperty(t,"naclEncrypt",{enumerable:!0,get:function(){return i.naclEncrypt}})},4073:(e,t)=>{"use strict";function r(e,t){return e<<t|e>>>32-t}function n(e,t){let r=255&e[t+3];return r=r<<8|255&e[t+2],r=r<<8|255&e[t+1],r<<8|255&e[t+0]}function i(e,t,r){for(let n=0;n<4;n++)e[t+n]=255&r,r>>>=8}function o(e,t,o,s,a){const c=new Uint32Array(16),d=new Uint32Array(16),u=new Uint32Array(16),l=new Uint32Array(4);let f,h,p;for(f=0;f<4;f++)d[5*f]=n(s,4*f),d[1+f]=n(o,4*f),d[6+f]=n(t,4*f),d[11+f]=n(o,16+4*f);for(f=0;f<16;f++)u[f]=d[f];for(f=0;f<20;f++){for(h=0;h<4;h++){for(p=0;p<4;p++)l[p]=d[(5*h+4*p)%16];for(l[1]^=r(l[0]+l[3]|0,7),l[2]^=r(l[1]+l[0]|0,9),l[3]^=r(l[2]+l[1]|0,13),l[0]^=r(l[3]+l[2]|0,18),p=0;p<4;p++)c[4*h+(h+p)%4]=l[p]}for(p=0;p<16;p++)d[p]=c[p]}if(a){for(f=0;f<16;f++)d[f]=d[f]+u[f]|0;for(f=0;f<4;f++)d[5*f]=d[5*f]-n(s,4*f)|0,d[6+f]=d[6+f]-n(t,4*f)|0;for(f=0;f<4;f++)i(e,4*f,d[5*f]),i(e,16+4*f,d[6+f])}else for(f=0;f<16;f++)i(e,4*f,d[f]+u[f]|0)}Object.defineProperty(t,"__esModule",{value:!0}),t.naclSecretboxOpen=t.naclSecretbox=void 0;const s=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function a(e,t,r,n,i,a,c){const d=new Uint8Array(32);return o(d,a,c,s,!0),function(e,t,r,n,i,a,c){const d=new Uint8Array(16),u=new Uint8Array(64);let l,f;if(!i)return 0;for(f=0;f<16;f++)d[f]=0;for(f=0;f<8;f++)d[f]=a[f];for(;i>=64;){for(o(u,d,c,s,!1),f=0;f<64;f++)e[t+f]=(r?r[n+f]:0)^u[f];for(l=1,f=8;f<16;f++)l=l+(255&d[f])|0,d[f]=255&l,l>>>=8;i-=64,t+=64,r&&(n+=64)}if(i>0)for(o(u,d,c,s,!1),f=0;f<i;f++)e[t+f]=(r?r[n+f]:0)^u[f];return 0}(e,t,r,n,i,a.subarray(16),d)}function c(e,t){let r=0;for(let n=0;n<17;n++)r=r+(e[n]+t[n]|0)|0,e[n]=255&r,r>>>=8}const d=new Uint32Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252]);function u(e,t,r,n,i,o){let s,a,u;const l=new Uint32Array(17),f=new Uint32Array(17),h=new Uint32Array(17),p=new Uint32Array(17),b=new Uint32Array(17);for(a=0;a<17;a++)f[a]=h[a]=0;for(a=0;a<16;a++)f[a]=o[a];for(f[3]&=15,f[4]&=252,f[7]&=15,f[8]&=252,f[11]&=15,f[12]&=252,f[15]&=15;i>0;){for(a=0;a<17;a++)p[a]=0;for(a=0;a<16&&a<i;++a)p[a]=r[n+a];for(p[a]=1,n+=a,i-=a,c(h,p),s=0;s<17;s++)for(l[s]=0,a=0;a<17;a++)l[s]=0|l[s]+h[a]*(a<=s?f[s-a]:320*f[s+17-a]|0);for(s=0;s<17;s++)h[s]=l[s];for(u=0,a=0;a<16;a++)u=u+h[a]|0,h[a]=255&u,u>>>=8;for(u=u+h[16]|0,h[16]=3&u,u=5*(u>>>2)|0,a=0;a<16;a++)u=u+h[a]|0,h[a]=255&u,u>>>=8;u=u+h[16]|0,h[16]=u}for(a=0;a<17;a++)b[a]=h[a];c(h,d);const m=0|-(h[16]>>>7);for(a=0;a<17;a++)h[a]^=m&(b[a]^h[a]);for(a=0;a<16;a++)p[a]=o[a+16];for(p[16]=0,c(h,p),a=0;a<16;a++)e[t+a]=h[a];return 0}function l(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function f(...e){for(let t=0;t<e.length;t++)if(!(e[t]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}t.naclSecretbox=function(e,t,r){f(e,t,r),l(r,t);const n=new Uint8Array(32+e.length),i=new Uint8Array(n.length);for(let t=0;t<e.length;t++)n[t+32]=e[t];return function(e,t,r,n,i){if(r<32)return-1;a(e,0,t,0,r,n,i),u(e,16,e,32,r-32,e);for(let t=0;t<16;t++)e[t]=0}(i,n,n.length,t,r),i.subarray(16)},t.naclSecretboxOpen=function(e,t,r){f(e,t,r),l(r,t);const n=new Uint8Array(16+e.length),i=new Uint8Array(n.length);for(let t=0;t<e.length;t++)n[t+16]=e[t];return n.length<32||0!==function(e,t,r,n,i){const o=new Uint8Array(32);if(r<32)return-1;if(a(o,0,null,0,32,n,i),0!==function(e,t,r,n,i,o){const s=new Uint8Array(16);return u(s,0,r,32,i,o),function(e,t,r,n,i){let o=0;for(let t=0;t<16;t++)o|=e[16+t]^r[0+t];return(1&o-1>>>8)-1}(e,0,s)}(t,0,t,0,r-32,o))return-1;a(e,0,t,0,r,n,i);for(let t=0;t<32;t++)e[t]=0;return 0}(i,n,n.length,t,r)?null:i.subarray(32)}},4392:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectableNetworks=t.availableNetworks=t.allNetworks=void 0;var n=r(2519);Object.defineProperty(t,"allNetworks",{enumerable:!0,get:function(){return n.allNetworks}}),Object.defineProperty(t,"availableNetworks",{enumerable:!0,get:function(){return n.availableNetworks}}),Object.defineProperty(t,"selectableNetworks",{enumerable:!0,get:function(){return n.selectableNetworks}})},8689:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/util-crypto",path:"/",type:"cjs",version:"12.1.2"}},930:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Encode=void 0;const n=r(9023),i=r(6262),o=r(8245),s=r(8928),a=r(7729);t.pbkdf2Encode=function(e,t=(0,a.randomAsU8a)(),r=2048,c){const d=(0,o.u8aToU8a)(e),u=(0,o.u8aToU8a)(t);return{password:!o.hasBigInt||!c&&(0,s.isReady)()?(0,s.pbkdf2)(d,u,r):(0,n.pbkdf2)(i.sha512,d,u,{c:r,dkLen:64}),rounds:r,salt:t}}},4007:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Encode=void 0;var n=r(930);Object.defineProperty(t,"pbkdf2Encode",{enumerable:!0,get:function(){return n.pbkdf2Encode}})},3751:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsNumber=void 0;const n=r(8245),i=r(7729),o=new n.BN(9007199254740991);t.randomAsNumber=function(){return(0,n.hexToBn)((0,i.randomAsHex)(8)).and(o).toNumber()}},7729:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsHex=t.randomAsU8a=void 0;const n=r(2714),i=r(3115);function o(e=32){return(0,n.getRandomValues)(new Uint8Array(e))}t.randomAsU8a=o,t.randomAsHex=(0,i.createAsHex)(o)},3577:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsU8a=t.randomAsHex=t.randomAsNumber=void 0;var n=r(3751);Object.defineProperty(t,"randomAsNumber",{enumerable:!0,get:function(){return n.randomAsNumber}});var i=r(7729);Object.defineProperty(t,"randomAsHex",{enumerable:!0,get:function(){return i.randomAsHex}}),Object.defineProperty(t,"randomAsU8a",{enumerable:!0,get:function(){return i.randomAsU8a}})},817:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_PARAMS=void 0,t.DEFAULT_PARAMS={N:32768,p:1,r:8}},8032:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptEncode=void 0;const n=r(9514),i=r(8245),o=r(8928),s=r(7729),a=r(817);t.scryptEncode=function(e,t=(0,s.randomAsU8a)(),r=a.DEFAULT_PARAMS,c){const d=(0,i.u8aToU8a)(e);return{params:r,password:!i.hasBigInt||!c&&(0,o.isReady)()?(0,o.scrypt)(d,t,Math.log2(r.N),r.r,r.p):(0,n.scrypt)(d,t,(0,i.objectSpread)({dkLen:64},r)),salt:t}}},5295:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptFromU8a=void 0;const n=r(8245),i=r(7874),o=r(817);t.scryptFromU8a=function(e){const t=e.subarray(0,32),r=(0,n.u8aToBn)(e.subarray(32,36),i.BN_LE_OPTS).toNumber(),s=(0,n.u8aToBn)(e.subarray(36,40),i.BN_LE_OPTS).toNumber(),a=(0,n.u8aToBn)(e.subarray(40,44),i.BN_LE_OPTS).toNumber();if(r!==o.DEFAULT_PARAMS.N||s!==o.DEFAULT_PARAMS.p||a!==o.DEFAULT_PARAMS.r)throw new Error("Invalid injected scrypt params found");return{params:{N:r,p:s,r:a},salt:t}}},4840:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptToU8a=t.scryptFromU8a=t.scryptEncode=void 0;var n=r(8032);Object.defineProperty(t,"scryptEncode",{enumerable:!0,get:function(){return n.scryptEncode}});var i=r(5295);Object.defineProperty(t,"scryptFromU8a",{enumerable:!0,get:function(){return i.scryptFromU8a}});var o=r(5024);Object.defineProperty(t,"scryptToU8a",{enumerable:!0,get:function(){return o.scryptToU8a}})},5024:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptToU8a=void 0;const n=r(8245),i=r(7874);t.scryptToU8a=function(e,{N:t,p:r,r:o}){return(0,n.u8aConcat)(e,(0,n.bnToU8a)(t,i.BN_LE_32_OPTS),(0,n.bnToU8a)(r,i.BN_LE_32_OPTS),(0,n.bnToU8a)(o,i.BN_LE_32_OPTS))}},783:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Compress=void 0;const n=r(3497),i=r(8245),o=r(8928);t.secp256k1Compress=function(e,t){if(![33,65].includes(e.length))throw new Error(`Invalid publicKey provided, received ${e.length} bytes input`);return 33===e.length?e:!i.hasBigInt||!t&&(0,o.isReady)()?(0,o.secp256k1Compress)(e):n.secp256k1.ProjectivePoint.fromHex(e).toRawBytes(!0)}},7912:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1DeriveHard=void 0;const n=r(8245),i=r(2256),o=(0,n.compactAddLength)((0,n.stringToU8a)("Secp256k1HDKD"));t.secp256k1DeriveHard=function(e,t){if(!(0,n.isU8a)(t)||32!==t.length)throw new Error("Invalid chainCode passed to derive");return(0,i.blake2AsU8a)((0,n.u8aConcat)(o,e,t),256)}},5097:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Expand=void 0;const n=r(3497),i=r(8245),o=r(8928),s=r(7874);t.secp256k1Expand=function(e,t){if(![33,65].includes(e.length))throw new Error(`Invalid publicKey provided, received ${e.length} bytes input`);if(65===e.length)return e.subarray(1);if(!i.hasBigInt||!t&&(0,o.isReady)())return(0,o.secp256k1Expand)(e).subarray(1);const{px:r,py:a}=n.secp256k1.ProjectivePoint.fromHex(e);return(0,i.u8aConcat)((0,i.bnToU8a)(r,s.BN_BE_256_OPTS),(0,i.bnToU8a)(a,s.BN_BE_256_OPTS))}},3080:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasher=void 0;const n=r(7295),i=r(1679);t.hasher=function(e,t,r){return"keccak"===e?(0,i.keccakAsU8a)(t,void 0,r):(0,n.blake2AsU8a)(t,void 0,void 0,r)}},4904:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Verify=t.secp256k1PrivateKeyTweakAdd=t.secp256k1Sign=t.secp256k1Recover=t.secp256k1PairFromSeed=t.secp256k1Expand=t.secp256k1Compress=void 0;var n=r(783);Object.defineProperty(t,"secp256k1Compress",{enumerable:!0,get:function(){return n.secp256k1Compress}});var i=r(5097);Object.defineProperty(t,"secp256k1Expand",{enumerable:!0,get:function(){return i.secp256k1Expand}});var o=r(6300);Object.defineProperty(t,"secp256k1PairFromSeed",{enumerable:!0,get:function(){return o.secp256k1PairFromSeed}});var s=r(809);Object.defineProperty(t,"secp256k1Recover",{enumerable:!0,get:function(){return s.secp256k1Recover}});var a=r(7381);Object.defineProperty(t,"secp256k1Sign",{enumerable:!0,get:function(){return a.secp256k1Sign}});var c=r(6423);Object.defineProperty(t,"secp256k1PrivateKeyTweakAdd",{enumerable:!0,get:function(){return c.secp256k1PrivateKeyTweakAdd}});var d=r(1863);Object.defineProperty(t,"secp256k1Verify",{enumerable:!0,get:function(){return d.secp256k1Verify}})},6300:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1PairFromSeed=void 0;const n=r(3497),i=r(8245),o=r(8928);t.secp256k1PairFromSeed=function(e,t){if(32!==e.length)throw new Error("Expected valid 32-byte private key as a seed");if(!i.hasBigInt||!t&&(0,o.isReady)()){const t=(0,o.secp256k1FromSeed)(e),r=t.slice(32);if((0,i.u8aEmpty)(r))throw new Error("Invalid publicKey generated from WASM interface");return{publicKey:r,secretKey:t.slice(0,32)}}return{publicKey:n.secp256k1.getPublicKey(e,!0),secretKey:e}}},809:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Recover=void 0;const n=r(3497),i=r(8245),o=r(8928),s=r(783),a=r(5097);t.secp256k1Recover=function(e,t,r,c="blake2",d){const u=(0,i.u8aToU8a)(t).subarray(0,64),l=(0,i.u8aToU8a)(e),f=!i.hasBigInt||!d&&(0,o.isReady)()?(0,o.secp256k1Recover)(l,u,r):n.secp256k1.Signature.fromCompact(u).addRecoveryBit(r).recoverPublicKey(l).toRawBytes();if(!f)throw new Error("Unable to recover publicKey from signature");return"keccak"===c?(0,a.secp256k1Expand)(f,d):(0,s.secp256k1Compress)(f,d)}},7381:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Sign=void 0;const n=r(3497),i=r(8245),o=r(8928),s=r(7874),a=r(3080);t.secp256k1Sign=function(e,{secretKey:t},r="blake2",c){if(32!==t?.length)throw new Error("Expected valid secp256k1 secretKey, 32-bytes");const d=(0,a.hasher)(r,e,c);if(!i.hasBigInt||!c&&(0,o.isReady)())return(0,o.secp256k1Sign)(d,t);const u=n.secp256k1.sign(d,t,{lowS:!0});return(0,i.u8aConcat)((0,i.bnToU8a)(u.r,s.BN_BE_256_OPTS),(0,i.bnToU8a)(u.s,s.BN_BE_256_OPTS),new Uint8Array([u.recovery||0]))}},6423:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1PrivateKeyTweakAdd=void 0;const n=r(8245),i=r(3059),o=r(7874),s="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),a=(0,i.BigInt)(`0x${s}`),c=new n.BN(s,"hex");t.secp256k1PrivateKeyTweakAdd=function(e,t,r){if(!(0,n.isU8a)(e)||32!==e.length)throw new Error("Expected seckey to be an Uint8Array with length 32");if(!(0,n.isU8a)(t)||32!==t.length)throw new Error("Expected tweak to be an Uint8Array with length 32");return!n.hasBigInt||r?function(e,t){const r=new n.BN(t);if(r.cmp(c)>=0)throw new Error("Tweak parameter is out of range");if(r.iadd(new n.BN(e)),r.cmp(c)>=0&&r.isub(c),r.isZero())throw new Error("Invalid resulting private key");return(0,n.bnToU8a)(r,o.BN_BE_256_OPTS)}(e,t):function(e,t){let r=(0,n.u8aToBigInt)(t,o.BN_BE_OPTS);if(r>=a)throw new Error("Tweak parameter is out of range");if(r+=(0,n.u8aToBigInt)(e,o.BN_BE_OPTS),r>=a&&(r-=a),r===n._0n)throw new Error("Invalid resulting private key");return(0,n.nToU8a)(r,o.BN_BE_256_OPTS)}(e,t)}},1863:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Verify=void 0;const n=r(8245),i=r(3080),o=r(809);t.secp256k1Verify=function(e,t,r,s="blake2",a){const c=(0,n.u8aToU8a)(t);if(65!==c.length)throw new Error(`Expected signature with 65 bytes, ${c.length} found instead`);const d=(0,o.secp256k1Recover)((0,i.hasher)(s,e),c,c[64],s,a),u=(0,i.hasher)(s,d,a),l=(0,n.u8aToU8a)(r);return(0,n.u8aEq)(d,l)||("keccak"===s?(0,n.u8aEq)(u.slice(-20),l.slice(-20)):(0,n.u8aEq)(u,l))}},2254:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha512AsU8a=t.sha256AsU8a=t.shaAsU8a=void 0;const n=r(3061),i=r(6262),o=r(8928),s=r(3115);t.shaAsU8a=(0,s.createDualHasher)({256:o.sha256,512:o.sha512},{256:n.sha256,512:i.sha512}),t.sha256AsU8a=(0,s.createBitHasher)(256,t.shaAsU8a),t.sha512AsU8a=(0,s.createBitHasher)(512,t.shaAsU8a)},6843:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.shaAsU8a=t.sha512AsU8a=t.sha256AsU8a=void 0;var n=r(2254);Object.defineProperty(t,"sha256AsU8a",{enumerable:!0,get:function(){return n.sha256AsU8a}}),Object.defineProperty(t,"sha512AsU8a",{enumerable:!0,get:function(){return n.sha512AsU8a}}),Object.defineProperty(t,"shaAsU8a",{enumerable:!0,get:function(){return n.shaAsU8a}})},7819:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.signatureVerify=void 0;var n=r(5402);Object.defineProperty(t,"signatureVerify",{enumerable:!0,get:function(){return n.signatureVerify}})},5402:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.signatureVerify=void 0;const n=r(8245),i=r(4888),o=r(2209),s=r(1863),a=r(4262),c=e=>(t,r,n)=>(0,s.secp256k1Verify)(t,r,n,e),d=[["ecdsa",c("blake2")],["ethereum",c("keccak")]],u=[["ed25519",o.ed25519Verify],["sr25519",a.sr25519Verify],...d],l=["ed25519","sr25519","ecdsa"];function f(e,{message:t,publicKey:r,signature:n},i=u){return e.isValid=i.some((([i,o])=>{try{if(o(t,n,r))return e.crypto=i,!0}catch{}return!1})),e}function h(e,{message:t,publicKey:r,signature:n}){if(![0,1,2].includes(n[0]))throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${n[0]}`);const i=l[n[0]]||"none";e.crypto=i;try{e.isValid={ecdsa:()=>f(e,{message:t,publicKey:r,signature:n.subarray(1)},d).isValid,ed25519:()=>(0,o.ed25519Verify)(t,n.subarray(1),r),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>(0,a.sr25519Verify)(t,n.subarray(1),r)}[i]()}catch{}return e}t.signatureVerify=function(e,t,r){const o=(0,n.u8aToU8a)(t);if(![64,65,66].includes(o.length))throw new Error(`Invalid signature length, expected [64..66] bytes, found ${o.length}`);const s=(0,i.decodeAddress)(r),a={message:(0,n.u8aToU8a)(e),publicKey:s,signature:o},c={crypto:"none",isValid:!1,isWrapped:(0,n.u8aIsWrapped)(a.message,!0),publicKey:s},d=(0,n.u8aIsWrapped)(a.message,!1),u=function(e){return[0,1,2].includes(e[0])&&[65,66].includes(e.length)?h:f}(o);return u(c,a),"none"!==c.crypto||c.isWrapped&&!d?c:(a.message=d?(0,n.u8aUnwrapBytes)(a.message):(0,n.u8aWrapBytes)(a.message),u(c,a))}},280:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Agreement=void 0;const n=r(8245),i=r(8928);t.sr25519Agreement=function(e,t){const r=(0,n.u8aToU8a)(e),o=(0,n.u8aToU8a)(t);if(32!==o.length)throw new Error(`Invalid publicKey, received ${o.length} bytes, expected 32`);if(64!==r.length)throw new Error(`Invalid secretKey, received ${r.length} bytes, expected 64`);return(0,i.sr25519Agree)(o,r)}},3111:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDeriveFn=void 0;const n=r(8245),i=r(2865),o=r(6324);t.createDeriveFn=function(e){return(t,r)=>{if(!(0,n.isU8a)(r)||32!==r.length)throw new Error("Invalid chainCode passed to derive");return(0,i.sr25519PairFromU8a)(e((0,o.sr25519KeypairToU8a)(t),r))}}},4994:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DeriveHard=void 0;const n=r(8928),i=r(3111);t.sr25519DeriveHard=(0,i.createDeriveFn)(n.sr25519DeriveKeypairHard)},1493:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DerivePublic=void 0;const n=r(8245),i=r(8928);t.sr25519DerivePublic=function(e,t){const r=(0,n.u8aToU8a)(e);if(!(0,n.isU8a)(t)||32!==t.length)throw new Error("Invalid chainCode passed to derive");if(32!==r.length)throw new Error(`Invalid publicKey, received ${r.length} bytes, expected 32`);return(0,i.sr25519DerivePublicSoft)(r,t)}},8160:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DeriveSoft=void 0;const n=r(8928),i=r(3111);t.sr25519DeriveSoft=(0,i.createDeriveFn)(n.sr25519DeriveKeypairSoft)},9070:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfVerify=t.sr25519VrfSign=t.sr25519Verify=t.sr25519Sign=t.sr25519PairFromSeed=t.sr25519DeriveSoft=t.sr25519DerivePublic=t.sr25519DeriveHard=t.sr25519Agreement=void 0;var n=r(280);Object.defineProperty(t,"sr25519Agreement",{enumerable:!0,get:function(){return n.sr25519Agreement}});var i=r(4994);Object.defineProperty(t,"sr25519DeriveHard",{enumerable:!0,get:function(){return i.sr25519DeriveHard}});var o=r(1493);Object.defineProperty(t,"sr25519DerivePublic",{enumerable:!0,get:function(){return o.sr25519DerivePublic}});var s=r(8160);Object.defineProperty(t,"sr25519DeriveSoft",{enumerable:!0,get:function(){return s.sr25519DeriveSoft}});var a=r(9396);Object.defineProperty(t,"sr25519PairFromSeed",{enumerable:!0,get:function(){return a.sr25519PairFromSeed}});var c=r(3971);Object.defineProperty(t,"sr25519Sign",{enumerable:!0,get:function(){return c.sr25519Sign}});var d=r(4262);Object.defineProperty(t,"sr25519Verify",{enumerable:!0,get:function(){return d.sr25519Verify}});var u=r(3831);Object.defineProperty(t,"sr25519VrfSign",{enumerable:!0,get:function(){return u.sr25519VrfSign}});var l=r(2347);Object.defineProperty(t,"sr25519VrfVerify",{enumerable:!0,get:function(){return l.sr25519VrfVerify}})},9396:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519PairFromSeed=void 0;const n=r(8245),i=r(8928),o=r(2865);t.sr25519PairFromSeed=function(e){const t=(0,n.u8aToU8a)(e);if(32!==t.length)throw new Error(`Expected a seed matching 32 bytes, found ${t.length}`);return(0,o.sr25519PairFromU8a)((0,i.sr25519KeypairFromSeed)(t))}},2865:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519PairFromU8a=void 0;const n=r(8245);t.sr25519PairFromU8a=function(e){const t=(0,n.u8aToU8a)(e);if(96!==t.length)throw new Error(`Expected keypair with 96 bytes, found ${t.length}`);return{publicKey:t.slice(64,96),secretKey:t.slice(0,64)}}},6324:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519KeypairToU8a=void 0;const n=r(8245);t.sr25519KeypairToU8a=function({publicKey:e,secretKey:t}){return(0,n.u8aConcat)(t,e).slice()}},3971:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Sign=void 0;const n=r(8245),i=r(8928);t.sr25519Sign=function(e,{publicKey:t,secretKey:r}){if(32!==t?.length)throw new Error("Expected a valid publicKey, 32-bytes");if(64!==r?.length)throw new Error("Expected a valid secretKey, 64-bytes");return(0,i.sr25519Sign)(t,r,(0,n.u8aToU8a)(e))}},4262:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Verify=void 0;const n=r(8245),i=r(8928);t.sr25519Verify=function(e,t,r){const o=(0,n.u8aToU8a)(r),s=(0,n.u8aToU8a)(t);if(32!==o.length)throw new Error(`Invalid publicKey, received ${o.length} bytes, expected 32`);if(64!==s.length)throw new Error(`Invalid signature, received ${s.length} bytes, expected 64`);return(0,i.sr25519Verify)(s,(0,n.u8aToU8a)(e),o)}},3831:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfSign=void 0;const n=r(8245),i=r(8928),o=new Uint8Array;t.sr25519VrfSign=function(e,{secretKey:t},r=o,s=o){if(64!==t?.length)throw new Error("Invalid secretKey, expected 64-bytes");return(0,i.vrfSign)(t,(0,n.u8aToU8a)(r),(0,n.u8aToU8a)(e),(0,n.u8aToU8a)(s))}},2347:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfVerify=void 0;const n=r(8245),i=r(8928),o=new Uint8Array;t.sr25519VrfVerify=function(e,t,r,s=o,a=o){const c=(0,n.u8aToU8a)(r),d=(0,n.u8aToU8a)(t);if(32!==c.length)throw new Error("Invalid publicKey, expected 32-bytes");if(96!==d.length)throw new Error("Invalid vrfSign output, expected 96 bytes");return(0,i.vrfVerify)(c,(0,n.u8aToU8a)(s),(0,n.u8aToU8a)(e),(0,n.u8aToU8a)(a),d)}},774:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhashAsHex=t.xxhashAsU8a=void 0;const n=r(8245),i=r(8928),o=r(3115),s=r(9996);function a(e,t=64,r){const o=Math.ceil(t/64),a=(0,n.u8aToU8a)(e);if(!n.hasBigInt||!r&&(0,i.isReady)())return(0,i.twox)(a,o);const c=new Uint8Array(8*o);for(let e=0;e<o;e++)c.set((0,s.xxhash64)(a,e).reverse(),8*e);return c}t.xxhashAsU8a=a,t.xxhashAsHex=(0,o.createAsHex)(a)},5486:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhashAsU8a=t.xxhashAsHex=void 0;var n=r(774);Object.defineProperty(t,"xxhashAsHex",{enumerable:!0,get:function(){return n.xxhashAsHex}}),Object.defineProperty(t,"xxhashAsU8a",{enumerable:!0,get:function(){return n.xxhashAsU8a}})},9996:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhash64=void 0;const n=r(8245),i=r(3059),o=(0,i.BigInt)("11400714785074694791"),s=(0,i.BigInt)("14029467366897019727"),a=(0,i.BigInt)("1609587929392839161"),c=(0,i.BigInt)("9650029242287828579"),d=(0,i.BigInt)("2870177450012600261"),u=(0,i.BigInt)("0xffffffffffffffff"),l=(0,i.BigInt)(7),f=(0,i.BigInt)(11),h=(0,i.BigInt)(12),p=(0,i.BigInt)(16),b=(0,i.BigInt)(18),m=(0,i.BigInt)(23),y=(0,i.BigInt)(27),v=(0,i.BigInt)(29),w=(0,i.BigInt)(31),g=(0,i.BigInt)(32),x=(0,i.BigInt)(33),P=(0,i.BigInt)(64),O=(0,i.BigInt)(256);function k(e,t){const r=e&u;return(r<<t|r>>P-t)&u}function j(e,t,r){const o=new Array(r);let s=0;for(let n=0;n<r;n++,s+=2)o[n]=(0,i.BigInt)(e[t+s]|e[t+1+s]<<8);let a=n._0n;for(let e=r-1;e>=0;e--)a=(a<<p)+o[e];return a}t.xxhash64=function(e,t){const{seed:r,u8a:p,u8asize:P,v1:M,v2:N,v3:T,v4:E}=function(e,t){const r={seed:e,u8a:new Uint8Array(32),u8asize:0,v1:e+o+s,v2:e+s,v3:e,v4:e-o};if(t.length<32)return r.u8a.set(t),r.u8asize=t.length,r;const n=t.length-32;let i=0;if(n>=0){const e=e=>o*k(e+s*j(t,i,4),w);do{r.v1=e(r.v1),i+=8,r.v2=e(r.v2),i+=8,r.v3=e(r.v3),i+=8,r.v4=e(r.v4),i+=8}while(i<=n)}return i<t.length&&(r.u8a.set(t.subarray(i,t.length)),r.u8asize=t.length-i),r}((0,i.BigInt)(t),e);let B=0,z=u&(0,i.BigInt)(e.length)+(e.length>=32?((((k(M,n._1n)+k(N,l)+k(T,h)+k(E,b)^o*k(M*s,w))*o+c^o*k(N*s,w))*o+c^o*k(T*s,w))*o+c^o*k(E*s,w))*o+c:r+d);for(;B<=P-8;)z=u&c+o*k(z^o*k(s*j(p,B,4),w),y),B+=8;for(B+4<=P&&(z=u&a+s*k(z^o*j(p,B,2),m),B+=4);B<P;)z=u&o*k(z^d*(0,i.BigInt)(p[B++]),f);z=u&s*(z^z>>x),z=u&a*(z^z>>v),z=u&(z^z>>g);const A=new Uint8Array(8);for(let e=7;e>=0;e--)A[e]=Number(z%O),z/=O;return A}},2626:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayChunk=void 0,t.arrayChunk=function(e,t){const r=Math.ceil(e.length/t);if(1===r)return[e];const n=Array(r);for(let i=0;i<r;i++){const r=i*t;n[i]=e.slice(r,r+t)}return n}},3546:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayFilter=void 0,t.arrayFilter=function(e,t=!0){return e.filter((e=>void 0!==e&&(t||null!==e)))}},1800:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayFlatten=void 0,t.arrayFlatten=function(e){if(0===e.length)return[];if(1===e.length)return e[0];let t=0;for(let r=0;r<e.length;r++)t+=e[r].length;const r=new Array(t);let n=-1;for(let t=0;t<e.length;t++){const i=e[t];for(let e=0;e<i.length;e++)r[++n]=i[e]}return r}},3488:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayZip=t.arrayUnzip=t.arrayShuffle=t.arrayRange=t.arrayFlatten=t.arrayFilter=t.arrayChunk=void 0;var n=r(2626);Object.defineProperty(t,"arrayChunk",{enumerable:!0,get:function(){return n.arrayChunk}});var i=r(3546);Object.defineProperty(t,"arrayFilter",{enumerable:!0,get:function(){return i.arrayFilter}});var o=r(1800);Object.defineProperty(t,"arrayFlatten",{enumerable:!0,get:function(){return o.arrayFlatten}});var s=r(3476);Object.defineProperty(t,"arrayRange",{enumerable:!0,get:function(){return s.arrayRange}});var a=r(5218);Object.defineProperty(t,"arrayShuffle",{enumerable:!0,get:function(){return a.arrayShuffle}});var c=r(9303);Object.defineProperty(t,"arrayUnzip",{enumerable:!0,get:function(){return c.arrayUnzip}});var d=r(3091);Object.defineProperty(t,"arrayZip",{enumerable:!0,get:function(){return d.arrayZip}})},3476:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayRange=void 0,t.arrayRange=function(e,t=0){if(e<=0)throw new Error("Expected non-zero, positive number as a range size");const r=new Array(e);for(let n=0;n<e;n++)r[n]=n+t;return r}},5218:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayShuffle=void 0,t.arrayShuffle=function(e){const t=e.slice();let r=t.length;if(1===r)return t;for(;0!==r;){const e=~~(Math.random()*r);r--,[t[r],t[e]]=[t[e],t[r]]}return t}},9303:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayUnzip=void 0,t.arrayUnzip=function(e){const t=e.length,r=new Array(t),n=new Array(t);for(let i=0;i<t;i++)[r[i],n[i]]=e[i];return[r,n]}},3091:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayZip=void 0,t.arrayZip=function(e,t){const r=e.length,n=new Array(r);for(let i=0;i<r;i++)n[i]=[e[i],t[i]];return n}},2944:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assertUnreachable=t.assertReturn=t.assert=void 0;const n=r(2404);function i(e,t){if(!e)throw new Error((0,n.isFunction)(t)?t():t)}t.assert=i,t.assertReturn=function(e,t){return i(null!=e,t),e},t.assertUnreachable=function(e){throw new Error(`This codepath should be unreachable. Unhandled input: ${e}`)}},1405:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t._sqrt2pow53n=t._2pow53n=t._1Qn=t._1Bn=t._1Mn=t._1000n=t._100n=t._10n=t._9n=t._8n=t._7n=t._6n=t._5n=t._4n=t._3n=t._2n=t._1n=t._0n=void 0;const n=r(3059);t._0n=(0,n.BigInt)(0),t._1n=(0,n.BigInt)(1),t._2n=(0,n.BigInt)(2),t._3n=(0,n.BigInt)(3),t._4n=(0,n.BigInt)(4),t._5n=(0,n.BigInt)(5),t._6n=(0,n.BigInt)(6),t._7n=(0,n.BigInt)(7),t._8n=(0,n.BigInt)(8),t._9n=(0,n.BigInt)(9),t._10n=(0,n.BigInt)(10),t._100n=(0,n.BigInt)(100),t._1000n=(0,n.BigInt)(1e3),t._1Mn=(0,n.BigInt)(1e6),t._1Bn=(0,n.BigInt)(1e9),t._1Qn=t._1Bn*t._1Bn,t._2pow53n=(0,n.BigInt)(Number.MAX_SAFE_INTEGER),t._sqrt2pow53n=(0,n.BigInt)(94906265)},9491:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createCmp=void 0,t.createCmp=function(e){return(...t)=>{if(0===t.length)throw new Error("Must provide one or more arguments");let r=t[0];for(let n=1;n<t.length;n++)e(t[n],r)&&(r=t[n]);return r}}},9822:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToU8a=t.nToHex=t.nToBigInt=t.nSqrt=t.nMin=t.nMax=void 0;const n=r(655);var i=r(8716);Object.defineProperty(t,"nMax",{enumerable:!0,get:function(){return i.nMax}}),Object.defineProperty(t,"nMin",{enumerable:!0,get:function(){return i.nMin}});var o=r(8766);Object.defineProperty(t,"nSqrt",{enumerable:!0,get:function(){return o.nSqrt}});var s=r(5023);Object.defineProperty(t,"nToBigInt",{enumerable:!0,get:function(){return s.nToBigInt}});var a=r(9074);Object.defineProperty(t,"nToHex",{enumerable:!0,get:function(){return a.nToHex}});var c=r(7846);Object.defineProperty(t,"nToU8a",{enumerable:!0,get:function(){return c.nToU8a}}),n.__exportStar(r(1405),t)},8716:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nMin=t.nMax=void 0;const n=r(9491);t.nMax=(0,n.createCmp)(((e,t)=>e>t)),t.nMin=(0,n.createCmp)(((e,t)=>e<t))},8766:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nSqrt=void 0;const n=r(3059),i=r(1405),o=r(5023);t.nSqrt=function(e){const t=(0,o.nToBigInt)(e);if(t<i._0n)throw new Error("square root of negative numbers is not supported");if(t<=i._2pow53n)return(0,n.BigInt)(~~Math.sqrt(Number(t)));let r=i._sqrt2pow53n;for(;;){const e=t/r+r>>i._1n;if(r===e||r===e-i._1n)return r;r=e}}},5023:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToBigInt=void 0;const n=r(3059),i=r(8325),o=r(5767),s=r(1580),a=r(4455),c=r(789);t.nToBigInt=function(e){return"bigint"==typeof e?e:e?(0,s.isHex)(e)?(0,i.hexToBigInt)(e.toString()):(0,o.isBn)(e)?(0,n.BigInt)(e.toString()):(0,a.isToBigInt)(e)?e.toBigInt():(0,c.isToBn)(e)?(0,n.BigInt)(e.toBn().toString()):(0,n.BigInt)(e):(0,n.BigInt)(0)}},9074:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToHex=void 0;const n=r(7736),i=r(7846);t.nToHex=function(e,{bitLength:t=-1,isLe:r=!1,isNegative:o=!1}={}){return(0,n.u8aToHex)((0,i.nToU8a)(e||0,{bitLength:t,isLe:r,isNegative:o}))}},7846:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToU8a=void 0;const n=r(3059),i=r(1405),o=r(5023),s=(0,n.BigInt)(256),a=(0,n.BigInt)(255);t.nToU8a=function(e,{bitLength:t=-1,isLe:r=!0,isNegative:n=!1}={}){const c=(0,o.nToBigInt)(e);if(c===i._0n)return-1===t?new Uint8Array(1):new Uint8Array(Math.ceil((t||0)/8));const d=function(e,t,r){const n=[];for(r&&(e=(e+i._1n)*-i._1n);e!==i._0n;){const i=e%s,o=Number(r?i^a:i);t?n.push(o):n.unshift(o),e=(e-i)/s}return Uint8Array.from(n)}(c,r,n);if(-1===t)return d;const u=Math.ceil((t||0)/8),l=new Uint8Array(u);return n&&l.fill(255),l.set(d,r?0:u-d.length),l}},3672:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN=void 0;const n=r(655).__importDefault(r(3550));t.BN=n.default},6212:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN_SQRT_MAX_INTEGER=t.BN_MAX_INTEGER=t.BN_QUINTILL=t.BN_BILLION=t.BN_MILLION=t.BN_THOUSAND=t.BN_HUNDRED=t.BN_TEN=t.BN_NINE=t.BN_EIGHT=t.BN_SEVEN=t.BN_SIX=t.BN_FIVE=t.BN_FOUR=t.BN_THREE=t.BN_TWO=t.BN_ONE=t.BN_ZERO=void 0;const n=r(3672);t.BN_ZERO=new n.BN(0),t.BN_ONE=new n.BN(1),t.BN_TWO=new n.BN(2),t.BN_THREE=new n.BN(3),t.BN_FOUR=new n.BN(4),t.BN_FIVE=new n.BN(5),t.BN_SIX=new n.BN(6),t.BN_SEVEN=new n.BN(7),t.BN_EIGHT=new n.BN(8),t.BN_NINE=new n.BN(9),t.BN_TEN=new n.BN(10),t.BN_HUNDRED=new n.BN(100),t.BN_THOUSAND=new n.BN(1e3),t.BN_MILLION=new n.BN(1e6),t.BN_BILLION=new n.BN(1e9),t.BN_QUINTILL=t.BN_BILLION.mul(t.BN_BILLION),t.BN_MAX_INTEGER=new n.BN(Number.MAX_SAFE_INTEGER),t.BN_SQRT_MAX_INTEGER=new n.BN(94906265)},35:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnFromHex=void 0;var n=r(4958);Object.defineProperty(t,"bnFromHex",{enumerable:!0,get:function(){return n.hexToBn}})},2442:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToU8a=t.bnToHex=t.bnToBn=t.bnSqrt=t.bnMin=t.bnMax=t.bnFromHex=t.BN=void 0;const n=r(655);var i=r(3672);Object.defineProperty(t,"BN",{enumerable:!0,get:function(){return i.BN}});var o=r(35);Object.defineProperty(t,"bnFromHex",{enumerable:!0,get:function(){return o.bnFromHex}});var s=r(2891);Object.defineProperty(t,"bnMax",{enumerable:!0,get:function(){return s.bnMax}}),Object.defineProperty(t,"bnMin",{enumerable:!0,get:function(){return s.bnMin}});var a=r(4620);Object.defineProperty(t,"bnSqrt",{enumerable:!0,get:function(){return a.bnSqrt}});var c=r(7569);Object.defineProperty(t,"bnToBn",{enumerable:!0,get:function(){return c.bnToBn}});var d=r(2004);Object.defineProperty(t,"bnToHex",{enumerable:!0,get:function(){return d.bnToHex}});var u=r(7899);Object.defineProperty(t,"bnToU8a",{enumerable:!0,get:function(){return u.bnToU8a}}),n.__exportStar(r(6212),t)},2891:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnMin=t.bnMax=void 0;const n=r(9491);t.bnMax=(0,n.createCmp)(((e,t)=>e.gt(t))),t.bnMin=(0,n.createCmp)(((e,t)=>e.lt(t)))},4620:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnSqrt=void 0;const n=r(3672),i=r(6212),o=r(7569);t.bnSqrt=function(e){const t=(0,o.bnToBn)(e);if(t.isNeg())throw new Error("square root of negative numbers is not supported");if(t.lte(i.BN_MAX_INTEGER))return new n.BN(~~Math.sqrt(t.toNumber()));let r=i.BN_SQRT_MAX_INTEGER.clone();for(;;){const e=t.div(r).iadd(r).ishrn(1);if(r.eq(e)||r.eq(e.sub(i.BN_ONE)))return r;r=e}}},7569:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToBn=void 0;const n=r(4958),i=r(175),o=r(1580),s=r(4455),a=r(789),c=r(3672);t.bnToBn=function(e){return e?c.BN.isBN(e)?e:(0,o.isHex)(e)?(0,n.hexToBn)(e.toString()):(0,i.isBigInt)(e)?new c.BN(e.toString()):(0,a.isToBn)(e)?e.toBn():(0,s.isToBigInt)(e)?new c.BN(e.toBigInt().toString()):new c.BN(e):new c.BN(0)}},2004:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToHex=void 0;const n=r(7736),i=r(7899);t.bnToHex=function(e,{bitLength:t=-1,isLe:r=!1,isNegative:o=!1}={}){return(0,n.u8aToHex)((0,i.bnToU8a)(e,{bitLength:t,isLe:r,isNegative:o}))}},7899:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToU8a=void 0;const n=r(7569),i={bitLength:-1,isLe:!0,isNegative:!1};t.bnToU8a=function(e,{bitLength:t=-1,isLe:r=!0,isNegative:o=!1}=i){const s=(0,n.bnToBn)(e),a=-1===t?Math.ceil(s.bitLength()/8):Math.ceil((t||0)/8);if(!e)return-1===t?new Uint8Array(1):new Uint8Array(a);const c=new Uint8Array(a),d=o?s.toTwos(8*a):s;return c.set(d.toArray(r?"le":"be",a),0),c}},3226:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bufferToU8a=void 0;var n=r(6880);Object.defineProperty(t,"bufferToU8a",{enumerable:!0,get:function(){return n.bufferToU8a}})},6880:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bufferToU8a=void 0,t.bufferToU8a=function(e){return new Uint8Array(e||[])}},643:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0;const n=r(655);var i=r(321);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}}),n.__exportStar(r(3488),t),n.__exportStar(r(2944),t),n.__exportStar(r(9822),t),n.__exportStar(r(2442),t),n.__exportStar(r(3226),t),n.__exportStar(r(6344),t),n.__exportStar(r(7246),t),n.__exportStar(r(3052),t),n.__exportStar(r(7169),t),n.__exportStar(r(6140),t),n.__exportStar(r(8614),t),n.__exportStar(r(6959),t),n.__exportStar(r(4521),t),n.__exportStar(r(9924),t),n.__exportStar(r(4456),t),n.__exportStar(r(5501),t),n.__exportStar(r(1483),t),n.__exportStar(r(8510),t),n.__exportStar(r(2200),t),n.__exportStar(r(4404),t),n.__exportStar(r(7556),t),n.__exportStar(r(5329),t),n.__exportStar(r(7736),t),n.__exportStar(r(9454),t)},4448:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactAddLength=void 0;const n=r(7736),i=r(5189);t.compactAddLength=function(e){return(0,n.u8aConcatStrict)([(0,i.compactToU8a)(e.length),e])}},7922:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactFromU8aLim=t.compactFromU8a=void 0;const n=r(2442),i=r(7736);t.compactFromU8a=function(e){const t=(0,i.u8aToU8a)(e);switch(3&t[0]){case 0:return[1,new n.BN(t[0]>>>2)];case 1:return[2,new n.BN(t[0]+(t[1]<<8)>>>2)];case 2:return[4,new n.BN(t[0]+(t[1]<<8)+(t[2]<<16)+16777216*t[3]>>>2)];default:{const e=5+(t[0]>>>2);switch(e){case 5:return[5,new n.BN(t[1]+(t[2]<<8)+(t[3]<<16)+16777216*t[4])];case 6:return[6,new n.BN(t[1]+(t[2]<<8)+(t[3]<<16)+16777216*(t[4]+(t[5]<<8)))];case 7:return[7,new n.BN(t[1]+(t[2]<<8)+(t[3]<<16)+16777216*(t[4]+(t[5]<<8)+(t[6]<<16)))];default:return[e,(0,i.u8aToBn)(t.subarray(1,e))]}}}},t.compactFromU8aLim=function(e){switch(3&e[0]){case 0:return[1,e[0]>>>2];case 1:return[2,e[0]+(e[1]<<8)>>>2];case 2:return[4,e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]>>>2];default:switch(5+(e[0]>>>2)){case 5:return[5,e[1]+(e[2]<<8)+(e[3]<<16)+16777216*e[4]];case 6:return[6,e[1]+(e[2]<<8)+(e[3]<<16)+16777216*(e[4]+(e[5]<<8))];case 7:return[7,e[1]+(e[2]<<8)+(e[3]<<16)+16777216*(e[4]+(e[5]<<8)+(e[6]<<16))];default:throw new Error("Compact input is > Number.MAX_SAFE_INTEGER")}}}},6344:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactToU8a=t.compactStripLength=t.compactFromU8aLim=t.compactFromU8a=t.compactAddLength=void 0;var n=r(4448);Object.defineProperty(t,"compactAddLength",{enumerable:!0,get:function(){return n.compactAddLength}});var i=r(7922);Object.defineProperty(t,"compactFromU8a",{enumerable:!0,get:function(){return i.compactFromU8a}}),Object.defineProperty(t,"compactFromU8aLim",{enumerable:!0,get:function(){return i.compactFromU8aLim}});var o=r(606);Object.defineProperty(t,"compactStripLength",{enumerable:!0,get:function(){return o.compactStripLength}});var s=r(5189);Object.defineProperty(t,"compactToU8a",{enumerable:!0,get:function(){return s.compactToU8a}})},606:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactStripLength=void 0;const n=r(7922);t.compactStripLength=function(e){const[t,r]=(0,n.compactFromU8a)(e),i=t+r.toNumber();return[i,e.subarray(t,i)]}},5189:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactToU8a=void 0;const n=r(2442),i=r(7736),o=n.BN_TWO.pow(new n.BN(6)).isub(n.BN_ONE),s=n.BN_TWO.pow(new n.BN(14)).isub(n.BN_ONE),a=n.BN_TWO.pow(new n.BN(30)).isub(n.BN_ONE),c={bitLength:16},d={bitLength:32};t.compactToU8a=function(e){const t=(0,n.bnToBn)(e);if(t.lte(o))return new Uint8Array([t.toNumber()<<2]);if(t.lte(s))return(0,n.bnToU8a)(t.shln(2).iadd(n.BN_ONE),c);if(t.lte(a))return(0,n.bnToU8a)(t.shln(2).iadd(n.BN_TWO),d);const r=(0,n.bnToU8a)(t);let u=r.length;for(;0===r[u-1];)u--;if(u<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return(0,i.u8aConcatStrict)([new Uint8Array([3+(u-4<<2)]),r.subarray(0,u)])}},4116:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(9081),i=r(7933);t.default=[n.packageInfo,i.packageInfo]},6503:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655).__importDefault(r(4116)),i=r(321);(0,r(9454).detectPackage)(i.packageInfo,null,n.default)},7246:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTime=void 0;const r=36e5,n={days:0,hours:0,milliseconds:0,minutes:0,seconds:0};function i(e,t){return{days:(e.days||0)+t.days,hours:(e.hours||0)+t.hours,milliseconds:(e.milliseconds||0)+t.milliseconds,minutes:(e.minutes||0)+t.minutes,seconds:(e.seconds||0)+t.seconds}}t.extractTime=function e(t){return t?t<1e3?i({milliseconds:t},n):function(t){const n=t/1e3;if(n<60){const r=~~n;return i({seconds:r},e(t-1e3*r))}const o=n/60;if(o<60){const r=~~o;return i({minutes:r},e(t-6e4*r))}const s=o/60;if(s<24){const n=~~s;return i({hours:n},e(t-n*r))}const a=~~(s/24);return i({days:a},e(t-864e5*a))}(t):n}},3052:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.floatToU8a=void 0;var n=r(8960);Object.defineProperty(t,"floatToU8a",{enumerable:!0,get:function(){return n.floatToU8a}})},8960:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.floatToU8a=void 0,t.floatToU8a=function(e=0,{bitLength:t=32,isLe:r=!0}={}){if(32!==t&&64!==t)throw new Error("Invalid bitLength provided, expected 32 or 64");const n=new Uint8Array(t/8),i=new DataView(n.buffer,n.byteOffset);return 32===t?i.setFloat32(0,Number(e),r):i.setFloat64(0,Number(e),r),n}},9307:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatBalance=void 0;const n=r(7569),i=r(7186),o=r(2079),s=r(7485),a=r(1335),c=a.SI[a.SI_MID].text;let d=0,u=c;t.formatBalance=function(e,{decimals:t=d,forceUnit:r,locale:c="en",withAll:u=!1,withSi:l=!0,withSiFull:f=!1,withUnit:h=!0,withZero:p=!0}={}){let b=(0,n.bnToBn)(e).toString();if(0===b.length||"0"===b)return"0";let m="";b[0].startsWith("-")&&(m="-",b=b.substring(1));const y=(0,a.calcSi)(b,t,r),v=b.length-(t+y.power),w=v<=0?"0":b.substring(0,v);let g=b.padStart(v<0?t:1,"0").substring(v<0?0:v).padEnd(u?Math.max(t,4):4,"0").substring(0,u?Math.max(4,t+y.power):4);if(!p){let e=g.length-1;do{"0"===g[e]&&e--}while("0"===g[e]);g=g.substring(0,e+1)}const x=(0,i.isBoolean)(h)?a.SI[a.SI_MID].text:h,P=l||f?"-"===y.value?h?` ${x}`:"":` ${f?`${y.text}${h?" ":""}`:y.value}${h?x:""}`:"",{decimal:O,thousand:k}=(0,s.getSeparator)(c);return`${m}${(0,o.formatDecimal)(w,k)}${g&&`${O}${g}`}${P}`},t.formatBalance.calcSi=(e,t=d)=>(0,a.calcSi)(e,t),t.formatBalance.findSi=a.findSi,t.formatBalance.getDefaults=()=>({decimals:d,unit:u}),t.formatBalance.getOptions=(e=d)=>a.SI.filter((({power:t})=>!(t<0)||e+t>=0)),t.formatBalance.setDefaults=({decimals:e,unit:t})=>{d=(Array.isArray(e)?e[0]:e)??d,u=(Array.isArray(t)?t[0]:t)??u,a.SI[a.SI_MID].text=u}},7041:(e,t)=>{"use strict";function r(e){return e.toString().padStart(2,"0")}Object.defineProperty(t,"__esModule",{value:!0}),t.formatDate=void 0,t.formatDate=function(e){return`${e.getFullYear().toString()}-${r(e.getMonth()+1)}-${r(e.getDate())} ${r(e.getHours())}:${r(e.getMinutes())}:${r(e.getSeconds())}`}},2079:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatDecimal=void 0;const r=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");t.formatDecimal=function(e,t=","){const n=e[0].startsWith("-"),i=n?e.substring(1).match(r):e.match(r);return i?`${n?"-":""}${i.join(t)}`:e}},4513:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatElapsed=void 0;const n=r(7569);t.formatElapsed=function(e,t){const r=e&&e.getTime()||0,i=t instanceof Date?t.getTime():(0,n.bnToBn)(t).toNumber();return r&&i?(o=Math.max(Math.abs(r-i),0)/1e3)<15?`${o.toFixed(1)}s`:o<60?(0|o)+"s":o<3600?(o/60|0)+"m":(o/3600|0)+"h":"0.0s";var o}},1855:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatNumber=void 0;const n=r(7569),i=r(2079),o=r(7485);t.formatNumber=function(e,{locale:t="en"}={}){const{thousand:r}=(0,o.getSeparator)(t);return(0,i.formatDecimal)((0,n.bnToBn)(e).toString(),r)}},7485:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSeparator=void 0,t.getSeparator=function(e){return{decimal:.1.toLocaleString(e).substring(1,2),thousand:1e3.toLocaleString(e).substring(1,2)}}},7169:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.findSi=t.calcSi=t.formatNumber=t.formatElapsed=t.formatDecimal=t.formatDate=t.formatBalance=void 0;var n=r(9307);Object.defineProperty(t,"formatBalance",{enumerable:!0,get:function(){return n.formatBalance}});var i=r(7041);Object.defineProperty(t,"formatDate",{enumerable:!0,get:function(){return i.formatDate}});var o=r(2079);Object.defineProperty(t,"formatDecimal",{enumerable:!0,get:function(){return o.formatDecimal}});var s=r(4513);Object.defineProperty(t,"formatElapsed",{enumerable:!0,get:function(){return s.formatElapsed}});var a=r(1855);Object.defineProperty(t,"formatNumber",{enumerable:!0,get:function(){return a.formatNumber}});var c=r(1335);Object.defineProperty(t,"calcSi",{enumerable:!0,get:function(){return c.calcSi}}),Object.defineProperty(t,"findSi",{enumerable:!0,get:function(){return c.findSi}})},1335:(e,t)=>{"use strict";function r(e){for(let r=0;r<t.SI.length;r++)if(t.SI[r].value===e)return t.SI[r];return t.SI[t.SI_MID]}Object.defineProperty(t,"__esModule",{value:!0}),t.calcSi=t.findSi=t.SI=t.SI_MID=void 0,t.SI_MID=8,t.SI=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}],t.findSi=r,t.calcSi=function(e,n,i){if(i)return r(i);const o=t.SI_MID-1+Math.ceil((e.length-n)/3);return t.SI[o]||t.SI[o<0?0:t.SI.length-1]}},6140:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasProcess=t.hasBuffer=t.hasWasm=t.hasEsm=t.hasDirname=t.hasCjs=t.hasBigInt=void 0;const n=r(3059),i=r(4793);t.hasBigInt="function"==typeof n.BigInt&&"function"==typeof n.BigInt.asIntN,t.hasCjs=!0,t.hasDirname=!0,t.hasEsm=!t.hasCjs,t.hasWasm="undefined"!=typeof WebAssembly,t.hasBuffer="function"==typeof i.xglobal.Buffer&&"function"==typeof i.xglobal.Buffer.isBuffer,t.hasProcess="object"==typeof i.xglobal.process},8899:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexAddPrefix=void 0;const n=r(5717);t.hexAddPrefix=function(e){return e&&(0,n.hexHasPrefix)(e)?e:`0x${e&&e.length%2==1?"0":""}${e||""}`}},4805:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexFixLength=void 0;const n=r(8899),i=r(8338);t.hexFixLength=function(e,t=-1,r=!1){const o=Math.ceil(t/4),s=o+2;return(0,n.hexAddPrefix)(-1===t||e.length===s||!r&&e.length<s?(0,i.hexStripPrefix)(e):e.length>s?(0,i.hexStripPrefix)(e).slice(-1*o):`${"0".repeat(o)}${(0,i.hexStripPrefix)(e)}`.slice(-1*o))}},5717:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexHasPrefix=void 0;const n=r(1580);t.hexHasPrefix=function(e){return!!e&&(0,n.isHex)(e,-1)}},8614:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToU8a=t.hexToString=t.hexToNumber=t.hexToBn=t.hexToBigInt=t.hexStripPrefix=t.hexHasPrefix=t.hexFixLength=t.hexAddPrefix=void 0;var n=r(8899);Object.defineProperty(t,"hexAddPrefix",{enumerable:!0,get:function(){return n.hexAddPrefix}});var i=r(4805);Object.defineProperty(t,"hexFixLength",{enumerable:!0,get:function(){return i.hexFixLength}});var o=r(5717);Object.defineProperty(t,"hexHasPrefix",{enumerable:!0,get:function(){return o.hexHasPrefix}});var s=r(8338);Object.defineProperty(t,"hexStripPrefix",{enumerable:!0,get:function(){return s.hexStripPrefix}});var a=r(8325);Object.defineProperty(t,"hexToBigInt",{enumerable:!0,get:function(){return a.hexToBigInt}});var c=r(4958);Object.defineProperty(t,"hexToBn",{enumerable:!0,get:function(){return c.hexToBn}});var d=r(577);Object.defineProperty(t,"hexToNumber",{enumerable:!0,get:function(){return d.hexToNumber}});var u=r(5269);Object.defineProperty(t,"hexToString",{enumerable:!0,get:function(){return u.hexToString}});var l=r(2166);Object.defineProperty(t,"hexToU8a",{enumerable:!0,get:function(){return l.hexToU8a}})},8338:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexStripPrefix=void 0;const n=r(1580);t.hexStripPrefix=function(e){if(!e||"0x"===e)return"";if(n.REGEX_HEX_PREFIXED.test(e))return e.substring(2);if(n.REGEX_HEX_NOPREFIX.test(e))return e;throw new Error(`Expected hex value to convert, found '${e}'`)}},8325:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToBigInt=void 0;const n=r(3059),i=r(6755),o=r(2166);t.hexToBigInt=function(e,{isLe:t=!1,isNegative:r=!1}={}){return e&&"0x"!==e?(0,i.u8aToBigInt)((0,o.hexToU8a)(e),{isLe:t,isNegative:r}):(0,n.BigInt)(0)}},4958:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToBn=void 0;const n=r(3672),i=r(8338);t.hexToBn=function(e,{isLe:t=!1,isNegative:r=!1}={}){if(!e||"0x"===e)return new n.BN(0);const o=(0,i.hexStripPrefix)(e),s=new n.BN(o,16,t?"le":"be");return r?s.fromTwos(4*o.length):s}},577:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToNumber=void 0;const n=r(4958);t.hexToNumber=function(e){return e?(0,n.hexToBn)(e).toNumber():NaN}},5269:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToString=void 0;const n=r(2913),i=r(2166);t.hexToString=function(e){return(0,n.u8aToString)((0,i.hexToU8a)(e))}},2166:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToU8a=void 0;const r="0123456789abcdef",n=new Uint8Array(256),i=new Uint8Array(65536);for(let e=0;e<16;e++)n[0|r[e].charCodeAt(0)]=0|e,e>9&&(n[0|r[e].toUpperCase().charCodeAt(0)]=0|e);for(let e=0;e<256;e++){const t=e<<8;for(let r=0;r<256;r++)i[t|r]=n[e]<<4|n[r]}t.hexToU8a=function(e,t=-1){if(!e)return new Uint8Array;let r=e.startsWith("0x")?2:0;const n=Math.ceil((e.length-r)/2),o=Math.ceil(-1===t?n:t/8),s=new Uint8Array(o);for(let t=o>n?o-n:0;t<o;t++,r+=2)s[t]=i[e.charCodeAt(r)<<8|e.charCodeAt(r+1)];return s}},8245:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);r(6503),n.__exportStar(r(643),t)},7594:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isArray=void 0,t.isArray=function(e){return Array.isArray(e)}},7919:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAscii=void 0;const n=r(3365),i=r(1580),o=r(3300);function s(e){const t=0|e.length;for(let r=0;r<t;r++){const t=0|e[r];if(t<32||t>126)return!1}return!0}t.isAscii=function(e){return(0,o.isString)(e)?(0,i.isHex)(e)?s((0,n.u8aToU8a)(e)):function(e){const t=0|e.length;for(let r=0;r<t;r++){const t=e.charCodeAt(r);if(t<32||t>126)return!1}return!0}(e):!!e&&s(e)}},175:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBigInt=void 0,t.isBigInt=function(e){return"bigint"==typeof e}},5767:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBn=void 0;const n=r(3672);t.isBn=function(e){return n.BN.isBN(e)}},7186:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBoolean=void 0,t.isBoolean=function(e){return"boolean"==typeof e}},5109:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBuffer=void 0;const n=r(4793),i=r(6140),o=r(2404);t.isBuffer=function(e){return i.hasBuffer&&!!e&&(0,o.isFunction)(e.readDoubleLE)&&n.xglobal.Buffer.isBuffer(e)}},804:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isChildClass=void 0;const n=r(2096);t.isChildClass=function(e,t){return!(!(0,n.isClass)(t)||!(0,n.isClass)(e))&&(e===t||e.isPrototypeOf(t))}},2096:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isClass=void 0;const n=r(3179);t.isClass=(0,n.isOnFunction)("isPrototypeOf","hasOwnProperty")},2139:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCodec=void 0;const n=r(3179),i=(0,n.isOnObject)("toHex","toHuman","toU8a"),o=(0,n.isOnObject)("get");t.isCodec=function(e){return i(e)&&o(e.registry)}},5511:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCompact=void 0;const n=r(3179);t.isCompact=(0,n.isOnObject)("toBigInt","toBn","toNumber","unwrap")},4880:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isError=void 0,t.isError=function(e){return(e&&e.constructor)===Error||e instanceof Error}},2404:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isFunction=void 0,t.isFunction=function(e){return"function"==typeof e}},3179:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isOnObject=t.isOnFunction=t.isOn=void 0;const n=r(2404),i=r(7509);t.isOn=function(...e){return t=>((0,i.isObject)(t)||(0,n.isFunction)(t))&&e.every((e=>(0,n.isFunction)(t[e])))},t.isOnFunction=function(...e){return t=>(0,n.isFunction)(t)&&e.every((e=>(0,n.isFunction)(t[e])))},t.isOnObject=function(...e){return t=>(0,i.isObject)(t)&&e.every((e=>(0,n.isFunction)(t[e])))}},1580:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isHex=t.REGEX_HEX_NOPREFIX=t.REGEX_HEX_PREFIXED=void 0,t.REGEX_HEX_PREFIXED=/^0x[\da-fA-F]+$/,t.REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/,t.isHex=function(e,r=-1,n){return"string"==typeof e&&("0x"===e||t.REGEX_HEX_PREFIXED.test(e))&&(-1===r?n||e.length%2==0:e.length===2+Math.ceil(r/4))}},6959:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWasm=t.isUtf8=t.isUndefined=t.isU8a=t.isToBn=t.isToBigInt=t.isTestChain=t.isString=t.isPromise=t.isObservable=t.isObject=t.isNumber=t.isNull=t.isJsonObject=t.isIp=t.isInstanceOf=t.isHex=t.isFunction=t.isError=t.isCompact=t.isCodec=t.isClass=t.isChildClass=t.isBuffer=t.isBoolean=t.isBn=t.isBigInt=t.isAscii=t.isArray=void 0;var n=r(7594);Object.defineProperty(t,"isArray",{enumerable:!0,get:function(){return n.isArray}});var i=r(7919);Object.defineProperty(t,"isAscii",{enumerable:!0,get:function(){return i.isAscii}});var o=r(175);Object.defineProperty(t,"isBigInt",{enumerable:!0,get:function(){return o.isBigInt}});var s=r(5767);Object.defineProperty(t,"isBn",{enumerable:!0,get:function(){return s.isBn}});var a=r(7186);Object.defineProperty(t,"isBoolean",{enumerable:!0,get:function(){return a.isBoolean}});var c=r(5109);Object.defineProperty(t,"isBuffer",{enumerable:!0,get:function(){return c.isBuffer}});var d=r(804);Object.defineProperty(t,"isChildClass",{enumerable:!0,get:function(){return d.isChildClass}});var u=r(2096);Object.defineProperty(t,"isClass",{enumerable:!0,get:function(){return u.isClass}});var l=r(2139);Object.defineProperty(t,"isCodec",{enumerable:!0,get:function(){return l.isCodec}});var f=r(5511);Object.defineProperty(t,"isCompact",{enumerable:!0,get:function(){return f.isCompact}});var h=r(4880);Object.defineProperty(t,"isError",{enumerable:!0,get:function(){return h.isError}});var p=r(2404);Object.defineProperty(t,"isFunction",{enumerable:!0,get:function(){return p.isFunction}});var b=r(1580);Object.defineProperty(t,"isHex",{enumerable:!0,get:function(){return b.isHex}});var m=r(4705);Object.defineProperty(t,"isInstanceOf",{enumerable:!0,get:function(){return m.isInstanceOf}});var y=r(745);Object.defineProperty(t,"isIp",{enumerable:!0,get:function(){return y.isIp}});var v=r(6e3);Object.defineProperty(t,"isJsonObject",{enumerable:!0,get:function(){return v.isJsonObject}});var w=r(9111);Object.defineProperty(t,"isNull",{enumerable:!0,get:function(){return w.isNull}});var g=r(2425);Object.defineProperty(t,"isNumber",{enumerable:!0,get:function(){return g.isNumber}});var x=r(7509);Object.defineProperty(t,"isObject",{enumerable:!0,get:function(){return x.isObject}});var P=r(6913);Object.defineProperty(t,"isObservable",{enumerable:!0,get:function(){return P.isObservable}});var O=r(4711);Object.defineProperty(t,"isPromise",{enumerable:!0,get:function(){return O.isPromise}});var k=r(3300);Object.defineProperty(t,"isString",{enumerable:!0,get:function(){return k.isString}});var j=r(4673);Object.defineProperty(t,"isTestChain",{enumerable:!0,get:function(){return j.isTestChain}});var M=r(4455);Object.defineProperty(t,"isToBigInt",{enumerable:!0,get:function(){return M.isToBigInt}});var N=r(789);Object.defineProperty(t,"isToBn",{enumerable:!0,get:function(){return N.isToBn}});var T=r(9727);Object.defineProperty(t,"isU8a",{enumerable:!0,get:function(){return T.isU8a}});var E=r(4617);Object.defineProperty(t,"isUndefined",{enumerable:!0,get:function(){return E.isUndefined}});var B=r(8157);Object.defineProperty(t,"isUtf8",{enumerable:!0,get:function(){return B.isUtf8}});var z=r(2993);Object.defineProperty(t,"isWasm",{enumerable:!0,get:function(){return z.isWasm}})},4705:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInstanceOf=void 0,t.isInstanceOf=function(e,t){return(e&&e.constructor)===t||e instanceof t}},745:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isIp=void 0;const r="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",n="[a-fA-F\\d]{1,4}",i=`\n(?:\n(?:${n}:){7}(?:${n}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${n}:){6}(?:${r}|:${n}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${n}:){5}(?::${r}|(?::${n}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${n}:){4}(?:(?::${n}){0,1}:${r}|(?::${n}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${n}:){3}(?:(?::${n}){0,2}:${r}|(?::${n}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${n}:){2}(?:(?::${n}){0,3}:${r}|(?::${n}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${n}:){1}(?:(?::${n}){0,4}:${r}|(?::${n}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${n}){0,5}:${r}|(?::${n}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),o=new RegExp(`(?:^${r}$)|(?:^${i}$)`),s=new RegExp(`^${r}$`),a=new RegExp(`^${i}$`);t.isIp=function(e,t){switch(t){case"v4":return s.test(e);case"v6":return a.test(e);default:return o.test(e)}}},6e3:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isJsonObject=void 0;const n=r(5329);t.isJsonObject=function(e){const t="string"!=typeof e?(0,n.stringify)(e):e;try{const e=JSON.parse(t);return"object"==typeof e&&null!==e}catch{return!1}}},9111:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNull=void 0,t.isNull=function(e){return null===e}},2425:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNumber=void 0,t.isNumber=function(e){return"number"==typeof e}},7509:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isObject=void 0,t.isObject=function(e){return!!e&&"object"==typeof e}},6913:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isObservable=void 0;const n=r(3179);t.isObservable=(0,n.isOn)("next")},4711:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isPromise=void 0;const n=r(3179);t.isPromise=(0,n.isOnObject)("catch","then")},3300:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isString=void 0,t.isString=function(e){return"string"==typeof e||e instanceof String}},4673:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTestChain=void 0;const r=/(Development|Local Testnet)$/;t.isTestChain=function(e){return!!e&&!!r.test(e.toString())}},4455:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isToBigInt=void 0;const n=r(3179);t.isToBigInt=(0,n.isOn)("toBigInt")},789:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isToBn=void 0;const n=r(3179);t.isToBn=(0,n.isOn)("toBn")},9727:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isU8a=void 0,t.isU8a=function(e){return(e&&e.constructor)===Uint8Array||e instanceof Uint8Array}},4617:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUndefined=void 0,t.isUndefined=function(e){return void 0===e}},8157:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUtf8=void 0;const n=r(3365),i=r(3300);t.isUtf8=function(e){if(!e)return(0,i.isString)(e);const t=(0,n.u8aToU8a)(e),r=t.length;let o=0;for(;o<r;)if(t[o]<=127)o+=1;else if(t[o]>=194&&t[o]<=223){if(!(o+1<r))return!1;if(t[o+1]<128||t[o+1]>191)return!1;o+=2}else if(224===t[o]){if(!(o+2<r))return!1;if(t[o+1]<160||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(t[o]>=225&&t[o]<=236){if(!(o+2<r))return!1;if(t[o+1]<128||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(237===t[o]){if(!(o+2<r))return!1;if(t[o+1]<128||t[o+1]>159)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(t[o]>=238&&t[o]<=239){if(!(o+2<r))return!1;if(t[o+1]<128||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(240===t[o]){if(!(o+3<r))return!1;if(t[o+1]<144||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;if(t[o+3]<128||t[o+3]>191)return!1;o+=4}else if(t[o]>=241&&t[o]<=243){if(!(o+3<r))return!1;if(t[o+1]<128||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;if(t[o+3]<128||t[o+3]>191)return!1;o+=4}else{if(244!==t[o])return!1;if(!(o+3<r))return!1;if(t[o+1]<128||t[o+1]>143)return!1;if(t[o+2]<128||t[o+2]>191)return!1;if(t[o+3]<128||t[o+3]>191)return!1;o+=4}return!0}},2993:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWasm=void 0;const n=r(6594),i=r(9727),o=new Uint8Array([0,97,115,109]);t.isWasm=function(e){return(0,i.isU8a)(e)&&(0,n.u8aEq)(e.subarray(0,4),o)}},4521:(e,t)=>{"use strict";function r(e,t,r,n,i=0){const o=n?n(t,i):t.toString();let s;Object.defineProperty(e,o,{configurable:!0,enumerable:!0,get:function(){if(void 0===s){s=r(t,i,this);try{Object.defineProperty(this,o,{value:s})}catch{}}return s}})}Object.defineProperty(t,"__esModule",{value:!0}),t.lazyMethods=t.lazyMethod=void 0,t.lazyMethod=r,t.lazyMethods=function(e,t,n,i){for(let o=0;o<t.length;o++)r(e,t[o],n,i,o);return e}},9924:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logger=t.loggerFormat=void 0;const n=r(4793),i=r(7041),o=r(5767),s=r(5109),a=r(2404),c=r(7509),d=r(9727),u=r(9481),l=r(3365),f=r(6140),h=r(1483),p={debug:"log",error:"error",log:"log",warn:"warn"};function b(e){return Array.isArray(e)?e.map(b):(0,o.isBn)(e)?e.toString():(0,d.isU8a)(e)||(0,s.isBuffer)(e)?(0,u.u8aToHex)((0,l.u8aToU8a)(e)):function(e){if(e&&(0,c.isObject)(e)&&e.constructor===Object){const t={};for(const[r,n]of Object.entries(e))t[r]=b(n);return t}return e}(e)}function m(e,t,r,n=-1){if(1===r.length&&(0,a.isFunction)(r[0])){const i=r[0]();return m(e,t,Array.isArray(i)?i:[i],n)}var o;console[p[e]]((0,i.formatDate)(new Date),t,...r.map(b).map((o=n,e=>{if(o<=0)return e;const t=`${e}`;return t.length<o?e:`${t.substring(0,o)} ...`})))}function y(e,t){return!!e&&("*"===e||t===e||e.endsWith("*")&&t.startsWith(e.slice(0,-1)))}function v(e,t){return!!e&&e.startsWith("-")&&(t===e.slice(1)||e.endsWith("*")&&t.startsWith(e.slice(1,-1)))}function w(e,t){let r=!1;for(const n of e)y(n,t)?r=!0:v(n,t)&&(r=!1);return r}t.loggerFormat=b,t.logger=function(e){const t=`${e.toUpperCase()}:`.padStart(16),[r,i]=function(e){const t=(f.hasProcess?n.xglobal.process:{}).env||{},r=parseInt(t.DEBUG_MAX||"-1",10);return[w((t.DEBUG||"").toLowerCase().split(","),e),isNaN(r)?-1:r]}(e.toLowerCase());return{debug:r?(...e)=>m("debug",t,e,i):h.noop,error:(...e)=>m("error",t,e),log:(...e)=>m("log",t,e),noop:h.noop,warn:(...e)=>m("warn",t,e)}}},4456:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.memoize=void 0;const n=r(5329);function i(){return"none"}t.memoize=function(e,{getInstanceId:t=i}={}){const r={},o=(...i)=>{const o=(0,n.stringify)(i),s=t();return r[s]||(r[s]={}),void 0===r[s][o]&&(r[s][o]=e(...i)),r[s][o]};return o.unmemoize=(...e)=>{const i=(0,n.stringify)(e),o=t();r[o]&&void 0!==r[o][i]&&delete r[o][i]},o}},5501:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nextTick=void 0,t.nextTick=function(e,t){setTimeout((()=>{Promise.resolve().then((()=>{e()})).catch((e=>{t?t(e):console.error(e)}))}),0)}},1483:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.noop=t.identity=void 0,t.identity=function(e){return e},t.noop=function(){}},8510:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToU8a=t.numberToHex=void 0;var n=r(8441);Object.defineProperty(t,"numberToHex",{enumerable:!0,get:function(){return n.numberToHex}});var i=r(3143);Object.defineProperty(t,"numberToU8a",{enumerable:!0,get:function(){return i.numberToU8a}})},8441:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToHex=void 0;const n=r(4805);t.numberToHex=function(e,t=-1){const r=(!e||Number.isNaN(e)?0:e).toString(16);return(0,n.hexFixLength)(r.length%2?`0${r}`:r,t,!0)}},3143:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToU8a=void 0;const n=r(2166),i=r(8441);t.numberToU8a=function(e,t=-1){return(0,n.hexToU8a)((0,i.numberToHex)(e,t))}},7437:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectClear=void 0,t.objectClear=function(e){const t=Object.keys(e);for(let r=0;r<t.length;r++)delete e[t[r]];return e}},1174:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectCopy=void 0;const n=r(9704);t.objectCopy=function(e){return(0,n.objectSpread)({},e)}},4185:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectEntries=void 0,t.objectEntries=function(e){return Object.entries(e)}},2200:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectValues=t.objectSpread=t.objectProperty=t.objectProperties=t.objectKeys=t.objectEntries=t.objectCopy=t.objectClear=void 0;var n=r(7437);Object.defineProperty(t,"objectClear",{enumerable:!0,get:function(){return n.objectClear}});var i=r(1174);Object.defineProperty(t,"objectCopy",{enumerable:!0,get:function(){return i.objectCopy}});var o=r(4185);Object.defineProperty(t,"objectEntries",{enumerable:!0,get:function(){return o.objectEntries}});var s=r(6032);Object.defineProperty(t,"objectKeys",{enumerable:!0,get:function(){return s.objectKeys}});var a=r(1015);Object.defineProperty(t,"objectProperties",{enumerable:!0,get:function(){return a.objectProperties}}),Object.defineProperty(t,"objectProperty",{enumerable:!0,get:function(){return a.objectProperty}});var c=r(9704);Object.defineProperty(t,"objectSpread",{enumerable:!0,get:function(){return c.objectSpread}});var d=r(2499);Object.defineProperty(t,"objectValues",{enumerable:!0,get:function(){return d.objectValues}})},6032:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectKeys=void 0,t.objectKeys=function(e){return Object.keys(e)}},1015:(e,t)=>{"use strict";function r(e,t,r,n,i=0){const o=n?n(t,i):t;o in e||Object.defineProperty(e,o,{enumerable:!0,get:function(){return r(t,i,this)}})}Object.defineProperty(t,"__esModule",{value:!0}),t.objectProperties=t.objectProperty=void 0,t.objectProperty=r,t.objectProperties=function(e,t,n,i){for(let o=0;o<t.length;o++)r(e,t[o],n,i,o)}},9704:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectSpread=void 0,t.objectSpread=function(e,...t){for(let r=0;r<t.length;r++){const n=t[r];if(n)if("function"==typeof n.entries)for(const[t,r]of n.entries())e[t]=r;else Object.assign(e,n)}return e}},2499:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectValues=void 0,t.objectValues=function(e){return Object.values(e)}},321:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/util",path:"/",type:"cjs",version:"12.1.2"}},4404:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.promisify=void 0,t.promisify=function(e,t,...r){return new Promise(((n,i)=>{t.apply(e,r.concat(((e,t)=>{e?i(e):n(t)})))}))}},2772:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringPascalCase=t.stringCamelCase=t.CC_TO_LO=t.CC_TO_UP=void 0,t.CC_TO_UP=new Array(256),t.CC_TO_LO=new Array(256);for(let e=0;e<t.CC_TO_UP.length;e++)t.CC_TO_LO[e]=String.fromCharCode(e).toLowerCase(),t.CC_TO_UP[e]=String.fromCharCode(e).toUpperCase();function r(e){return e.slice(0,e.length-1).toLowerCase()+t.CC_TO_UP[e.charCodeAt(e.length-1)]}function n(e){return t=>{const n=t.replace(/[-_., ]+/g," ").trim().split(" "),i=n.length;let o="";for(let t=0;t<i;t++){const i=n[t];o+=e(/^[\dA-Z]+$/.test(i)?i.toLowerCase():i.replace(/^[\dA-Z]{2,}[^a-z]/,r),t)}return o}}t.stringCamelCase=n(((e,r)=>(r?t.CC_TO_UP[e.charCodeAt(0)]:t.CC_TO_LO[e.charCodeAt(0)])+e.slice(1))),t.stringPascalCase=n((e=>t.CC_TO_UP[e.charCodeAt(0)]+e.slice(1)))},7556:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToU8a=t.stringToHex=t.stringShorten=t.stringUpperFirst=t.stringLowerFirst=t.stringPascalCase=t.stringCamelCase=void 0;var n=r(2772);Object.defineProperty(t,"stringCamelCase",{enumerable:!0,get:function(){return n.stringCamelCase}}),Object.defineProperty(t,"stringPascalCase",{enumerable:!0,get:function(){return n.stringPascalCase}});var i=r(6092);Object.defineProperty(t,"stringLowerFirst",{enumerable:!0,get:function(){return i.stringLowerFirst}}),Object.defineProperty(t,"stringUpperFirst",{enumerable:!0,get:function(){return i.stringUpperFirst}});var o=r(8149);Object.defineProperty(t,"stringShorten",{enumerable:!0,get:function(){return o.stringShorten}});var s=r(1734);Object.defineProperty(t,"stringToHex",{enumerable:!0,get:function(){return s.stringToHex}});var a=r(1593);Object.defineProperty(t,"stringToU8a",{enumerable:!0,get:function(){return a.stringToU8a}})},6092:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringUpperFirst=t.stringLowerFirst=void 0;const n=r(2772);function i(e){return t=>t?e[t.charCodeAt(0)]+t.slice(1):""}t.stringLowerFirst=i(n.CC_TO_LO),t.stringUpperFirst=i(n.CC_TO_UP)},8149:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringShorten=void 0,t.stringShorten=function(e,t=6){return e.length<=2+2*t?e.toString():`${e.substring(0,t)}…${e.slice(-t)}`}},1734:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToHex=void 0;const n=r(9481),i=r(1593);t.stringToHex=function(e){return(0,n.u8aToHex)((0,i.stringToU8a)(e))}},1593:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToU8a=void 0;const n=new(r(7933).TextEncoder);t.stringToU8a=function(e){return e?n.encode(e.toString()):new Uint8Array}},5329:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringify=void 0;const n=r(175);function i(e,t){return(0,n.isBigInt)(t)?t.toString():t}t.stringify=function(e,t){return JSON.stringify(e,i,t)}},6736:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aCmp=void 0;const n=r(3365);t.u8aCmp=function(e,t){const r=(0,n.u8aToU8a)(e),i=(0,n.u8aToU8a)(t);let o=0;for(;;){const e=o>=r.length,t=o>=i.length;if(e&&t)return 0;if(e)return-1;if(t)return 1;if(r[o]!==i[o])return r[o]>i[o]?1:-1;o++}}},1735:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aConcatStrict=t.u8aConcat=void 0;const n=r(3365);function i(e,t=0){let r=0;if(!t)for(let r=0;r<e.length;r++)t+=e[r].length;const n=new Uint8Array(t);for(let t=0;t<e.length;t++)n.set(e[t],r),r+=e[t].length;return n}t.u8aConcat=function(...e){const t=e.length,r=new Array(t);let o=0;for(let i=0;i<t;i++)r[i]=(0,n.u8aToU8a)(e[i]),o+=r[i].length;return i(r,o)},t.u8aConcatStrict=i},5476:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aEmpty=void 0,t.u8aEmpty=function(e){const t=0|e.length;for(let r=0;r<t;r++)if(0|e[r])return!1;return!0}},6594:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aEq=void 0;const n=r(3365);t.u8aEq=function(e,t){const r=(0,n.u8aToU8a)(e),i=(0,n.u8aToU8a)(t);if(r.length===i.length){const e=new DataView(r.buffer,r.byteOffset),t=new DataView(i.buffer,i.byteOffset),n=r.length%4|0,o=r.length-n|0;for(let r=0;r<o;r+=4)if(e.getUint32(r)!==t.getUint32(r))return!1;for(let e=o;e<r.length;e++)if(r[e]!==i[e])return!1;return!0}return!1}},4693:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aFixLength=void 0,t.u8aFixLength=function(e,t=-1,r=!1){const n=Math.ceil(t/8);if(-1===t||e.length===n)return e;if(e.length>n)return e.subarray(0,n);const i=new Uint8Array(n);return i.set(e,r?0:n-e.length),i}},7736:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aWrapBytes=t.u8aUnwrapBytes=t.u8aIsWrapped=t.U8A_WRAP_PREFIX=t.U8A_WRAP_POSTFIX=t.U8A_WRAP_ETHEREUM=t.u8aToU8a=t.u8aToString=t.u8aToNumber=t.u8aToHex=t.u8aToFloat=t.u8aToBuffer=t.u8aToBn=t.u8aToBigInt=t.u8aSorted=t.u8aFixLength=t.u8aEq=t.u8aEmpty=t.u8aConcatStrict=t.u8aConcat=t.u8aCmp=void 0;var n=r(6736);Object.defineProperty(t,"u8aCmp",{enumerable:!0,get:function(){return n.u8aCmp}});var i=r(1735);Object.defineProperty(t,"u8aConcat",{enumerable:!0,get:function(){return i.u8aConcat}}),Object.defineProperty(t,"u8aConcatStrict",{enumerable:!0,get:function(){return i.u8aConcatStrict}});var o=r(5476);Object.defineProperty(t,"u8aEmpty",{enumerable:!0,get:function(){return o.u8aEmpty}});var s=r(6594);Object.defineProperty(t,"u8aEq",{enumerable:!0,get:function(){return s.u8aEq}});var a=r(4693);Object.defineProperty(t,"u8aFixLength",{enumerable:!0,get:function(){return a.u8aFixLength}});var c=r(4480);Object.defineProperty(t,"u8aSorted",{enumerable:!0,get:function(){return c.u8aSorted}});var d=r(6755);Object.defineProperty(t,"u8aToBigInt",{enumerable:!0,get:function(){return d.u8aToBigInt}});var u=r(2312);Object.defineProperty(t,"u8aToBn",{enumerable:!0,get:function(){return u.u8aToBn}});var l=r(343);Object.defineProperty(t,"u8aToBuffer",{enumerable:!0,get:function(){return l.u8aToBuffer}});var f=r(3704);Object.defineProperty(t,"u8aToFloat",{enumerable:!0,get:function(){return f.u8aToFloat}});var h=r(9481);Object.defineProperty(t,"u8aToHex",{enumerable:!0,get:function(){return h.u8aToHex}});var p=r(7598);Object.defineProperty(t,"u8aToNumber",{enumerable:!0,get:function(){return p.u8aToNumber}});var b=r(2913);Object.defineProperty(t,"u8aToString",{enumerable:!0,get:function(){return b.u8aToString}});var m=r(3365);Object.defineProperty(t,"u8aToU8a",{enumerable:!0,get:function(){return m.u8aToU8a}});var y=r(2601);Object.defineProperty(t,"U8A_WRAP_ETHEREUM",{enumerable:!0,get:function(){return y.U8A_WRAP_ETHEREUM}}),Object.defineProperty(t,"U8A_WRAP_POSTFIX",{enumerable:!0,get:function(){return y.U8A_WRAP_POSTFIX}}),Object.defineProperty(t,"U8A_WRAP_PREFIX",{enumerable:!0,get:function(){return y.U8A_WRAP_PREFIX}}),Object.defineProperty(t,"u8aIsWrapped",{enumerable:!0,get:function(){return y.u8aIsWrapped}}),Object.defineProperty(t,"u8aUnwrapBytes",{enumerable:!0,get:function(){return y.u8aUnwrapBytes}}),Object.defineProperty(t,"u8aWrapBytes",{enumerable:!0,get:function(){return y.u8aWrapBytes}})},4480:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aSorted=void 0;const n=r(6736);t.u8aSorted=function(e){return e.sort(n.u8aCmp)}},6755:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBigInt=void 0;const n=r(3059),i=r(1405),o=(0,n.BigInt)(256),s=(0,n.BigInt)(65536);t.u8aToBigInt=function(e,{isLe:t=!0,isNegative:r=!1}={}){if(!e||!e.length)return(0,n.BigInt)(0);const a=t?e:e.reverse(),c=new DataView(a.buffer,a.byteOffset),d=a.length,u=d%2;let l=(0,n.BigInt)(0);if(r){for(let e=d-2;e>=u;e-=2)l=l*s+(0,n.BigInt)(65535^c.getUint16(e,!0));u&&(l=l*o+(0,n.BigInt)(255^a[0]))}else{for(let e=d-2;e>=u;e-=2)l=l*s+(0,n.BigInt)(c.getUint16(e,!0));u&&(l=l*o+(0,n.BigInt)(a[0]))}return r?l*-i._1n-i._1n:l}},2312:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBn=void 0;const n=r(3672);t.u8aToBn=function(e,{isLe:t=!0,isNegative:r=!1}={}){const i=e.length;if(i<=6){if(r){let r=0;if(t)switch(i){case 0:return new n.BN(0);case 1:r=255^e[0];break;case 2:r=e[0]+(e[1]<<8)^65535;break;case 3:r=e[0]+(e[1]<<8)+(e[2]<<16)^16777215;break;case 4:r=e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295;break;case 5:r=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(255^e[4]);break;default:r=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(e[4]+(e[5]<<8)^65535)}else for(let t=0;t<i;t++)r=256*r+(255^e[t]);return i?new n.BN(-1*r-1):new n.BN(0)}if(!t){let t=0;for(let r=0;r<i;r++)t=256*t+e[r];return new n.BN(t)}switch(i){case 0:return new n.BN(0);case 1:return new n.BN(e[0]);case 2:return new n.BN(e[0]+(e[1]<<8));case 3:return new n.BN(e[0]+(e[1]<<8)+(e[2]<<16));case 4:return new n.BN(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]);case 5:return new n.BN(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8)));default:return new n.BN(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8)+(e[5]<<16)))}}return r?new n.BN(e,t?"le":"be").fromTwos(8*e.length):new n.BN(e,t?"le":"be")}},343:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBuffer=void 0,t.u8aToBuffer=function(e){return Buffer.from(e||[])}},3704:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToFloat=void 0,t.u8aToFloat=function(e,{bitLength:t=32,isLe:r=!0}={}){if(32!==t&&64!==t)throw new Error("Invalid bitLength provided, expected 32 or 64");if(e.length<t/8)throw new Error(`Invalid input buffer provided, expected at least ${t/8} bytes, found ${e.length}`);const n=new DataView(e.buffer,e.byteOffset);return 32===t?n.getFloat32(0,r):n.getFloat64(0,r)}},9481:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToHex=void 0;const r=new Array(256),n=new Array(65536);for(let e=0;e<256;e++)r[e]=e.toString(16).padStart(2,"0");for(let e=0;e<256;e++){const t=e<<8;for(let i=0;i<256;i++)n[t|i]=r[e]+r[i]}function i(e,t){const i=e.length%2|0,o=e.length-i|0;for(let r=0;r<o;r+=2)t+=n[e[r]<<8|e[r+1]];return i&&(t+=r[0|e[o]]),t}t.u8aToHex=function(e,t=-1,r=!0){const n=r?"0x":"";if(!e||!e.length)return n;if(t>0){const r=Math.ceil(t/8);if(e.length>r)return`${i(e.subarray(0,r/2),n)}…${i(e.subarray(e.length-r/2),"")}`}return i(e,n)}},7598:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToNumber=void 0,t.u8aToNumber=function(e,{isNegative:t=!1}={}){const r=e.length;if(t){let t=0;switch(r){case 0:return 0;case 1:t=255^e[0];break;case 2:t=e[0]+(e[1]<<8)^65535;break;case 3:t=e[0]+(e[1]<<8)+(e[2]<<16)^16777215;break;case 4:t=e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295;break;case 5:t=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(255^e[4]);break;case 6:t=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(e[4]+(e[5]<<8)^65535);break;default:throw new Error("Value more than 48-bits cannot be reliably converted")}return-1*t-1}switch(r){case 0:return 0;case 1:return e[0];case 2:return e[0]+(e[1]<<8);case 3:return e[0]+(e[1]<<8)+(e[2]<<16);case 4:return e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3];case 5:return e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8));case 6:return e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8)+(e[5]<<16));default:throw new Error("Value more than 48-bits cannot be reliably converted")}}},2913:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToString=void 0;const n=new(r(9081).TextDecoder)("utf-8");t.u8aToString=function(e){return e?n.decode(e):""}},3365:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToU8a=void 0;const n=r(2166),i=r(5109),o=r(1580),s=r(9727),a=r(1593);t.u8aToU8a=function(e){return(0,s.isU8a)(e)?(0,i.isBuffer)(e)?new Uint8Array(e):e:(0,o.isHex)(e)?(0,n.hexToU8a)(e):Array.isArray(e)?new Uint8Array(e):(0,a.stringToU8a)(e)}},2601:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aWrapBytes=t.u8aUnwrapBytes=t.u8aIsWrapped=t.U8A_WRAP_POSTFIX=t.U8A_WRAP_PREFIX=t.U8A_WRAP_ETHEREUM=void 0;const n=r(1735),i=r(6594),o=r(3365);t.U8A_WRAP_ETHEREUM=(0,o.u8aToU8a)("Ethereum Signed Message:\n"),t.U8A_WRAP_PREFIX=(0,o.u8aToU8a)("<Bytes>"),t.U8A_WRAP_POSTFIX=(0,o.u8aToU8a)("</Bytes>");const s=t.U8A_WRAP_PREFIX.length+t.U8A_WRAP_POSTFIX.length;function a(e,r){return e.length>=s&&(0,i.u8aEq)(e.subarray(0,t.U8A_WRAP_PREFIX.length),t.U8A_WRAP_PREFIX)&&(0,i.u8aEq)(e.slice(-t.U8A_WRAP_POSTFIX.length),t.U8A_WRAP_POSTFIX)||r&&e.length>=t.U8A_WRAP_ETHEREUM.length&&(0,i.u8aEq)(e.subarray(0,t.U8A_WRAP_ETHEREUM.length),t.U8A_WRAP_ETHEREUM)}t.u8aIsWrapped=a,t.u8aUnwrapBytes=function(e){const r=(0,o.u8aToU8a)(e);return a(r,!1)?r.subarray(t.U8A_WRAP_PREFIX.length,r.length-t.U8A_WRAP_POSTFIX.length):r},t.u8aWrapBytes=function(e){const r=(0,o.u8aToU8a)(e);return a(r,!0)?r:(0,n.u8aConcatStrict)([t.U8A_WRAP_PREFIX,r,t.U8A_WRAP_POSTFIX])}},9454:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.detectPackage=void 0;const n=r(4793),i=r(2404);function o(e,{name:t}){return[e,t]}function s(e,{path:t,type:r}){let n;if(t&&t.length>=5){const e=t.indexOf("node_modules");n=-1===e?t:t.substring(e)}else n="<unknown>";return[`${`${r||""}`.padStart(3)} ${e}`,n]}function a(e,t){if(e)return e;if((0,i.isFunction)(t))try{return t()||""}catch{return""}return t||""}function c(e,t,r){console.warn(`${e}\nEither remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:\n${function(e,t){let r=0;for(let t=0,n=e.length;t<n;t++)r=Math.max(r,e[t].version.length);return e.map((e=>`\t${t(e.version.padEnd(r),e).join("\t")}`)).join("\n")}(t,r)}`)}t.detectPackage=function({name:e,path:t,type:r,version:i},d,u=[]){if(!e.startsWith("@polkadot"))throw new Error(`Invalid package descriptor ${e}`);const l=function(e){const t=n.xglobal;return t.__polkadotjs||(t.__polkadotjs={}),t.__polkadotjs[e]||(t.__polkadotjs[e]=[]),t.__polkadotjs[e]}(e);if(l.push({path:a(t,d),type:r,version:i}),1!==l.length)c(`${e} has multiple versions, ensure that there is only one installed.`,l,s);else{const t=u.filter((e=>e&&e.version!==i));t.length&&c(`${e} requires direct dependencies exactly matching version ${i}.`,t,o)}}},2529:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Bridge=void 0;const n=r(8245),i=r(801);t.Bridge=class{constructor(e){this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new i.Wbg(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){this.__internal__wasmPromise&&!e||(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:t,type:r,wasm:n}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=n,this.__internal__wasmError=t,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const t=this.getObject(e);return this.dropObject(e),t}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const t=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[t],this.__internal__heap[t]=e,t}getInt32(){return null!==this.__internal__cachegetInt32&&this.__internal__cachegetInt32.buffer===this.__internal__wasm.memory.buffer||(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return null!==this.__internal__cachegetUint8&&this.__internal__cachegetUint8.buffer===this.__internal__wasm.memory.buffer||(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,t){return this.getUint8().subarray(e/1,e/1+t)}getString(e,t){return(0,n.u8aToString)(this.getU8a(e,t))}allocU8a(e){const t=this.__internal__wasm.__wbindgen_malloc(1*e.length);return this.getUint8().set(e,t/1),[t,e.length]}allocString(e){return this.allocU8a((0,n.stringToU8a)(e))}resultU8a(){const e=this.getInt32()[2],t=this.getInt32()[3],r=this.getU8a(e,t).slice();return this.__internal__wasm.__wbindgen_free(e,1*t),r}resultString(){return(0,n.u8aToString)(this.resultU8a())}}},1182:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);n.__exportStar(r(2529),t),n.__exportStar(r(1164),t)},4735:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=[]},9386:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655),i=r(8245),o=n.__importDefault(r(4735)),s=r(491);(0,i.detectPackage)(s.packageInfo,null,o.default)},3426:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);r(9386),n.__exportStar(r(1182),t)},1164:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createWasmFn=void 0,t.createWasmFn=function(e,t,r){return async n=>{const i={error:null,type:"none",wasm:null};try{if(!t||!t.length)throw new Error("No WebAssembly provided for initialization");if("object"!=typeof WebAssembly||"function"!=typeof WebAssembly.instantiate)throw new Error("WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:n});i.wasm=e.instance.exports,i.type="wasm"}catch(t){"function"==typeof r?(i.wasm=r(n),i.type="asm"):(i.error=`FATAL: Unable to initialize @polkadot/wasm-${e}:: ${t.message}`,console.error(i.error))}return i}}},491:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-bridge",path:"/",type:"cjs",version:"7.1.2"}},801:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Wbg=void 0;const n={getRandomValues:r(2714).getRandomValues},i={crypto:n};t.Wbg=class{constructor(e){this.abort=()=>{throw new Error("abort")},this.__wbindgen_is_undefined=e=>void 0===this.__internal__bridge.getObject(e),this.__wbindgen_throw=(e,t)=>{throw new Error(this.__internal__bridge.getString(e,t))},this.__wbg_self_1b7a39e3a92c949c=()=>this.__internal__bridge.addObject(i),this.__wbg_require_604837428532a733=(e,t)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(e,t)}`)},this.__wbg_crypto_968f1772287e2df0=e=>this.__internal__bridge.addObject(n),this.__wbg_getRandomValues_a3d34b4fee3c2869=e=>this.__internal__bridge.addObject(n.getRandomValues),this.__wbg_getRandomValues_f5e14ab7ac8e995d=(e,t,r)=>{n.getRandomValues(this.__internal__bridge.getU8a(t,r))},this.__wbg_randomFillSync_d5bd2d655fdf256a=(e,t,r)=>{throw new Error("randomFillsync is not available")},this.__wbindgen_object_drop_ref=e=>{this.__internal__bridge.takeObject(e)},this.__internal__bridge=e}}},8284:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto-asmjs",path:"/",type:"cjs",version:"7.1.2"}},9940:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto-init",path:"/",type:"cjs",version:"7.1.2"}},9545:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createWasm=t.packageInfo=void 0;const n=r(3426),i=r(3156);var o=r(9940);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}}),t.createWasm=(0,n.createWasmFn)("crypto",i.wasmBytes,null)},4720:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wasmBytes=t.packageInfo=void 0;const n=r(2599),i=r(3602);var o=r(8560);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}}),t.wasmBytes=(0,n.unzlibSync)((0,n.base64Decode)(i.bytes,new Uint8Array(i.lenIn)),new Uint8Array(i.lenOut))},1218:e=>{e.exports={bytes:"",lenIn:171005,lenOut:339466}},3602:(e,t,r)=>{const n=r(1218);e.exports=n},4584:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=[]},4739:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655),i=r(8245),o=n.__importDefault(r(4584)),s=r(8560);(0,i.detectPackage)(s.packageInfo,null,o.default)},3156:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);r(4739),n.__exportStar(r(4720),t)},8560:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto-wasm",path:"/",type:"cjs",version:"7.1.2"}},1144:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.waitReady=t.isReady=t.twox=t.sha512=t.sha256=t.scrypt=t.pbkdf2=t.keccak512=t.keccak256=t.hmacSha512=t.hmacSha256=t.blake2b=t.vrfVerify=t.vrfSign=t.sr25519Agree=t.sr25519Verify=t.sr25519Sign=t.sr25519KeypairFromSeed=t.sr25519DerivePublicSoft=t.sr25519DeriveKeypairSoft=t.sr25519DeriveKeypairHard=t.secp256k1Sign=t.secp256k1Recover=t.secp256k1Expand=t.secp256k1Compress=t.secp256k1FromSeed=t.ed25519Verify=t.ed25519Sign=t.ed25519KeypairFromSeed=t.bip39Validate=t.bip39ToSeed=t.bip39ToMiniSecret=t.bip39ToEntropy=t.bip39Generate=t.bridge=t.packageInfo=void 0;const n=r(3193);Object.defineProperty(t,"bridge",{enumerable:!0,get:function(){return n.bridge}});var i=r(5294);function o(e){return(...t)=>{if(!n.bridge.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return e(n.bridge.wasm,...t)}}Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}}),t.bip39Generate=o(((e,t)=>(e.ext_bip39_generate(8,t),n.bridge.resultString()))),t.bip39ToEntropy=o(((e,t)=>(e.ext_bip39_to_entropy(8,...n.bridge.allocString(t)),n.bridge.resultU8a()))),t.bip39ToMiniSecret=o(((e,t,r)=>(e.ext_bip39_to_mini_secret(8,...n.bridge.allocString(t),...n.bridge.allocString(r)),n.bridge.resultU8a()))),t.bip39ToSeed=o(((e,t,r)=>(e.ext_bip39_to_seed(8,...n.bridge.allocString(t),...n.bridge.allocString(r)),n.bridge.resultU8a()))),t.bip39Validate=o(((e,t)=>0!==e.ext_bip39_validate(...n.bridge.allocString(t)))),t.ed25519KeypairFromSeed=o(((e,t)=>(e.ext_ed_from_seed(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.ed25519Sign=o(((e,t,r,i)=>(e.ext_ed_sign(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),...n.bridge.allocU8a(i)),n.bridge.resultU8a()))),t.ed25519Verify=o(((e,t,r,i)=>0!==e.ext_ed_verify(...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),...n.bridge.allocU8a(i)))),t.secp256k1FromSeed=o(((e,t)=>(e.ext_secp_from_seed(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.secp256k1Compress=o(((e,t)=>(e.ext_secp_pub_compress(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.secp256k1Expand=o(((e,t)=>(e.ext_secp_pub_expand(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.secp256k1Recover=o(((e,t,r,i)=>(e.ext_secp_recover(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),i),n.bridge.resultU8a()))),t.secp256k1Sign=o(((e,t,r)=>(e.ext_secp_sign(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.sr25519DeriveKeypairHard=o(((e,t,r)=>(e.ext_sr_derive_keypair_hard(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.sr25519DeriveKeypairSoft=o(((e,t,r)=>(e.ext_sr_derive_keypair_soft(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.sr25519DerivePublicSoft=o(((e,t,r)=>(e.ext_sr_derive_public_soft(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.sr25519KeypairFromSeed=o(((e,t)=>(e.ext_sr_from_seed(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.sr25519Sign=o(((e,t,r,i)=>(e.ext_sr_sign(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),...n.bridge.allocU8a(i)),n.bridge.resultU8a()))),t.sr25519Verify=o(((e,t,r,i)=>0!==e.ext_sr_verify(...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),...n.bridge.allocU8a(i)))),t.sr25519Agree=o(((e,t,r)=>(e.ext_sr_agree(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.vrfSign=o(((e,t,r,i,o)=>(e.ext_vrf_sign(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),...n.bridge.allocU8a(i),...n.bridge.allocU8a(o)),n.bridge.resultU8a()))),t.vrfVerify=o(((e,t,r,i,o,s)=>0!==e.ext_vrf_verify(...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),...n.bridge.allocU8a(i),...n.bridge.allocU8a(o),...n.bridge.allocU8a(s)))),t.blake2b=o(((e,t,r,i)=>(e.ext_blake2b(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),i),n.bridge.resultU8a()))),t.hmacSha256=o(((e,t,r)=>(e.ext_hmac_sha256(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.hmacSha512=o(((e,t,r)=>(e.ext_hmac_sha512(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r)),n.bridge.resultU8a()))),t.keccak256=o(((e,t)=>(e.ext_keccak256(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.keccak512=o(((e,t)=>(e.ext_keccak512(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.pbkdf2=o(((e,t,r,i)=>(e.ext_pbkdf2(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),i),n.bridge.resultU8a()))),t.scrypt=o(((e,t,r,i,o,s)=>(e.ext_scrypt(8,...n.bridge.allocU8a(t),...n.bridge.allocU8a(r),i,o,s),n.bridge.resultU8a()))),t.sha256=o(((e,t)=>(e.ext_sha256(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.sha512=o(((e,t)=>(e.ext_sha512(8,...n.bridge.allocU8a(t)),n.bridge.resultU8a()))),t.twox=o(((e,t,r)=>(e.ext_twox(8,...n.bridge.allocU8a(t),r),n.bridge.resultU8a()))),t.isReady=function(){return!!n.bridge.wasm},t.waitReady=async function(){try{return!!await(0,n.initBridge)()}catch{return!1}}},2500:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(491),i=r(8284),o=r(9940),s=r(8560),a=r(552);t.default=[n.packageInfo,i.packageInfo,o.packageInfo,s.packageInfo,a.packageInfo]},8553:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655),i=r(8245),o=n.__importDefault(r(2500)),s=r(5294);(0,i.detectPackage)(s.packageInfo,null,o.default)},8928:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);r(8553),n.__exportStar(r(1144),t)},3193:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initBridge=t.bridge=void 0;const n=r(3426),i=r(9545);t.bridge=new n.Bridge(i.createWasm),t.initBridge=async function(e){return t.bridge.init(e)}},5294:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto",path:"/",type:"cjs",version:"7.1.2"}},3396:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Decode=void 0;const r=new Array(256);for(let e=0;e<64;e++)r["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(e)]=e;t.base64Decode=function(e,t){const n=t.length;let i=0,o=0,s=-1;for(let a=0;s<n;a++)i=i<<6|r[e.charCodeAt(a)],(o+=6)>=8&&(t[++s]=i>>>(o-=8)&255);return t}},2128:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=t.unzlibSync=t.base64Decode=void 0;var n=r(3396);Object.defineProperty(t,"base64Decode",{enumerable:!0,get:function(){return n.base64Decode}});var i=r(3759);Object.defineProperty(t,"unzlibSync",{enumerable:!0,get:function(){return i.unzlibSync}});var o=r(552);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}})},9254:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(552);t.default=[n.packageInfo]},2037:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655),i=r(8245),o=n.__importDefault(r(9254)),s=r(552);(0,i.detectPackage)(s.packageInfo,null,o.default)},3759:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unzlibSync=void 0;const r=Uint8Array,n=Uint16Array,i=Uint32Array,o=new r([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new r([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),a=new r([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),c=(e,t)=>{const r=new n(31);for(let n=0;n<31;++n)r[n]=t+=1<<e[n-1];const o=new i(r[30]);for(let e=1;e<30;++e)for(let t=r[e];t<r[e+1];++t)o[t]=t-r[e]<<5|e;return[r,o]},[d,u]=c(s,2);d[28]=258,u[258]=28;const[l]=c(a,0),f=new n(32768);for(let e=0;e<32768;++e){let t=(43690&e)>>>1|(21845&e)<<1;t=(52428&t)>>>2|(13107&t)<<2,t=(61680&t)>>>4|(3855&t)<<4,f[e]=((65280&t)>>>8|(255&t)<<8)>>>1}const h=(e,t,r)=>{const i=e.length;let o=0;const s=new n(t);for(;o<i;++o)++s[e[o]-1];const a=new n(t);for(o=0;o<t;++o)a[o]=a[o-1]+s[o-1]<<1;let c;if(r){c=new n(1<<t);const r=15-t;for(o=0;o<i;++o)if(e[o]){const n=o<<4|e[o],i=t-e[o];let s=a[e[o]-1]++<<i;for(const e=s|(1<<i)-1;s<=e;++s)c[f[s]>>>r]=n}}else for(c=new n(i),o=0;o<i;++o)c[o]=f[a[e[o]-1]++]>>>15-e[o];return c},p=new r(288);for(let e=0;e<144;++e)p[e]=8;for(let e=144;e<256;++e)p[e]=9;for(let e=256;e<280;++e)p[e]=7;for(let e=280;e<288;++e)p[e]=8;const b=new r(32);for(let e=0;e<32;++e)b[e]=5;const m=h(p,9,1),y=h(b,5,1),v=(e,t,r)=>{const n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},w=(e,t)=>{const r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},g=e=>{let t=e[0];for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t};t.unzlibSync=function(e,t){return((e,t,c)=>{const u=!c||c.i;c||(c={});const f=e.length,p=!t||!u;t||(t=new r(3*f));const b=e=>{let n=t.length;if(e>n){const i=new r(Math.max(n<<1,e));i.set(t),t=i}};let x=c.f||0,P=c.p||0,O=c.b||0,k=c.l,j=c.d,M=c.m,N=c.n;if(x&&!k)return t;const T=f<<3;do{if(!k){c.f=x=v(e,P,1);const n=v(e,P+1,3);if(P+=3,!n){const r=((E=P)>>>3)+(7&E&&1)+4,n=e[r-4]|e[r-3]<<8,i=r+n;if(i>f){if(u)throw"unexpected EOF";break}p&&b(O+n),t.set(e.subarray(r,i),O),c.b=O+=n,c.p=P=i<<3;continue}if(1==n)k=m,j=y,M=9,N=5;else{if(2!=n)throw"invalid block type";{const t=v(e,P,31)+257,n=v(e,P+10,15)+4,i=t+v(e,P+5,31)+1;P+=14;const s=new r(i),a=new r(19);for(let t=0;t<n;++t)a[o[t]]=v(e,P+3*t,7);P+=3*n;const c=g(a),d=(1<<c)-1;if(!u&&P+i*(c+7)>T)break;const l=h(a,c,1);for(let t=0;t<i;){const r=l[v(e,P,d)];P+=15&r;const n=r>>>4;if(n<16)s[t++]=n;else{let r=0,i=0;for(16==n?(i=3+v(e,P,3),P+=2,r=s[t-1]):17==n?(i=3+v(e,P,7),P+=3):18==n&&(i=11+v(e,P,127),P+=7);i--;)s[t++]=r}}const f=s.subarray(0,t),p=s.subarray(t);M=g(f),N=g(p),k=h(f,M,1),j=h(p,N,1)}}if(P>T)throw"unexpected EOF"}p&&b(O+131072);const n=(1<<M)-1,i=(1<<N)-1,B=M+N+18;for(;u||P+B<T;){const r=k[w(e,P)&n],o=r>>>4;if(P+=15&r,P>T)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(o<256)t[O++]=o;else{if(256==o){k=void 0;break}{let r=o-254;if(o>264){const t=o-257,n=s[t];r=v(e,P,(1<<n)-1)+d[t],P+=n}const n=j[w(e,P)&i],c=n>>>4;if(!n)throw"invalid distance";P+=15&n;let u=l[c];if(c>3){const t=a[c];u+=w(e,P)&(1<<t)-1,P+=t}if(P>T)throw"unexpected EOF";p&&b(O+131072);const f=O+r;for(;O<f;O+=4)t[O]=t[O-u],t[O+1]=t[O+1-u],t[O+2]=t[O+2-u],t[O+3]=t[O+3-u];O=f}}}c.l=k,c.p=P,c.b=O,k&&(x=1,c.m=M,c.d=j,c.n=N)}while(!x);var E;return O==t.length?t:((e,t,o)=>{(null==t||t<0)&&(t=0),(null==o||o>e.length)&&(o=e.length);const s=new(e instanceof n?n:e instanceof i?i:r)(o-t);return s.set(e.subarray(t,o)),s})(t,0,O)})(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(e),e.subarray(2,-4)),t)}},2599:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(655);r(2037),n.__exportStar(r(2128),t)},552:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-util",path:"/",type:"cjs",version:"7.1.2"}},3059:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BigInt=t.packageInfo=void 0;const n=r(4793);var i=r(5853);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}}),t.BigInt=(0,n.extractGlobal)("BigInt",(function(){return Number.NaN}))},5853:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-bigint",path:"/",type:"cjs",version:"12.1.2"}},4375:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(3059);(0,r(4793).exposeGlobal)("BigInt",n.BigInt)},4793:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exposeGlobal=t.extractGlobal=t.xglobal=t.packageInfo=void 0;var n=r(8143);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return n.packageInfo}}),t.xglobal="undefined"!=typeof globalThis?globalThis:void 0!==r.g?r.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this"),t.extractGlobal=function(e,r){return void 0===t.xglobal[e]?r:t.xglobal[e]},t.exposeGlobal=function(e,r){void 0===t.xglobal[e]&&(t.xglobal[e]=r)}},8143:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-global",path:"/",type:"cjs",version:"12.1.2"}},2714:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValues=t.crypto=t.packageInfo=void 0;const n=r(4793);var i=r(4442);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}}),t.crypto=n.xglobal.crypto,t.getRandomValues=function(e){return t.crypto.getRandomValues(e)}},4442:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-randomvalues",path:"/",type:"cjs",version:"12.1.2"}},9081:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=t.packageInfo=void 0;const n=r(4793),i=r(398);var o=r(370);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}}),t.TextDecoder=(0,n.extractGlobal)("TextDecoder",i.TextDecoder)},398:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=void 0,t.TextDecoder=class{constructor(e){}decode(e){let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}}},370:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-textdecoder",path:"/",type:"cjs",version:"12.1.2"}},7933:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=t.packageInfo=void 0;const n=r(4793),i=r(3624);var o=r(413);Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}}),t.TextEncoder=(0,n.extractGlobal)("TextEncoder",i.TextEncoder)},3624:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=void 0,t.TextEncoder=class{encode(e){const t=e.length,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);return r}}},413:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-textencoder",path:"/",type:"cjs",version:"12.1.2"}},2314:e=>{e.exports=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara-network.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:4006,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.webb.tools/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"}]}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";const e="0123456789abcdef",t=new Uint8Array(256),n=new Uint8Array(65536);for(let r=0;r<16;r++)t[0|e[r].charCodeAt(0)]=0|r,r>9&&(t[0|e[r].toUpperCase().charCodeAt(0)]=0|r);for(let e=0;e<256;e++){const r=e<<8;for(let i=0;i<256;i++)n[r|i]=t[e]<<4|t[i]}const i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this");function o(e,t){return void 0===i[e]?t:i[e]}function s(){return Number.NaN}const a=o("BigInt",s),c="function"==typeof a&&"function"==typeof a.asIntN,d="function"==typeof i.Buffer&&"function"==typeof i.Buffer.isBuffer;i.process;const u=/^0x[\da-fA-F]+$/;function l(e,t=-1,r){return"string"==typeof e&&("0x"===e||u.test(e))&&(-1===t?r||e.length%2==0:e.length===2+Math.ceil(t/4))}function f(e){return(e&&e.constructor)===Uint8Array||e instanceof Uint8Array}class h{encode(e){const t=e.length,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);return r}}const p=new(o("TextEncoder",h));function b(e){return e?p.encode(e.toString()):new Uint8Array}function m(e){return f(e)?function(e){return d&&!!e&&function(e){return"function"==typeof e}(e.readDoubleLE)&&i.Buffer.isBuffer(e)}(e)?new Uint8Array(e):e:l(e)?function(e,t=-1){if(!e)return new Uint8Array;let r=e.startsWith("0x")?2:0;const i=Math.ceil((e.length-r)/2),o=Math.ceil(-1===t?i:t/8),s=new Uint8Array(o);for(let t=o>i?o-i:0;t<o;t++,r+=2)s[t]=n[e.charCodeAt(r)<<8|e.charCodeAt(r+1)];return s}(e):Array.isArray(e)?new Uint8Array(e):b(e)}function y(...e){const t=e.length,r=new Array(t);let n=0;for(let i=0;i<t;i++)r[i]=m(e[i]),n+=r[i].length;return function(e,t=0){let r=0;if(!t)for(let r=0;r<e.length;r++)t+=e[r].length;const n=new Uint8Array(t);for(let t=0;t<e.length;t++)n.set(e[t],r),r+=e[t].length;return n}(r,n)}function v(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function w(...e){const t=(e,t)=>r=>e(t(r));return{encode:Array.from(e).reverse().reduce(((e,r)=>e?t(e,r.encode):r.encode),void 0),decode:e.reduce(((e,r)=>e?t(e,r.decode):r.decode),void 0)}}function g(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(v(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const r=e.indexOf(t);if(-1===r)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return r}))}}}function x(e=""){if("string"!=typeof e)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function P(e,t="="){if(v(e),"string"!=typeof t)throw new Error("padding chr should be string");return{encode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;r.length*e%8;)r.push(t);return r},decode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(let e of r)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let n=r.length;if(n*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===t;n--)if(!((n-1)*e%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function O(e){if("function"!=typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function k(e,t,r){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(r<2)throw new Error(`convertRadix: wrong to=${r}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let n=0;const i=[],o=Array.from(e);for(o.forEach((e=>{if(v(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,s=!0;for(let i=n;i<o.length;i++){const a=o[i],c=t*e+a;if(!Number.isSafeInteger(c)||t*e/t!==e||c-a!=t*e)throw new Error("convertRadix: carry overflow");if(e=c%r,o[i]=Math.floor(c/r),!Number.isSafeInteger(o[i])||o[i]*r+e!==c)throw new Error("convertRadix: carry overflow");s&&(o[i]?s=!1:n=i)}if(i.push(e),s)break}for(let t=0;t<e.length-1&&0===e[t];t++)i.push(0);return i.reverse()}const j=(e,t)=>t?j(t,e%t):e,M=(e,t)=>e+(t-j(e,t));function N(e,t,r,n){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(r<=0||r>32)throw new Error(`convertRadix2: wrong to=${r}`);if(M(t,r)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${r} carryBits=${M(t,r)}`);let i=0,o=0;const s=2**r-1,a=[];for(const n of e){if(v(n),n>=2**t)throw new Error(`convertRadix2: invalid data word=${n} from=${t}`);if(i=i<<t|n,o+t>32)throw new Error(`convertRadix2: carry overflow pos=${o} from=${t}`);for(o+=t;o>=r;o-=r)a.push((i>>o-r&s)>>>0);i&=2**o-1}if(i=i<<r-o&s,!n&&o>=t)throw new Error("Excess padding");if(!n&&i)throw new Error(`Non-zero padding: ${i}`);return n&&o>0&&a.push(i>>>0),a}function T(e,t=!1){if(v(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(M(8,e)>32||M(e,8)>32)throw new Error("radix2: carry overflow");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return N(Array.from(r),8,e,!t)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(N(r,e,8,t))}}}function E(e){if("function"!=typeof e)throw new Error("unsafeWrapper fn should be function");return function(...t){try{return e.apply(null,t)}catch(e){}}}const B=w(T(4),g("0123456789ABCDEF"),x("")),z=w(T(5),g("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),P(5),x("")),A=(w(T(5),g("0123456789ABCDEFGHIJKLMNOPQRSTUV"),P(5),x("")),w(T(5),g("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),x(""),O((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),w(T(6),g("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),P(6),x(""))),L=w(T(6),g("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),P(6),x("")),U=e=>{return w((v(t=58),{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return k(Array.from(e),256,t)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(k(e,t,256))}}),g(e),x(""));var t},S=U("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),H=(U("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),U("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),[0,2,3,5,6,7,9,10,11]),X={encode(e){let t="";for(let r=0;r<e.length;r+=8){const n=e.subarray(r,r+8);t+=S.encode(n).padStart(H[n.length],"1")}return t},decode(e){let t=[];for(let r=0;r<e.length;r+=11){const n=e.slice(r,r+11),i=H.indexOf(n.length),o=S.decode(n);for(let e=0;e<o.length-i;e++)if(0!==o[e])throw new Error("base58xmr: wrong padding");t=t.concat(Array.from(o.slice(o.length-i)))}return Uint8Array.from(t)}},I=w(g("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),x("")),R=[996825010,642813549,513874426,1027748829,705979059];function D(e){const t=e>>25;let r=(33554431&e)<<5;for(let e=0;e<R.length;e++)1==(t>>e&1)&&(r^=R[e]);return r}function F(e,t,r=1){const n=e.length;let i=1;for(let t=0;t<n;t++){const r=e.charCodeAt(t);if(r<33||r>126)throw new Error(`Invalid prefix (${e})`);i=D(i)^r>>5}i=D(i);for(let t=0;t<n;t++)i=D(i)^31&e.charCodeAt(t);for(let e of t)i=D(i)^e;for(let e=0;e<6;e++)i=D(i);return i^=r,I.encode(N([i%2**30],30,5,!1))}function Z(e){const t="bech32"===e?1:734539939,r=T(5),n=r.decode,i=r.encode,o=E(n);function s(e,r=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==r&&e.length>r)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${r})`);const n=e.toLowerCase();if(e!==n&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(e=n).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const o=e.slice(0,i),s=e.slice(i+1);if(s.length<6)throw new Error("Data must be at least 6 characters long");const a=I.decode(s).slice(0,-6),c=F(o,a,t);if(!s.endsWith(c))throw new Error(`Invalid checksum in ${e}: expected "${c}"`);return{prefix:o,words:a}}return{encode:function(e,r,n=90){if("string"!=typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof r);const i=e.length+7+r.length;if(!1!==n&&i>n)throw new TypeError(`Length ${i} exceeds limit ${n}`);return`${e=e.toLowerCase()}1${I.encode(r)}${F(e,r,t)}`},decode:s,decodeToBytes:function(e){const{prefix:t,words:r}=s(e,!1);return{prefix:t,words:r,bytes:n(r)}},decodeUnsafe:E(s),fromWords:n,fromWordsUnsafe:o,toWords:i}}Z("bech32"),Z("bech32m");const V={utf8:{encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},hex:w(T(4),g("0123456789abcdef"),x(""),O((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}))),base16:B,base32:z,base64:A,base64url:L,base58:S,base58xmr:X};function q({coder:e,ipfs:t},r){return(n,i)=>(r(n,i),e.decode(t&&i?n.substring(1):n))}function C({coder:e,ipfs:t}){return(r,n)=>{const i=e.encode(m(r));return t&&n?`${t}${i}`:i}}function G({chars:e,ipfs:t,type:r}){return(n,i)=>{if("string"!=typeof n)throw new Error(`Expected ${r} string input`);if(t&&i&&n[0]!==t)throw new Error(`Expected ipfs-compatible ${r} to start with '${t}'`);for(let t=i?1:0;t<n.length;t++)if(!e.includes(n[t])&&("="!==n[t]||t!==n.length-1&&e.includes(n[t+1])))throw new Error(`Invalid ${r} character "${n[t]}" (0x${n.charCodeAt(t).toString(16)}) at index ${t}`);return!0}}Object.keys(V).join(", ");const W={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:S,ipfs:"z",type:"base58"},Y=q(W,G(W)),K=C(W);function J(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function Q(e,...t){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}const _={number:J,bool:function(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)},bytes:Q,hash:function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");J(e.outputLen),J(e.blockLen)},exists:function(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")},output:function(e,t){Q(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}},$=("object"==typeof globalThis&&"crypto"in globalThis&&globalThis.crypto,e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)));if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error("Non little-endian hardware is not supported");function ee(e){if("string"==typeof e&&(e=function(e){if("string"!=typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));class te{clone(){return this._cloneInto()}}const re=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class ne extends te{constructor(e,t,r={},n,i,o){if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,_.number(e),_.number(t),_.number(n),t<0||t>n)throw new Error("outputLen bigger than keyLen");if(void 0!==r.key&&(r.key.length<1||r.key.length>n))throw new Error(`key must be up 1..${n} byte long or undefined`);if(void 0!==r.salt&&r.salt.length!==i)throw new Error(`salt must be ${i} byte long or undefined`);if(void 0!==r.personalization&&r.personalization.length!==o)throw new Error(`personalization must be ${o} byte long or undefined`);this.buffer32=$(this.buffer=new Uint8Array(e))}update(e){_.exists(this);const{blockLen:t,buffer:r,buffer32:n}=this,i=(e=ee(e)).length;for(let o=0;o<i;){this.pos===t&&(this.compress(n,0,!1),this.pos=0);const s=Math.min(t-this.pos,i-o),a=e.byteOffset+o;if(s!==t||a%4||!(o+s<i))r.set(e.subarray(o,o+s),this.pos),this.pos+=s,this.length+=s,o+=s;else{const r=new Uint32Array(e.buffer,a,Math.floor((i-o)/4));for(let e=0;o+t<i;e+=n.length,o+=t)this.length+=t,this.compress(r,e,!1)}}return this}digestInto(e){_.exists(this),_.output(e,this);const{pos:t,buffer32:r}=this;this.finished=!0,this.buffer.subarray(t).fill(0),this.compress(r,0,!0);const n=$(e);this.get().forEach(((e,t)=>n[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){const{buffer:t,length:r,finished:n,destroyed:i,outputLen:o,pos:s}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=r,e.finished=n,e.destroyed=i,e.outputLen=o,e.buffer.set(t),e.pos=s,e}}const ie=BigInt(2**32-1),oe=BigInt(32);function se(e,t=!1){return t?{h:Number(e&ie),l:Number(e>>oe&ie)}:{h:0|Number(e>>oe&ie),l:0|Number(e&ie)}}const ae={fromBig:se,split:function(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let i=0;i<e.length;i++){const{h:o,l:s}=se(e[i],t);[r[i],n[i]]=[o,s]}return[r,n]},toBig:(e,t)=>BigInt(e>>>0)<<oe|BigInt(t>>>0),shrSH:(e,t,r)=>e>>>r,shrSL:(e,t,r)=>e<<32-r|t>>>r,rotrSH:(e,t,r)=>e>>>r|t<<32-r,rotrSL:(e,t,r)=>e<<32-r|t>>>r,rotrBH:(e,t,r)=>e<<64-r|t>>>r-32,rotrBL:(e,t,r)=>e>>>r-32|t<<64-r,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,r)=>e<<r|t>>>32-r,rotlSL:(e,t,r)=>t<<r|e>>>32-r,rotlBH:(e,t,r)=>t<<r-32|e>>>64-r,rotlBL:(e,t,r)=>e<<r-32|t>>>64-r,add:function(e,t,r,n){const i=(t>>>0)+(n>>>0);return{h:e+r+(i/2**32|0)|0,l:0|i}},add3L:(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),add3H:(e,t,r,n)=>t+r+n+(e/2**32|0)|0,add4L:(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),add4H:(e,t,r,n,i)=>t+r+n+i+(e/2**32|0)|0,add5H:(e,t,r,n,i,o)=>t+r+n+i+o+(e/2**32|0)|0,add5L:(e,t,r,n,i)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(i>>>0)},ce=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),de=new Uint32Array(32);function ue(e,t,r,n,i,o){const s=i[o],a=i[o+1];let c=de[2*e],d=de[2*e+1],u=de[2*t],l=de[2*t+1],f=de[2*r],h=de[2*r+1],p=de[2*n],b=de[2*n+1],m=ae.add3L(c,u,s);d=ae.add3H(m,d,l,a),c=0|m,({Dh:b,Dl:p}={Dh:b^d,Dl:p^c}),({Dh:b,Dl:p}={Dh:ae.rotr32H(b,p),Dl:ae.rotr32L(b,p)}),({h,l:f}=ae.add(h,f,b,p)),({Bh:l,Bl:u}={Bh:l^h,Bl:u^f}),({Bh:l,Bl:u}={Bh:ae.rotrSH(l,u,24),Bl:ae.rotrSL(l,u,24)}),de[2*e]=c,de[2*e+1]=d,de[2*t]=u,de[2*t+1]=l,de[2*r]=f,de[2*r+1]=h,de[2*n]=p,de[2*n+1]=b}function le(e,t,r,n,i,o){const s=i[o],a=i[o+1];let c=de[2*e],d=de[2*e+1],u=de[2*t],l=de[2*t+1],f=de[2*r],h=de[2*r+1],p=de[2*n],b=de[2*n+1],m=ae.add3L(c,u,s);d=ae.add3H(m,d,l,a),c=0|m,({Dh:b,Dl:p}={Dh:b^d,Dl:p^c}),({Dh:b,Dl:p}={Dh:ae.rotrSH(b,p,16),Dl:ae.rotrSL(b,p,16)}),({h,l:f}=ae.add(h,f,b,p)),({Bh:l,Bl:u}={Bh:l^h,Bl:u^f}),({Bh:l,Bl:u}={Bh:ae.rotrBH(l,u,63),Bl:ae.rotrBL(l,u,63)}),de[2*e]=c,de[2*e+1]=d,de[2*t]=u,de[2*t+1]=l,de[2*r]=f,de[2*r+1]=h,de[2*n]=p,de[2*n+1]=b}class fe extends ne{constructor(e={}){super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|ce[0],this.v0h=0|ce[1],this.v1l=0|ce[2],this.v1h=0|ce[3],this.v2l=0|ce[4],this.v2h=0|ce[5],this.v3l=0|ce[6],this.v3h=0|ce[7],this.v4l=0|ce[8],this.v4h=0|ce[9],this.v5l=0|ce[10],this.v5h=0|ce[11],this.v6l=0|ce[12],this.v6h=0|ce[13],this.v7l=0|ce[14],this.v7h=0|ce[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=$(ee(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=$(ee(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set(ee(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:r,v1h:n,v2l:i,v2h:o,v3l:s,v3h:a,v4l:c,v4h:d,v5l:u,v5h:l,v6l:f,v6h:h,v7l:p,v7h:b}=this;return[e,t,r,n,i,o,s,a,c,d,u,l,f,h,p,b]}set(e,t,r,n,i,o,s,a,c,d,u,l,f,h,p,b){this.v0l=0|e,this.v0h=0|t,this.v1l=0|r,this.v1h=0|n,this.v2l=0|i,this.v2h=0|o,this.v3l=0|s,this.v3h=0|a,this.v4l=0|c,this.v4h=0|d,this.v5l=0|u,this.v5h=0|l,this.v6l=0|f,this.v6h=0|h,this.v7l=0|p,this.v7h=0|b}compress(e,t,r){this.get().forEach(((e,t)=>de[t]=e)),de.set(ce,16);let{h:n,l:i}=ae.fromBig(BigInt(this.length));de[24]=ce[8]^i,de[25]=ce[9]^n,r&&(de[28]=~de[28],de[29]=~de[29]);let o=0;const s=re;for(let r=0;r<12;r++)ue(0,4,8,12,e,t+2*s[o++]),le(0,4,8,12,e,t+2*s[o++]),ue(1,5,9,13,e,t+2*s[o++]),le(1,5,9,13,e,t+2*s[o++]),ue(2,6,10,14,e,t+2*s[o++]),le(2,6,10,14,e,t+2*s[o++]),ue(3,7,11,15,e,t+2*s[o++]),le(3,7,11,15,e,t+2*s[o++]),ue(0,5,10,15,e,t+2*s[o++]),le(0,5,10,15,e,t+2*s[o++]),ue(1,6,11,12,e,t+2*s[o++]),le(1,6,11,12,e,t+2*s[o++]),ue(2,7,8,13,e,t+2*s[o++]),le(2,7,8,13,e,t+2*s[o++]),ue(3,4,9,14,e,t+2*s[o++]),le(3,4,9,14,e,t+2*s[o++]);this.v0l^=de[0]^de[16],this.v0h^=de[1]^de[17],this.v1l^=de[2]^de[18],this.v1h^=de[3]^de[19],this.v2l^=de[4]^de[20],this.v2h^=de[5]^de[21],this.v3l^=de[6]^de[22],this.v3h^=de[7]^de[23],this.v4l^=de[8]^de[24],this.v4h^=de[9]^de[25],this.v5l^=de[10]^de[26],this.v5h^=de[11]^de[27],this.v6l^=de[12]^de[28],this.v6h^=de[13]^de[29],this.v7l^=de[14]^de[30],this.v7h^=de[15]^de[31],de.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const he=function(e){const t=(t,r)=>e(r).update(ee(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t}((e=>new fe(e)));class pe{constructor(e){}decode(e){let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}}const be=new(o("TextDecoder",pe))("utf-8");function me(e){return e?be.decode(e):""}const ye=i.crypto,ve={getRandomValues:function(e){return ye.getRandomValues(e)}},we={crypto:ve};class ge{constructor(e){this.abort=()=>{throw new Error("abort")},this.__wbindgen_is_undefined=e=>void 0===this.__internal__bridge.getObject(e),this.__wbindgen_throw=(e,t)=>{throw new Error(this.__internal__bridge.getString(e,t))},this.__wbg_self_1b7a39e3a92c949c=()=>this.__internal__bridge.addObject(we),this.__wbg_require_604837428532a733=(e,t)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(e,t)}`)},this.__wbg_crypto_968f1772287e2df0=e=>this.__internal__bridge.addObject(ve),this.__wbg_getRandomValues_a3d34b4fee3c2869=e=>this.__internal__bridge.addObject(ve.getRandomValues),this.__wbg_getRandomValues_f5e14ab7ac8e995d=(e,t,r)=>{ve.getRandomValues(this.__internal__bridge.getU8a(t,r))},this.__wbg_randomFillSync_d5bd2d655fdf256a=(e,t,r)=>{throw new Error("randomFillsync is not available")},this.__wbindgen_object_drop_ref=e=>{this.__internal__bridge.takeObject(e)},this.__internal__bridge=e}}function xe(e,t,r){return async n=>{const i={error:null,type:"none",wasm:null};try{if(!t||!t.length)throw new Error("No WebAssembly provided for initialization");if("object"!=typeof WebAssembly||"function"!=typeof WebAssembly.instantiate)throw new Error("WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:n});i.wasm=e.instance.exports,i.type="wasm"}catch(t){"function"==typeof r?(i.wasm=r(n),i.type="asm"):(i.error=`FATAL: Unable to initialize @polkadot/wasm-${e}:: ${t.message}`,console.error(i.error))}return i}}const Pe=Uint8Array,Oe=Uint16Array,ke=Uint32Array,je=new Pe([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Me=new Pe([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ne=new Pe([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Te=(e,t)=>{const r=new Oe(31);for(let n=0;n<31;++n)r[n]=t+=1<<e[n-1];const n=new ke(r[30]);for(let e=1;e<30;++e)for(let t=r[e];t<r[e+1];++t)n[t]=t-r[e]<<5|e;return[r,n]},[Ee,Be]=Te(Me,2);Ee[28]=258,Be[258]=28;const[ze]=Te(Ne,0),Ae=new Oe(32768);for(let e=0;e<32768;++e){let t=(43690&e)>>>1|(21845&e)<<1;t=(52428&t)>>>2|(13107&t)<<2,t=(61680&t)>>>4|(3855&t)<<4,Ae[e]=((65280&t)>>>8|(255&t)<<8)>>>1}const Le=(e,t,r)=>{const n=e.length;let i=0;const o=new Oe(t);for(;i<n;++i)++o[e[i]-1];const s=new Oe(t);for(i=0;i<t;++i)s[i]=s[i-1]+o[i-1]<<1;let a;if(r){a=new Oe(1<<t);const r=15-t;for(i=0;i<n;++i)if(e[i]){const n=i<<4|e[i],o=t-e[i];let c=s[e[i]-1]++<<o;for(const e=c|(1<<o)-1;c<=e;++c)a[Ae[c]>>>r]=n}}else for(a=new Oe(n),i=0;i<n;++i)a[i]=Ae[s[e[i]-1]++]>>>15-e[i];return a},Ue=new Pe(288);for(let e=0;e<144;++e)Ue[e]=8;for(let e=144;e<256;++e)Ue[e]=9;for(let e=256;e<280;++e)Ue[e]=7;for(let e=280;e<288;++e)Ue[e]=8;const Se=new Pe(32);for(let e=0;e<32;++e)Se[e]=5;const He=Le(Ue,9,1),Xe=Le(Se,5,1),Ie=(e,t,r)=>{const n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},Re=(e,t)=>{const r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},De=e=>{let t=e[0];for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t};function Fe(e,t){return((e,t,r)=>{const n=!r||r.i;r||(r={});const i=e.length,o=!t||!n;t||(t=new Pe(3*i));const s=e=>{let r=t.length;if(e>r){const n=new Pe(Math.max(r<<1,e));n.set(t),t=n}};let a=r.f||0,c=r.p||0,d=r.b||0,u=r.l,l=r.d,f=r.m,h=r.n;if(a&&!u)return t;const p=i<<3;do{if(!u){r.f=a=Ie(e,c,1);const m=Ie(e,c+1,3);if(c+=3,!m){const a=((b=c)>>>3)+(7&b&&1)+4,u=e[a-4]|e[a-3]<<8,l=a+u;if(l>i){if(n)throw"unexpected EOF";break}o&&s(d+u),t.set(e.subarray(a,l),d),r.b=d+=u,r.p=c=l<<3;continue}if(1==m)u=He,l=Xe,f=9,h=5;else{if(2!=m)throw"invalid block type";{const t=Ie(e,c,31)+257,r=Ie(e,c+10,15)+4,i=t+Ie(e,c+5,31)+1;c+=14;const o=new Pe(i),s=new Pe(19);for(let t=0;t<r;++t)s[je[t]]=Ie(e,c+3*t,7);c+=3*r;const a=De(s),d=(1<<a)-1;if(!n&&c+i*(a+7)>p)break;const b=Le(s,a,1);for(let t=0;t<i;){const r=b[Ie(e,c,d)];c+=15&r;const n=r>>>4;if(n<16)o[t++]=n;else{let r=0,i=0;for(16==n?(i=3+Ie(e,c,3),c+=2,r=o[t-1]):17==n?(i=3+Ie(e,c,7),c+=3):18==n&&(i=11+Ie(e,c,127),c+=7);i--;)o[t++]=r}}const m=o.subarray(0,t),y=o.subarray(t);f=De(m),h=De(y),u=Le(m,f,1),l=Le(y,h,1)}}if(c>p)throw"unexpected EOF"}o&&s(d+131072);const m=(1<<f)-1,y=(1<<h)-1,v=f+h+18;for(;n||c+v<p;){const r=u[Re(e,c)&m],n=r>>>4;if(c+=15&r,c>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)t[d++]=n;else{if(256==n){u=void 0;break}{let r=n-254;if(n>264){const t=n-257,i=Me[t];r=Ie(e,c,(1<<i)-1)+Ee[t],c+=i}const i=l[Re(e,c)&y],a=i>>>4;if(!i)throw"invalid distance";c+=15&i;let u=ze[a];if(a>3){const t=Ne[a];u+=Re(e,c)&(1<<t)-1,c+=t}if(c>p)throw"unexpected EOF";o&&s(d+131072);const f=d+r;for(;d<f;d+=4)t[d]=t[d-u],t[d+1]=t[d+1-u],t[d+2]=t[d+2-u],t[d+3]=t[d+3-u];d=f}}}r.l=u,r.p=c,r.b=d,u&&(a=1,r.m=f,r.d=l,r.n=h)}while(!a);var b;return d==t.length?t:((e,t,r)=>{(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);const n=new(e instanceof Oe?Oe:e instanceof ke?ke:Pe)(r-t);return n.set(e.subarray(t,r)),n})(t,0,d)})(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(e),e.subarray(2,-4)),t)}const Ze=new Array(256);for(let e=0;e<64;e++)Ze["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(e)]=e;var Ve=r(1218);const qe=Fe(function(e,t){const r=t.length;let n=0,i=0,o=-1;for(let s=0;o<r;s++)n=n<<6|Ze[e.charCodeAt(s)],(i+=6)>=8&&(t[++o]=n>>>(i-=8)&255);return t}(Ve.bytes,new Uint8Array(Ve.lenIn)),new Uint8Array(Ve.lenOut)),Ce=xe("crypto",qe,null),Ge=new class{constructor(e){this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new ge(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){this.__internal__wasmPromise&&!e||(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:t,type:r,wasm:n}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=n,this.__internal__wasmError=t,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const t=this.getObject(e);return this.dropObject(e),t}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const t=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[t],this.__internal__heap[t]=e,t}getInt32(){return null!==this.__internal__cachegetInt32&&this.__internal__cachegetInt32.buffer===this.__internal__wasm.memory.buffer||(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return null!==this.__internal__cachegetUint8&&this.__internal__cachegetUint8.buffer===this.__internal__wasm.memory.buffer||(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,t){return this.getUint8().subarray(e/1,e/1+t)}getString(e,t){return me(this.getU8a(e,t))}allocU8a(e){const t=this.__internal__wasm.__wbindgen_malloc(1*e.length);return this.getUint8().set(e,t/1),[t,e.length]}allocString(e){return this.allocU8a(b(e))}resultU8a(){const e=this.getInt32()[2],t=this.getInt32()[3],r=this.getU8a(e,t).slice();return this.__internal__wasm.__wbindgen_free(e,1*t),r}resultString(){return me(this.resultU8a())}}(Ce);function We(e){return(...t)=>{if(!Ge.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return e(Ge.wasm,...t)}}const Ye=We(((e,t,r,n)=>(e.ext_blake2b(8,...Ge.allocU8a(t),...Ge.allocU8a(r),n),Ge.resultU8a())));const Ke=b("SS58PRE");function Je(e){return function(e,t=256,r,n){const i=Math.ceil(t/8),o=m(e);return!c||!n&&Ge.wasm?Ye(o,m(r),i):he(o,r?{dkLen:i,key:r}:{dkLen:i})}(y(Ke,e),512)}const Qe={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:354,vtb:694,xxnetwork:1955},_e={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]},$e={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},et={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},tt=[0,2,42],rt=["testnet"],nt=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara-network.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:4006,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.webb.tools/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"}].map((function(e){const t=e.network||"",r=t.replace(/_/g,"-").split("-"),n=e;return n.slip44=Qe[t],n.hasLedgerSupport=!!n.slip44,n.genesisHash=_e[t]||[],n.icon=$e[t]||"substrate",n.isTestnet=!!et[t]||rt.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,n})).filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){const r=tt.includes(e.prefix);return r===tt.includes(t.prefix)?r?0:e.displayName.localeCompare(t.displayName):r?-1:1})),it=(nt.filter((function({genesisHash:e,prefix:t}){return!!e.length||42===t})),{allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:nt.map((({prefix:e})=>e)),prefix:42});function ot(e,t,r=-1){if(!e)throw new Error("Invalid empty address passed");if(f(e)||l(e))return m(e);try{const n=Y(e);if(!it.allowedEncodedLengths.includes(n.length))throw new Error("Invalid decoded address length");const[i,o,s,a]=function(e){const t=64&e[0]?2:1,r=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,n=[34+t,35+t].includes(e.length),i=e.length-(n?2:1),o=Je(e.subarray(0,i));return[0==(128&e[0])&&![46,47].includes(e[0])&&(n?e[e.length-2]===o[0]&&e[e.length-1]===o[1]:e[e.length-1]===o[0]),i,t,r]}(n);if(!i&&!t)throw new Error("Invalid decoded address checksum");if(-1!==r&&r!==a)throw new Error(`Expected ss58Format ${r}, received ${a}`);return n.slice(s,o)}catch(t){throw new Error(`Decoding ${e}: ${t.message}`)}}function st(e,t=it.prefix){const r=ot(e);if(t<0||t>16383||[46,47].includes(t))throw new Error("Out of range ss58Format specified");if(!it.allowedDecodedLengths.includes(r.length))throw new Error(`Expected a valid key to convert, with length ${it.allowedDecodedLengths.join(", ")}`);const n=y(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],r);return K(y(n,Je(n).subarray(0,[32,33].includes(r.length)?2:1)))}const at=window;at.injectedWeb3=at.injectedWeb3||{};let ct=ut(),dt=null;function ut(){return 0!==Object.values(at.injectedWeb3).filter((({connect:e,enable:t})=>!(!e&&!t))).length}function lt(e){throw new Error(`${e}: web3Enable(originName) needs to be called before ${e}`)}function ft(e,t=[]){if(!e)throw new Error("You must pass a name for your app to the web3Enable function");const r=t.length?Promise.all(t.map((e=>e().catch((()=>!1))))):Promise.resolve([!0]);var n;return n=()=>r.then((()=>function(e){return Promise.all(Object.entries(at.injectedWeb3).map((([t,{connect:r,enable:n,version:i}])=>Promise.resolve().then((()=>r?r(e):n?n(e).then((e=>function(e,...t){for(let r=0;r<t.length;r++){const n=t[r];if(n)if("function"==typeof n.entries)for(const[t,r]of n.entries())e[t]=r;else Object.assign(e,n)}return e}({name:t,version:i||"unknown"},e))):Promise.reject(new Error("No connect(..) or enable(...) hook found")))).catch((({message:e})=>{console.error(`Error initializing ${t}: ${e}`)}))))).then((e=>e.filter((e=>!!e))))}(e).then((e=>e.map((e=>(e.accounts.subscribe||(e.accounts.subscribe=t=>(e.accounts.get().then(t).catch(console.error),()=>{})),e))))).catch((()=>[])).then((e=>{const t=e.map((({name:e,version:t})=>`${e}/${t}`));return ct=ut(),console.info(`web3Enable: Enabled ${e.length} extension${1!==e.length?"s":""}: ${t.join(", ")}`),e})))),dt=new Promise((e=>{"complete"===document.readyState?e(n()):window.addEventListener("load",(()=>e(n())))})),dt}async function ht({accountType:e,extensions:t,genesisHash:r,ss58Format:n}={}){const i=[],o=await async function(e,t){return dt?(await dt).filter((({name:e})=>!t||t.includes(e))):lt(e)}("web3Accounts",t),s=await Promise.all(o.map((async({accounts:t,name:i})=>{try{return function(e,t,r){return t.map((({address:t,genesisHash:n,name:i,type:o})=>({address:42===t.length?t:st(ot(t),r),meta:{genesisHash:n,name:i,source:e},type:o})))}(i,function(e,t,r){return e.filter((e=>(!e.type||!r||r.includes(e.type))&&(!e.genesisHash||!t||e.genesisHash===t)))}(await t.get(),r,e),n)}catch{return[]}})));return s.forEach((e=>{i.push(...e)})),console.info(`web3Accounts: Found ${i.length} address${1!==i.length?"es":""}`),i}const pt=new Array(256),bt=new Array(65536);for(let e=0;e<256;e++)pt[e]=e.toString(16).padStart(2,"0");for(let e=0;e<256;e++){const t=e<<8;for(let r=0;r<256;r++)bt[t|r]=pt[e]+pt[r]}function mt(e,t){const r=e.length%2|0,n=e.length-r|0;for(let r=0;r<n;r+=2)t+=bt[e[r]<<8|e[r+1]];return r&&(t+=pt[0|e[n]]),t}const{cryptoWaitReady:yt,decodeAddress:vt,signatureVerify:wt}=r(9754),{u8aToHex:gt}=r(8245);document.addEventListener("DOMContentLoaded",(function(){console.log("DOM is ready."),document.getElementById("log").innerHTML="hello there",async function(){await ft("Academy games");const e=await ht();console.log("Web3 accounts:",e);const t=e[0];console.log("First sender: ",t.address);const r=await async function(e){if(!dt)return lt("web3FromSource");const t=await dt,r=e&&t.find((({name:t})=>t===e));if(!r)throw new Error(`web3FromSource: Unable to find an injected ${e}`);return r}(t.meta.source),n=r?.signer?.signRaw;let i;if(n){const{signature:e}=await n({address:t.address,data:(o="Sign in message",function(e,t=-1,r=!0){const n=r?"0x":"";if(!e||!e.length)return n;if(t>0){const r=Math.ceil(t/8);if(e.length>r)return`${mt(e.subarray(0,r/2),n)}…${mt(e.subarray(e.length-r/2),"")}`}return mt(e,n)}(b(o))),type:"bytes"});i=e,console.log("signature produced",i)}var o;const s=await xt("Sign in message",i,t.address);console.log("Signature verification result: ",s)}()}));const xt=async(e,t,r)=>{await yt();const n=vt(r),i=gt(n);return wt(e,t,i).isValid}})()})();